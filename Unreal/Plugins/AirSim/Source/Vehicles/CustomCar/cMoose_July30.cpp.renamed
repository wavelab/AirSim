/***************************************************
 * Automatically generated by Maple.
 * Created On: Mon Jul 30 16:49:18 2018.
***************************************************/
#ifdef WMI_WINNT
#define EXP __declspec(dllexport)
#else
#ifdef X86_64_WINDOWS
#define EXP __declspec(dllexport)
#else
#define EXP
#endif
#endif
#include "cMoose.h"
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#ifdef FROM_MAPLE
#include <mplshlib.h>
static MKernelVector kv;
EXP ALGEB M_DECL SetKernelVector(MKernelVector kv_in, ALGEB args) { kv=kv_in; return(kv->toMapleNULL()); }
#else
#include <string.h>
#include <stdarg.h>

#define MAXSTRINGLENGTH 1000
#define MAXNUMPART 20


void toMapleError(char *msg, ...)
{
	char fcpy[MAXSTRINGLENGTH+1],*offs[MAXNUMPART+1],
		*msg_pars[MAXNUMPART+1],res_str[MAXSTRINGLENGTH+1];
	long argref[MAXNUMPART],maxargref,npart,v,i,j,res_len;
	va_list argptr;

	if(strlen(msg)>MAXSTRINGLENGTH)
		strcpy(fcpy,"message string is too long");
	else
		strcpy(fcpy,msg);

	maxargref=0;
	npart=0;
	i=0;
	offs[npart]=&fcpy[i];
	for(j=0;fcpy[j]!='\0';j++)
		if(fcpy[j]=='%' && fcpy[j+1]!='%') {
			fcpy[j++]='\0';
			if(fcpy[j]=='-') j++;
			if(fcpy[j]=='\0') break;
			v=0;
			while(fcpy[j]>='0' && fcpy[j]<='9') v=10*v+(fcpy[j++]-'0');
			argref[npart]=v;
			if(v>maxargref) maxargref=v;
			i=j;
			npart++;
			offs[npart]=&fcpy[i];
		}

	va_start(argptr,msg);
	for(i=0;i<maxargref;i++) msg_pars[i] = va_arg(argptr, char*);
	va_end(argptr);

	strcpy(res_str,offs[0]);
	res_len=strlen(res_str);
	for(i=0;i<npart;i++) {
		res_len+=strlen(msg_pars[argref[i]-1]);
		if(res_len>MAXSTRINGLENGTH) {
			strcpy(res_str,"message string is too long");
			break;
		}
		else
			strcat(res_str,msg_pars[argref[i]-1]);

		res_len+=strlen(offs[i+1]);
		if(res_len>MAXSTRINGLENGTH) {
			strcpy(res_str,"message string is too long");
			break;
		}
		else
			strcat(res_str,offs[i+1]);
	}
	for(i=0;i<maxargref;i++) free(msg_pars[i]);
	fprintf(stderr,"Error: %s\n",res_str);
}

char* toMapleInteger(long i)
{
	char *str=(char*)malloc(21);
	sprintf(str,"%li",(long)i);
	return(str);
}

char* toMapleFloat(double f)
{
	char *str=(char*)malloc(20);
	sprintf(str,"%f",f);
	return(str);
}

char* toMapleString(const char *s)
{
	char *str=(char*)malloc(strlen(s)+1);
	strcpy(str,s);
	return(str);
}

char* toMapleBoolean(long b)
{
	char *str=(char*)malloc(6);
	switch(b) {
	case 0:
		strcpy(str,"false");
	default:
		strcpy(str,"true");
	return(str);
	}
}

void toMapleUserinfo(long level, char *name, char *msg)
{
	printf("Info: %s:%s\n",name,msg);
}

typedef struct MKernelVectorDesc {
    void (*error)(char *msg, /* char *par1, *par2, */ ...);
	char* (*toMapleInteger)(long i);
	char* (*toMapleFloat)(double f);
	char* (*toMapleString)(const char *s);
	char* (*toMapleBoolean)(long b);
	void (*userinfo)(long level, char *name, char *msg);
} MKernelVectorDesc, *MKernelVector;

MKernelVectorDesc mykv = {
	&toMapleError,
	&toMapleInteger,
	&toMapleFloat,
	&toMapleString,
	&toMapleBoolean,
	&toMapleUserinfo
};

MKernelVector kv= &mykv;
#ifdef WMI_WINNT
#define M_DECL __stdcall
#else
#define M_DECL
#endif
#endif

/***************************************************
* Variable Definition for System:

* State variable(s):
*    x[ 0] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS1.L3.hubFrameTire`(t)
*    x[ 1] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS2.L3.hubFrameTire`(t)
*    x[ 2] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS3.L3.hubFrameTire`(t)
*    x[ 3] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS4.L3.hubFrameTire`(t)
*    x[ 4] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.C1.tau0_max`(t)
*    x[ 5] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.C1.w_rel`(t)
*    x[ 6] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.I3.w`(t)
*    x[ 7] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.LE3.w_a`(t)
*    x[ 8] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.P1.u1`(t)
*    x[ 9] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.TS1.flange_b.phi`(t)
*    x[10] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.TS2.flange_b.phi`(t)
*    x[11] = `Main.'ThrottleBrake Vehicle May16'.SVM.B4.tau0_max`(t)
*    x[12] = `Main.'ThrottleBrake Vehicle May16'.SVM.B6.tau0_max`(t)
*    x[13] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.eta`(t)
*    x[14] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.eta`(t),t)
*    x[15] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.x`(t)
*    x[16] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.x`(t),t)
*    x[17] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.xi`(t)
*    x[18] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.xi`(t),t)
*    x[19] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.y`(t)
*    x[20] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.y`(t),t)
*    x[21] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.z`(t)
*    x[22] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.z`(t),t)
*    x[23] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.zeta`(t)
*    x[24] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.zeta`(t),t)
*    x[25] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[1]`(t)
*    x[26] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[2]`(t)
*    x[27] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[3]`(t)
*    x[28] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[1]`(t)
*    x[29] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[2]`(t)
*    x[30] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[3]`(t)
*    x[31] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[1]`(t)
*    x[32] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[2]`(t)
*    x[33] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[3]`(t)
*    x[34] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[1]`(t)
*    x[35] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[2]`(t)
*    x[36] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[3]`(t)
*    x[37] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[1]`(t)
*    x[38] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[2]`(t)
*    x[39] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[3]`(t)
*    x[40] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[1]`(t)
*    x[41] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[2]`(t)
*    x[42] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[3]`(t)
*    x[43] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisFL.s`(t)
*    x[44] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.PrisFL.s`(t),t)
*    x[45] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisFR.s`(t)
*    x[46] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.PrisFR.s`(t),t)
*    x[47] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisRL.s`(t)
*    x[48] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.PrisRL.s`(t),t)
*    x[49] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisRR.s`(t)
*    x[50] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.PrisRR.s`(t),t)
*    x[51] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinFL.theta`(t)
*    x[52] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.SpinFL.theta`(t),t)
*    x[53] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinFR.theta`(t)
*    x[54] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.SpinFR.theta`(t),t)
*    x[55] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinRL.theta`(t)
*    x[56] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.SpinRL.theta`(t),t)
*    x[57] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinRR.theta`(t)
*    x[58] = diff(`Main.'ThrottleBrake Vehicle May16'.SVM.SpinRR.theta`(t),t)
*    x[59] = `Main.'ThrottleBrake Vehicle May16'.w_rel`(t)
*    x[60] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS1.L3.hubFrameTire`(t)
*    x[61] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS2.L3.hubFrameTire`(t)
*    x[62] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS3.L3.hubFrameTire`(t)
*    x[63] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS4.L3.hubFrameTire`(t)
*
* Output variable(s):
*    y[ 0] = `Main.'ThrottleBrake Vehicle May16'.CA1[1]`(t)
*    y[ 1] = `Main.'ThrottleBrake Vehicle May16'.CA1[2]`(t)
*    y[ 2] = `Main.'ThrottleBrake Vehicle May16'.CA1[3]`(t)
*    y[ 3] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[1]`(t)
*    y[ 4] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[2]`(t)
*    y[ 5] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[3]`(t)
*    y[ 6] = `Main.'ThrottleBrake Vehicle May16'.CAV1[1]`(t)
*    y[ 7] = `Main.'ThrottleBrake Vehicle May16'.CAV1[2]`(t)
*    y[ 8] = `Main.'ThrottleBrake Vehicle May16'.CAV1[3]`(t)
*    y[ 9] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.x`(t)
*    y[10] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.y`(t)
*    y[11] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.z`(t)
*    y[12] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chasis_Velocity[1]`(t)
*    y[13] = `Main.'ThrottleBrake Vehicle May16'.CV1[2]`(t)
*    y[14] = `Main.'ThrottleBrake Vehicle May16'.CV1[3]`(t)
*    y[15] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[1]`(t)
*    y[16] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[2]`(t)
*    y[17] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[3]`(t)
*    y[18] = `Main.'ThrottleBrake Vehicle May16'.FLWS1`(t)
*    y[19] = `Main.'ThrottleBrake Vehicle May16'.FLWV1`(t)
*    y[20] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[1]`(t)
*    y[21] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[2]`(t)
*    y[22] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[3]`(t)
*    y[23] = `Main.'ThrottleBrake Vehicle May16'.FRWS1`(t)
*    y[24] = `Main.'ThrottleBrake Vehicle May16'.FRWV1`(t)
*    y[25] = `Main.'ThrottleBrake Vehicle May16'.MA1[1]`(t)
*    y[26] = `Main.'ThrottleBrake Vehicle May16'.MA1[2]`(t)
*    y[27] = `Main.'ThrottleBrake Vehicle May16'.MA1[3]`(t)
*    y[28] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[1]`(t)
*    y[29] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[2]`(t)
*    y[30] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[3]`(t)
*    y[31] = `Main.'ThrottleBrake Vehicle May16'.MAV1[1]`(t)
*    y[32] = `Main.'ThrottleBrake Vehicle May16'.MAV1[2]`(t)
*    y[33] = `Main.'ThrottleBrake Vehicle May16'.MAV1[3]`(t)
*    y[34] = `Main.'ThrottleBrake Vehicle May16'.MP1[1]`(t)
*    y[35] = `Main.'ThrottleBrake Vehicle May16'.MP1[2]`(t)
*    y[36] = `Main.'ThrottleBrake Vehicle May16'.MP1[3]`(t)
*    y[37] = `Main.'ThrottleBrake Vehicle May16'.MV1[1]`(t)
*    y[38] = `Main.'ThrottleBrake Vehicle May16'.MV1[2]`(t)
*    y[39] = `Main.'ThrottleBrake Vehicle May16'.MV1[3]`(t)
*    y[40] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[1]`(t)
*    y[41] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[2]`(t)
*    y[42] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[3]`(t)
*    y[43] = `Main.'ThrottleBrake Vehicle May16'.RLWP1[1]`(t)
*    y[44] = `Main.'ThrottleBrake Vehicle May16'.RLWP1[2]`(t)
*    y[45] = `Main.'ThrottleBrake Vehicle May16'.RLWP1[3]`(t)
*    y[46] = `Main.'ThrottleBrake Vehicle May16'.RLWS1`(t)
*    y[47] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[1]`(t)
*    y[48] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[2]`(t)
*    y[49] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[3]`(t)
*    y[50] = `Main.'ThrottleBrake Vehicle May16'.RRWP1[1]`(t)
*    y[51] = `Main.'ThrottleBrake Vehicle May16'.RRWP1[2]`(t)
*    y[52] = `Main.'ThrottleBrake Vehicle May16'.RRWP1[3]`(t)
*    y[53] = `Main.'ThrottleBrake Vehicle May16'.RRWS1`(t)
*    y[54] = `Main.'ThrottleBrake Vehicle May16'.TMOV1[1]`(t)
*    y[55] = `Main.'ThrottleBrake Vehicle May16'.TMOV1[2]`(t)
*    y[56] = `Main.'ThrottleBrake Vehicle May16'.TMOV1[3]`(t)
*    y[57] = `Main.'ThrottleBrake Vehicle May16'.TMOV2[1]`(t)
*    y[58] = `Main.'ThrottleBrake Vehicle May16'.TMOV2[2]`(t)
*    y[59] = `Main.'ThrottleBrake Vehicle May16'.TMOV2[3]`(t)
*    y[60] = `Main.'ThrottleBrake Vehicle May16'.w_eng`(t)
*    y[61] = `Main.'ThrottleBrake Vehicle May16'.w_mot`(t)
*    y[62] = `Main.'ThrottleBrake Vehicle May16'.w_r`(t)
*    y[63] = `Main.'ThrottleBrake Vehicle May16'.w_rel`(t)
*    y[64] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS1.L3.hubFrameTire`(t)
*    y[65] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS2.L3.hubFrameTire`(t)
*    y[66] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS3.L3.hubFrameTire`(t)
*    y[67] = `LSPMain.'ThrottleBrake Vehicle May16'.SVM.FTSS4.L3.hubFrameTire`(t)
*    y[68] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.C1.tau0_max`(t)
*    y[69] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.C1.w_rel`(t)
*    y[70] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.I3.w`(t)
*    y[71] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.LE3.w_a`(t)
*    y[72] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.P1.u1`(t)
*    y[73] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.TS1.flange_b.phi`(t)
*    y[74] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.TS2.flange_b.phi`(t)
*    y[75] = `Main.'ThrottleBrake Vehicle May16'.SVM.B4.tau0_max`(t)
*    y[76] = `Main.'ThrottleBrake Vehicle May16'.SVM.B6.tau0_max`(t)
*    y[77] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.eta`(t)
*    y[78] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.x`(t)
*    y[79] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.xi`(t)
*    y[80] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.y`(t)
*    y[81] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.z`(t)
*    y[82] = `Main.'ThrottleBrake Vehicle May16'.SVM.Chassis.zeta`(t)
*    y[83] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[1]`(t)
*    y[84] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[2]`(t)
*    y[85] = `Main.'ThrottleBrake Vehicle May16'.SVM.I1.y[3]`(t)
*    y[86] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[1]`(t)
*    y[87] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[2]`(t)
*    y[88] = `Main.'ThrottleBrake Vehicle May16'.SVM.I2.y[3]`(t)
*    y[89] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[1]`(t)
*    y[90] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[2]`(t)
*    y[91] = `Main.'ThrottleBrake Vehicle May16'.SVM.I3.y[3]`(t)
*    y[92] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[1]`(t)
*    y[93] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[2]`(t)
*    y[94] = `Main.'ThrottleBrake Vehicle May16'.SVM.I4.y[3]`(t)
*    y[95] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[1]`(t)
*    y[96] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[2]`(t)
*    y[97] = `Main.'ThrottleBrake Vehicle May16'.SVM.I5.y[3]`(t)
*    y[98] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[1]`(t)
*    y[99] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[2]`(t)
*    y[100] = `Main.'ThrottleBrake Vehicle May16'.SVM.I6.y[3]`(t)
*    y[101] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisFL.s`(t)
*    y[102] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisFR.s`(t)
*    y[103] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisRL.s`(t)
*    y[104] = `Main.'ThrottleBrake Vehicle May16'.SVM.PrisRR.s`(t)
*    y[105] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinFL.theta`(t)
*    y[106] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinFR.theta`(t)
*    y[107] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinRL.theta`(t)
*    y[108] = `Main.'ThrottleBrake Vehicle May16'.SVM.SpinRR.theta`(t)
*    y[109] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS1.L3.hubFrameTire`(t)
*    y[110] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS2.L3.hubFrameTire`(t)
*    y[111] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS3.L3.hubFrameTire`(t)
*    y[112] = `TSAMain.'ThrottleBrake Vehicle May16'.SVM.FTSS4.L3.hubFrameTire`(t)
*
* Input variable(s):
*    u[ 0] = `Main.'ThrottleBrake Vehicle May16'.APP`(t)
*    u[ 1] = `Main.'ThrottleBrake Vehicle May16'.BPP`(t)
*    u[ 2] = `Main.'ThrottleBrake Vehicle May16'.Steer`(t)
*
* Parameter(s):
*    p[ 0] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.I_eng` (default = .14)
*    p[ 1] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.I_gen` (default = .15e-1)
*    p[ 2] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.I_mot` (default = .15)
*    p[ 3] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.R_mot2wh` (default = 10.39)
*    p[ 4] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.R_ring2wh` (default = 4.08)
*    p[ 5] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.d` (default = 0.)
*    p[ 6] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.eff_2` (default = 1.)
*    p[ 7] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.eff_f` (default = 1.)
*    p[ 8] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.eff_r1` (default = .98)
*    p[ 9] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.eff_s` (default = .985)
*    p[10] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.n_p` (default = 3.)
*    p[11] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.rho` (default = .395)
*    p[12] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.w_eng0` (default = 25.)
*    p[13] = `Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.w_wh0` (default = .1e2)
*    p[14] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Tdsd_thresh` (default = .1e2)
*    p[15] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Teng_max` (default = .2e3)
*    p[16] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Teng_min` (default = -.1e3)
*    p[17] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Tgen_max` (default = .6e2)
*    p[18] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Tgen_min` (default = -.6e2)
*    p[19] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Tgen_thresh` (default = 3.)
*    p[20] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Tmot_max` (default = .3e3)
*    p[21] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Tmot_min` (default = -.25e3)
*    p[22] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.Ts` (default = .5e-1)
*    p[23] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.brake` (default = 1.)
*    p[24] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.ignite` (default = .95e3)
*    p[25] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.modeoffset` (default = .1)
*    p[26] = `Main.'ThrottleBrake Vehicle May16'.'Powertrain Control Module_1'.parameters_3.wmot_thresh` (default = .1e2)
*
************************************************/

/* Set up fixed initial condition mask */
long icmask[64] = {
	1,1,1,1,0,1,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,0,0,0,0,0,0,0,0,0,
	1,1,1,1};

/* Set up visible initial condition mask */
long icvis[64] = {
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1,1,1,1,1,1,1,
	1,1,1,1};

/* Configurable parameters */
#define CONITER 30
#define CONTOL 1.000000e-05
#define INITCONITER 100
#define INITCONTOL 1.000000e-10
#define INITITER 50
#define INITTOL 1.000000e-08
#define INITWEIGHT 2.000000e+01
#define EVTITER 10
#define EVTPROJ 1
#define EVTHYST 1.000000e-10
#define INCONTOL 1e200

/* Fixed parameters */
#define NDIFF 64
#define NSDIFF 64
#define NDISC 118
#define NIX1 204
#define NCON 2
#ifdef EVTHYST
#define NZC 2*NEVT
#else
#define NZC NEVT
#endif

static void SolverError(SolverStruct *S, int term, char const *errmsg)
{
#ifdef FROM_MAPLE
	long i;
#endif
	if(term)
		sprintf(S->buf,"Simulation terminated at t=%20.16e: %s\n",S->w[0],errmsg);
	else
		sprintf(S->buf,"Error at t=%20.16e: %s\n",S->w[0],errmsg);
#ifdef FROM_MAPLE
	for(i=0;S->buf[i]!='\0';i++);
	S->buf[i-1]='\0';
	if(S->err==-1) kv->error(S->buf);
#endif
	S->err=1;
}

static double dsn_zero=0.0;
static unsigned char dsn_undefC[8] = { 0, 0, 0, 0, 0, 0, 0xF8, 0x7F };
static double *dsn_undef = (double *)&dsn_undefC;
static unsigned char dsn_posinfC[8] = { 0, 0, 0, 0, 0, 0, 0xF0, 0x7F };
static double *dsn_posinf = (double *)&dsn_posinfC;
static unsigned char dsn_neginfC[8] = { 0, 0, 0, 0, 0, 0, 0xF0, 0xFF };
static double *dsn_neginf = (double *)&dsn_neginfC;
#define trunc(v) ( (v>0.0) ? floor(v) : ceil(v) )
#define IS_UNDEF(a) (a-a!=0. || (a!=0. && a-2.*a==0.))


#ifdef MSVC
#pragma optimize( "gty", on)
#endif
#ifndef INCONTOL
#define INCONTOL 1e-14
#endif

static void LSQDecompSolve(long n, double *A, long Ainc, long *ip, double *b)
{
	long i,j,k,r,c,lsq,cp;
	double s,t;

	for(i=0;i<n;i++) {
		if(b[i]-b[i]!=0.0 || (b[i]!=0. && b[i]-2.*b[i]==0.)) { ip[n-1]=0; A[0]=1.; for(j=0;j<n;j++) b[j]=*dsn_undef; return; }
		t = fabs(A[i*Ainc]);
		for(j=1;j<n;j++) {
			s = fabs(A[i*Ainc+j]);
			if(s>t) t = s;
		}
		if( t==0.0 )
			A[i*Ainc+n] = 1.0;
		else {
			t = 1.0/t;
			for(j=0;j<n;j++) A[i*Ainc+j] *= t;
			b[i] *= t;
			A[i*Ainc+n] = t;
		}
	}

	for(j=0;j<n;j++) {
		t = fabs(A[j]);
		for(i=1;i<n;i++) {
			s = fabs(A[i*Ainc+j]);
			if(s>t) t = s;
		}
		if( t==0.0 )
			A[n*Ainc+j] = 1.0;
		else {
			t = 1.0/t;
			for(i=0;i<n;i++) A[i*Ainc+j] *= t;
			A[n*Ainc+j] = t;
		}
	}

	ip[n-1] = 0;
	lsq = 0;
	cp = 0;
	for(k=0;k<n;k++) {
		r = 0; c = 0; t = 0.0;
		if( cp<n ) {
			for(cp=cp+1;cp<n;cp++) {
				for(i=k;i<n;i++) {
					s = fabs(A[i*Ainc+cp]);
					if(s>t) { r = i; c = cp; t = s; }
				}
				if( t>0.5 ) break;
			}
		}
		if( cp>=n ) {
			for(i=k;i<n;i++)
				for(j=k;j<n;j++) {
					s = fabs(A[i*Ainc+j]);
					if(s>t) { r = i; c = j; t = s; }
				}
		}
		if( t<1e-10 ) {
			if( k==0 ) { ip[n-1]=0; A[0]=2.; for(j=0;j<n;j++) b[j]=*dsn_undef; return; }
			if( lsq ) { ip[n-1]=0; A[0]=3.; for(j=0;j<n;j++) b[j]=*dsn_undef; return; }
			lsq = 1;
			t = 1e-16;
			for(i=0;i<k;i++) {
				s = fabs(b[i]);
				if(s>t) t = s;
			}
			for(i=k;i<n;i++) {
				if( fabs(b[i])/t>INCONTOL*n ) { ip[n-1]=0; A[0]=4.; for(j=0;j<n;j++) b[j]=*dsn_undef; return; }
				b[i] = 0.0;
			}

			for(r=k;r<n;r++) {
				for(i=k;i<n;i++) A[i*Ainc+n+r] = 0.0; A[r*Ainc+n+r] = 1.0;
   			A[(k-1)*Ainc+n+r] = -A[(k-1)*Ainc+r]/A[(k-1)*Ainc+k-1];
   			for(i=k-1;i>=0;i--) {
					A[i*Ainc+n+r] = A[i*Ainc+r];
      			for(j=i+1;j<k;j++)
         			A[i*Ainc+n+r] += A[i*Ainc+j]*A[j*Ainc+n+r];
      			A[i*Ainc+n+r] = -A[i*Ainc+n+r]/A[i*(Ainc+1)];
   			}
			}
			for(r=0;r<k;r++) {
				s = -1.0/A[r*(Ainc+1)];
				for(i=k;i<n;i++)
					if( A[r*Ainc+n+i]!=0.0 ) {
						t = s*A[r*Ainc+n+i];
						A[i*Ainc+r] += t;
						for(j=r+1;j<n;j++)
							A[j*Ainc+n+i] += t*A[r*Ainc+j];
						b[i] += t*b[r];
					}
			}
			for(i=k;i<n;i++)
				for(j=k;j<n;j++)
					A[i*Ainc+j] = A[j*Ainc+n+i];
			r = 0; c = 0; t = 0.0;
			for(i=k;i<n;i++)
				for(j=k;j<n;j++) {
					s = fabs(A[i*Ainc+j]);
					if(s>t) { r = i; c = j; t = s; }
				}
			if( t<1e-10 ) { ip[n-1]=0; A[0]=3.; for(j=0;j<n;j++) b[j]=*dsn_undef; return; }
		}
		if( !lsq ) ip[n-1]++;
		if( k==n-1 ) break;
		ip[k] = r;
		ip[n+k] = c;
		if( r>k ) {
			for(j=0;j<n;j++) {
				t = A[r*Ainc+j]; A[r*Ainc+j] = A[k*Ainc+j]; A[k*Ainc+j] = t;
			}
			t = b[r]; b[r] = b[k]; b[k] = t;
		}
		if( c>k )
			for(i=0;i<n;i++) {
				t = A[i*Ainc+c]; A[i*Ainc+c] = A[i*Ainc+k]; A[i*Ainc+k] = t;
			}
		s = -1.0/A[k*(Ainc+1)];
		for(i=k+1;i<n;i++)
			if( A[i*Ainc+k]!=0.0 ) {
				t = s*A[i*Ainc+k];
				A[i*Ainc+k] = t;
				for(j=k+1;j<n;j++)
					A[i*Ainc+j] += t*A[k*Ainc+j];
				b[i] += t*b[k];
			}
	}
	for(j=n-1;j>0;j--) {
		b[j] = b[j]/A[j*(Ainc+1)];
		t = -b[j];
		for(i=0;i<j;i++)
			b[i] += t*A[i*Ainc+j];
	}
	b[0] = b[0]/A[0];
	for(j=n-2;j>=0;j--) {
		i = ip[n+j];
		if(i!=j) {
			t = b[i]; b[i] = b[j]; b[j] = t;
		}
	}
	for(j=0;j<n;j++) b[j] *= A[n*Ainc+j];
}
#ifdef MSVC
#pragma optimize( "", on)
#endif

#ifdef MSVC
#pragma optimize( "gty", on)
#endif
static void DecompCInc(long n, double *A, long Ainc, long *ip)
{
	long i,j,k,m;
	double t;

	ip[n-1]=1;
	for(k=0;k<n-1;k++) {
		m=k;
		for(i=k+1;i<n;i++)
			if( fabs(A[i*Ainc+k])>fabs(A[m*Ainc+k]) ) m=i;
		ip[k]=m;
		if( m!=k ) ip[n-1]=-ip[n-1];
		t=A[m*Ainc+k]; A[m*Ainc+k]=A[(Ainc+1)*k]; A[(Ainc+1)*k]=t;
		if( t==0.0 ) { ip[n-1]=0; return; }
		t=-1.0/t;
		for(i=k+1;i<n;i++) A[i*Ainc+k]=A[i*Ainc+k]*t;
		for(j=k+1;j<n;j++) {
			t=A[m*Ainc+j]; A[m*Ainc+j]=A[k*Ainc+j]; A[k*Ainc+j]=t;
			if( t!=0.0 )
				for(i=k+1;i<n;i++) A[i*Ainc+j]+=A[i*Ainc+k]*t;
		}
	}
	if(A[(n-1)*(Ainc+1)]==0.0) ip[n-1]=0;
}
static void DecompC(long n, double *A, long *ip) { DecompCInc(n,A,n,ip); }

#ifdef MSVC
#pragma optimize( "", on)
#endif

#ifdef MSVC
#pragma optimize( "gty", on)
#endif
static void MultiSolveCInc(long n, double *A, long Ainc, long *ip, long nb, double *b, long binc)
{
	long i,j,k,m;
	double t;

	if( n>1 ) {
		for(j=0;j<n-1;j++) {
			m=ip[j];
			for(k=0;k<nb;k++) {
				t=b[m*binc+k]; b[m*binc+k]=b[j*binc+k]; b[j*binc+k]=t;
				for(i=j+1;i<n;i++) b[i*binc+k]+=A[i*Ainc+j]*t;
			}
		}
		for(j=n-1;j>0;j--) {
			for(k=0;k<nb;k++) {
				b[j*binc+k]=b[j*binc+k]/A[(Ainc+1)*j];
				t=-b[j*binc+k];
				for(i=0;i<=j-1;i++) b[i*binc+k]+=A[i*Ainc+j]*t;
			}
		}
	}
	for(k=0;k<nb;k++)
		b[k]=b[k]/A[0];
}
static void MultiSolveC(long n, double *A, long *ip, long nb, double *b) { MultiSolveCInc(n,A,n,ip,nb,b,nb); }

#ifdef MSVC
#pragma optimize( "", on)
#endif

static void fp(long N, double T, double *Y, double *YP)
{
	double M[3120], V[39], Z[399];
	long P[77], ti1, ti2;

	YP[13] = Y[14];
	YP[15] = Y[16];
	YP[17] = Y[18];
	YP[19] = Y[20];
	YP[21] = Y[22];
	YP[23] = Y[24];
	YP[43] = Y[44];
	YP[45] = Y[46];
	YP[47] = Y[48];
	YP[49] = Y[50];
	YP[51] = Y[52];
	YP[53] = Y[54];
	YP[55] = Y[56];
	YP[57] = Y[58];
	if( Y[313]==1. )
		Y[110] = 0.6;
	else
		Y[110] = Y[266];
	if( Y[314]==1. )
		Y[83] = 0.1385;
	else
		Y[83] = Y[110];
	Z[0] = Y[289];
	Z[1] = Y[290];
	Z[2] = Y[293];
	Z[3] = 1.+exp(0.00008450763496000000139*Z[1]+0.000315278738799999998*Z[2]+0.0005037392528000000002*Z[0]-0.0019783356);
	Z[0] = 1.+exp(-0.0146045799800000007*Z[0]+0.03145354740000000086*Z[1]+1.984229856-0.0007411698689999999887*Z[2]);
	Z[0] = 1.0/Z[0];
	Z[1] = 1.0/Z[3];
	Z[0] = 563.9595015*Z[0]-11706.40861*Z[1]+5813.753691;
	if( Z[0]>2985. )
		Y[172] = 2985.;
	else
		Y[172] = Z[0];
	if( Y[317]==1. )
		Y[86] = 0.;
	else
		Y[86] = Y[172];
	Z[0] = Y[290];
	Z[1] = Y[292];
	Z[2] = Y[294];
	Y[154] = exp(-0.006509894979999999948*Z[1]-1.104309592999999974*Z[2]-0.00004049561058000000193*Y[86]-0.00407676428999999991*Z[0]+8.698917606399999846);
	Z[3] = Y[154]+1.;
	Z[3] = 1.0/Z[3];
	Y[155] = Z[3];
	Y[156] = exp(-0.01308644105999999952*Z[0]-6.78042825*Z[2]-0.0003326444279999999698*Z[1]-0.0007575064857999999843*Y[86]+8.074939774800000779);
	Z[3] = Y[156]+1.;
	Z[3] = 1.0/Z[3];
	Y[157] = Z[3];
	Y[158] = exp(0.001214909664000000081*Z[1]-0.005774924930000000014*Z[0]-1.338672356000000078*Z[2]+0.0004592437716000000222*Y[86]-1.659525665600000118);
	Z[0] = 1.+Y[158];
	Z[0] = 1.0/Z[0];
	Y[159] = Z[0];
	Y[160] = exp(-13.330746*Y[157]-1.882491648*Y[155]+9.012985301999999699+6.12882602*Y[159]);
	Y[161] = exp(3.534658292000000181*Y[157]-1.405248497000000007*Y[159]+5.409651545999999704-16.17475581000000135*Y[155]);
	Y[162] = exp(-7.111244464*Y[159]+18.34747718999999921*Y[155]-12.30903434+10.32570107*Y[157]);
	Z[0] = Y[160]+Y[161]+Y[162];
	Z[0] = 1.0/Z[0];
	Y[163] = Z[0];
	Y[91] = Y[160]*Y[163];
	Y[92] = Y[161]*Y[163];
	if( Y[92]<Y[91] )
		Y[93] = Y[91];
	else
		Y[93] = Y[92];
	Y[94] = Y[162]*Y[163];
	if( Y[318]==1. )
		Y[164] = 1.;
	else
		Y[164] = 2.;
	if( Y[319]==1. )
		Y[165] = Y[164];
	else
		Y[165] = 3.;
	Y[87] = fabs(Y[165]-3.);
	Y[88] = fabs(Y[165]-2.);
	Y[89] = fabs(1.-Y[165]);
	Y[90] = fabs(Y[294]-2.);
	if( Y[309]==1. )
		Y[153] = 2.;
	else
		Y[153] = Y[165];
	if( Y[308]==1. )
		Y[152] = 3.;
	else
		Y[152] = Y[153];
	if( Y[307]==1. )
		Y[166] = 1.;
	else
		Y[166] = Y[152];
	Z[0] = Y[290];
	Y[150] = exp(-0.0694599175*Z[0]-0.001172770010000000011*Y[86]+4.346906143999999919);
	Z[1] = 1.+Y[150];
	Z[1] = 1.0/Z[1];
	Y[142] = Z[1];
	Y[143] = exp(0.005362758708000000003*Y[86]+0.1416826747999999993*Z[0]-10.32393769600000021);
	Z[1] = Y[143]+1.;
	Z[1] = 1.0/Z[1];
	Y[144] = Z[1];
	Y[145] = exp(0.004251978384000000178*Y[86]-0.02152778822000000103*Z[0]+1.140205516799999893);
	Z[0] = Y[145]+1.;
	Z[0] = 1.0/Z[0];
	Y[146] = Z[0];
	Y[147] = exp(5.391837056*Y[146]-7.449609221999999872-6.406134936000000336*Y[142]+10.06095687000000039*Y[144]);
	Y[148] = exp(6.019258172000000288*Y[142]-11.02172041000000084*Y[144]+8.766283122999999789-6.57330262200000004*Y[146]);
	Z[0] = Y[147]+Y[148];
	Z[0] = 1.0/Z[0];
	Y[149] = Z[0];
	Y[84] = Y[147]*Y[149]-Y[411];
	Y[85] = Y[148]*Y[149]+Y[411];
	if( Y[328]==1. )
		Y[151] = 1.;
	else
		Y[151] = 2.;
	if( Y[326]==1. )
		Y[167] = 1.;
	else
		Y[167] = Y[151];
	if( Y[327]==1. )
		Y[82] = Y[166];
	else
		Y[82] = Y[167];
	if( Y[329]==1. )
		Y[70] = 1.;
	else
		Y[70] = 0.;
	Z[398] = fabs(1.-Y[82]);
	Y[75] = Z[398];
	Y[76] = fabs(Y[82]-2.);
	Z[0] = Y[292];
	Z[1] = Y[291];
	Y[133] = exp(-0.023422418*Y[82]-1.480977187000000037e-06*Z[1]+7.630147083999999984e-06*Z[0]+0.0004510015627999999912*Y[86]-0.1874543644135999964);
	Y[134] = exp(-0.000852900286000000071*Y[86]+4.940390030000000233*Y[82]+7.649075493999999985e-06*Z[1]-0.002044945318000000033*Z[0]-5.236141851967999733);
	Z[2] = Y[134]+1.;
	Z[2] = 1.0/Z[2];
	Y[135] = Z[2];
	Y[136] = exp(0.0005388736785999999701*Z[1]-0.002351850793999999966*Z[0]-1.725444265000000061*Y[82]+0.0004967711692000000315*Y[86]+6.512219151999999956);
	Z[2] = 1.+Y[136];
	Z[2] = 1.0/Z[2];
	Y[137] = Z[2];
	Y[138] = exp(0.01296364585000000006*Z[0]+11.18816088*Y[82]+0.0006675389727999999919*Z[1]-0.004988160068000000009*Y[86]-50.29154530080000014);
	Z[2] = 1.+Y[138];
	Z[2] = 1.0/Z[2];
	Y[139] = Z[2];
	Y[140] = exp(0.00273488415799999981*Y[86]-5.303485176000000159*Y[82]+0.0003078136158000000077*Z[1]-0.001044729023000000002*Z[0]+16.43925461887999997);
	Z[0] = 1.+Y[140];
	Z[0] = 1.0/Z[0];
	Y[141] = Z[0];
	Z[0] = Y[133]+1.;
	Z[0] = 1.0/Z[0];
	Y[79] = 22.8834652+3.167767011000000285*Y[141]-31.1664187*Y[137]-45.45661445*Z[0]-22.15198442*Y[135]+15.57240473*Y[139];
	if( Y[301]==1. )
		Y[127] = 0.;
	else
		Y[127] = -1.218955439388205472*Y[79]+2.723265917998220569*Y[135]+17.3375249375907092-18.70990944001188124*Y[139]+90.68710669938471643*Y[137]-106.3212786712270323*Y[141];
	if( Y[402]<Y[127] )
		Y[126] = Y[127];
	else
		Y[126] = Y[402];
	Z[393] = fabs(Y[86]);
	Y[81] = Z[393];
	if( Y[126]<Y[401] )
		Y[169] = Y[126];
	else
		Y[169] = Y[401];
	Y[80] = Z[398];
	if( Y[306]==1. )
		Y[132] = Y[405]-1.;
	else
		Y[132] = Y[79];
	if( Y[305]==1. )
		Y[131] = 0.;
	else
		Y[131] = Y[132];
	if( Y[404]<Y[131] )
		Y[130] = Y[131];
	else
		Y[130] = Y[404];
	Y[78] = Z[393];
	if( Y[130]<Y[403] )
		Y[170] = Y[130];
	else
		Y[170] = Y[403];
	Y[77] = Z[398];
	if( Y[303]==1. )
		Y[129] = 0.;
	else
		Y[129] = 19.95250828672305577*Y[79]-32.49955842738542988*Y[141]+47.18511896806133128-296.4914221895303092*Y[139]+413.4673298174100238*Y[135]+582.078241979230407*Y[137];
	if( Y[407]<Y[129] )
		Y[128] = Y[129];
	else
		Y[128] = Y[407];
	if( Y[128]<Y[406] )
		Y[171] = Y[128];
	else
		Y[171] = Y[406];
	Z[389] = sin(Y[13]);
	Y[186] = Z[389]*Y[18]+Y[24];
	Z[379] = cos(Y[17]);
	Z[380] = cos(Y[55]);
	Z[381] = sin(Y[55]);
	Z[382] = sin(Y[17]);
	Z[383] = cos(Y[57]);
	Z[384] = cos(Y[53]);
	Z[385] = sin(Y[53]);
	Z[386] = cos(Y[23]);
	Z[387] = sin(Y[57]);
	Z[388] = cos(Y[51]);
	Z[390] = cos(Y[13]);
	Z[391] = sin(Y[23]);
	Z[392] = sin(Y[51]);
	Z[394] = atan(Y[60]);
	Z[395] = atan(Y[63]);
	Z[396] = atan(Y[62]);
	Z[397] = atan(Y[61]);
	for(ti1=0;ti1<=38;ti1++)
		for(ti2=0;ti2<=38;ti2++)
			M[ti1*78+ti2] = 0.;
	for(ti1=0;ti1<=38;ti1++)
		V[ti1] = 0.;
	M[2357] = -1.;
	if( Y[272]==1. ) {
		M[1039] = 0.0001;
		V[13] = -0.0001*Y[56];
		M[2363] = -1.;
	}
	else {
		M[1037] = -1.;
		M[2365] = 0.0001;
		if( Y[315]!=1. ) {
			if( Y[274]==1. ) {
				V[13] = Y[11];
				V[30] = -Y[11];
			}
			else if( Y[273]==1. ) {
				V[13] = -Y[11];
				V[30] = Y[11];
			}
			else if( Y[268]==1. ) {
				V[13] = Y[11];
				V[30] = -Y[11];
			}
			else {
				V[13] = -Y[11];
				V[30] = Y[11];
			}
		}
	}
	M[2436] = -1.;
	if( Y[275]==1. ) {
		M[1196] = 0.0001;
		V[15] = -0.0001*Y[58];
		M[2442] = -1.;
	}
	else {
		M[1194] = -1.;
		M[2444] = 0.0001;
		if( Y[315]!=1. ) {
			if( Y[277]==1. ) {
				V[15] = Y[11];
				V[31] = -Y[11];
			}
			else if( Y[276]==1. ) {
				V[15] = -Y[11];
				V[31] = Y[11];
			}
			else if( Y[269]==1. ) {
				V[15] = Y[11];
				V[31] = -Y[11];
			}
			else {
				V[15] = -Y[11];
				V[31] = Y[11];
			}
		}
	}
	M[2515] = -1.;
	if( Y[278]==1. ) {
		M[1509] = 0.0001;
		V[19] = -0.0001*Y[52];
		M[2517] = -1.;
		M[2534] = -1.;
	}
	else {
		M[1503] = -1.;
		M[1520] = -1.;
		M[2523] = 0.0001;
		if( Y[316]!=1. ) {
			if( Y[280]==1. ) {
				V[19] = Y[12];
				V[32] = -Y[12];
			}
			else if( Y[279]==1. ) {
				V[19] = -Y[12];
				V[32] = Y[12];
			}
			else if( Y[270]==1. ) {
				V[19] = Y[12];
				V[32] = -Y[12];
			}
			else {
				V[19] = -Y[12];
				V[32] = Y[12];
			}
		}
	}
	M[2594] = -1.;
	if( Y[281]==1. ) {
		M[1666] = 0.0001;
		V[21] = -0.0001*Y[54];
		M[2596] = -1.;
		M[2612] = -1.;
	}
	else {
		M[1660] = -1.;
		M[1676] = -1.;
		M[2602] = 0.0001;
		if( Y[316]!=1. ) {
			if( Y[283]==1. ) {
				V[21] = Y[12];
				V[33] = -Y[12];
			}
			else if( Y[282]==1. ) {
				V[21] = -Y[12];
				V[33] = Y[12];
			}
			else if( Y[271]==1. ) {
				V[21] = Y[12];
				V[33] = -Y[12];
			}
			else {
				V[21] = -Y[12];
				V[33] = Y[12];
			}
		}
	}
	M[2681] = -1.;
	if( Y[285]==1. ) {
		M[1825] = 0.0001;
		V[23] = -0.01*Y[5];
		M[2690] = 2.;
	}
	else {
		M[1832] = 2.;
		M[2683] = 0.0001;
		if( Y[312]!=1. ) {
			if( Y[287]==1. ) {
				V[23] = Y[4];
				V[34] = -Y[4];
			}
			else if( Y[286]==1. ) {
				V[23] = -Y[4];
				V[34] = Y[4];
			}
			else if( Y[284]==1. ) {
				V[23] = Y[4];
				V[34] = -Y[4];
			}
			else {
				V[23] = -Y[4];
				V[34] = Y[4];
			}
		}
	}
	if( ( (Y[359]==1.) && (Y[357]==1.) ) || ( (Y[359]==0.) && (Y[357]==0.) ) )
		M[1904] = Y[393]-1.;
	else
		M[1904] = (1.-Y[393])/Y[393];
	M[1905] = 1.;
	Z[0] = 1.0/Y[389];
	if( ( (Y[358]==1.) && (Y[350]==1.) ) || ( (Y[358]==0.) && (Y[350]==0.) ) )
		M[1980] = Y[389]*Y[392]*Z[0];
	else
		M[1980] = Y[389]*((1.-Y[392])/Y[392]+1.)*Z[0];
	M[1982] = -Z[0];
	M[1983] = Z[0];
	M[1984] = Y[390]*Z[0];
	if( ( (Y[360]==1.) && (Y[351]==1.) ) || ( (Y[360]==0.) && (Y[351]==0.) ) ) {
		Z[0] = 1.-Y[394];
		Z[1] = Y[397]*Y[397];
		Z[2] = 1.-Z[1];
		Z[3] = 1.-Y[397];
		Z[2] = 1.0/Z[2];
		Z[4] = 1.0/Z[3];
		M[2842] = Y[397]*((((1.-Z[0])*Y[397]+Z[0]-1.)*Y[397]+Z[0]-1.)*Y[397]+1.-Z[0])*Z[2]*Z[4];
	}
	else {
		Z[0] = ((Y[397]-1.)*Y[397]-1.)*Y[397];
		Z[1] = Y[397]*Y[397];
		Z[2] = 1.-Z[1];
		Z[3] = 1.-Y[397];
		Z[2] = 1.0/Z[2];
		Z[4] = 1.0/Z[3];
		M[2842] = Y[397]*(((Z[0]+1.)*(1.-Y[394]))/Y[394]+Z[0]+1.)*Z[2]*Z[4];
	}
	Z[0] = ((-(Z[3]*Y[397]+1.))*Y[397]+1.)*Z[2]*Z[4];
	M[2843] = -Z[0];
	M[2844] = -Z[0];
	V[36] = 4.*Y[391]*Y[396]*Z[1]*(Y[7]*Y[390]-Y[6])*Z[2]*Z[4];
	if( ( (Y[361]==1.) && (Y[349]==1.) ) || ( (Y[361]==0.) && (Y[349]==0.) ) )
		M[2921] = 1.-Y[395];
	else
		M[2921] = (1.*(Y[395]-1.))/Y[395];
	M[2922] = 1.;
	M[3001] = 1.;
	if( Y[330]==1. )
		V[38] = Y[169];
	else {
		M[2998] = 1.;
		M[2999] = 1.;
		Z[0] = Y[397]+1.;
		Z[0] = 1.0/Z[0];
		V[38] = -(Y[6]*Y[397]+Y[7]*Y[390])*Z[0];
	}
	Z[0] = Z[382];
	Z[1] = Z[389];
	Z[2] = Z[386];
	Z[3] = Z[379];
	Z[4] = Z[391];
	Z[5] = Z[0]*Z[1];
	Z[6] = Z[2]*Z[5];
	Z[7] = Z[3]*Z[4];
	Z[8] = Z[7]+Z[6];
	Z[9] = Z[390];
	Z[10] = Z[5]*Z[4];
	Z[11] = Z[3]*Z[2];
	Z[12] = Z[10]-Z[11];
	Z[13] = 15.*(Z[2]*Z[8]+Z[4]*Z[12]-Z[5])*Z[9];
	M[0] = -Z[13];
	M[1] = -Z[13];
	M[2] = -Z[13];
	M[3] = -Z[13];
	Z[13] = 0.7396;
	Z[14] = 1.3745*Z[3];
	Z[15] = 0.25*Z[1];
	Z[16] = Z[9]*(Z[14]-Z[0]*Z[13])+Z[15];
	Z[17] = Z[1]*Y[43]-Z[16];
	Z[18] = Z[2]*Z[17];
	Z[19] = 0.8389;
	Z[20] = 1.4755*Z[3];
	Z[21] = Z[9]*(Z[0]*Z[19]-Z[20])+Z[15];
	Z[22] = Z[1]*Y[49]-Z[21];
	Z[23] = Z[2]*Z[22];
	Z[24] = 0.8424;
	Z[14] = Z[9]*(Z[0]*Z[24]+Z[14])+Z[15];
	Z[25] = Z[1]*Y[45]-Z[14];
	Z[26] = Z[2]*Z[25];
	Z[27] = 0.7361;
	Z[15] = Z[15]-Z[9]*(Z[0]*Z[27]+Z[20]);
	Z[20] = Z[1]*Y[47]-Z[15];
	Z[28] = Z[4]*Z[20];
	Z[29] = Z[4]*Z[17];
	Z[30] = Z[4]*Z[22];
	Z[31] = Z[2]*Z[20];
	Z[32] = Z[4]*Z[25];
	Z[33] = Z[1]*Z[3];
	Z[34] = Z[0]*Z[4];
	Z[35] = Z[2]*Z[33]-Z[34];
	Z[36] = Z[24]*Z[8];
	Z[37] = 1.3745*Z[35];
	Z[38] = 0.25*Z[9];
	Z[39] = Z[38]*Z[2];
	Z[40] = Z[39]-Z[37]-Z[36];
	Z[41] = Z[0]*Z[2];
	Z[42] = Z[4]*Z[33]+Z[41];
	Z[43] = 1.3745*Z[42];
	Z[38] = Z[38]*Z[4];
	Z[24] = Z[12]*Z[24]+Z[43]-Z[38];
	Z[44] = Z[4]*Z[4];
	Z[45] = Z[2]*Z[2];
	Z[46] = Z[45]+Z[44];
	Z[47] = Z[46]*Z[9];
	Z[48] = Z[47]*Y[45]+Z[4]*Z[24]-Z[2]*Z[40];
	Z[49] = 1.4755*Z[35];
	Z[50] = Z[27]*Z[8];
	Z[51] = Z[50]+Z[49]+Z[39];
	Z[52] = 1.4755*Z[42];
	Z[27] = -(Z[12]*Z[27]+Z[38]+Z[52]);
	Z[53] = Z[47]*Y[47]+Z[4]*Z[27]-Z[2]*Z[51];
	Z[54] = Z[13]*Z[8];
	Z[55] = Z[54]+Z[39]-Z[37];
	Z[13] = Z[43]-Z[12]*Z[13]-Z[38];
	Z[43] = Z[47]*Y[43]+Z[4]*Z[13]-Z[2]*Z[55];
	Z[56] = Z[19]*Z[8];
	Z[57] = Z[49]+Z[39]-Z[56];
	Z[19] = Z[12]*Z[19]-Z[38]-Z[52];
	Z[38] = Z[47]*Y[49]+Z[4]*Z[19]-Z[2]*Z[57];
	Z[47] = Z[28]+Z[29]+Z[30]+Z[32];
	Z[52] = Z[18]+Z[23]+Z[26]+Z[31];
	Z[58] = Z[48]+Z[53]+Z[43]+Z[38];
	Z[59] = Z[0]*Z[9];
	M[4] = 15.*(Z[8]*Z[52]+Z[12]*Z[47]+Z[58]*Z[59]);
	Z[60] = Z[1]*Z[2];
	Z[61] = (Z[0]*Z[8]+Z[3]*Z[35]-Z[60])*Z[9];
	Z[62] = Z[1]*Z[4];
	Z[63] = (Z[0]*Z[12]+Z[3]*Z[42]-Z[62])*Z[9];
	Z[64] = Z[0]*Z[0];
	Z[65] = Z[1]*Z[1];
	Z[66] = Z[3]*Z[3];
	Z[67] = Z[9]*Z[9];
	Z[68] = Z[67]*(Z[66]+Z[64])+Z[65];
	Z[69] = 60.;
	Z[70] = 2153.5;
	M[5] = -(Z[69]*(Z[8]*Z[61]+Z[12]*Z[63]+Z[59]*Z[68])+Z[59]*Z[70]);
	Z[71] = Z[9]*Z[4];
	Z[72] = Z[1]*Z[13]+Z[16]*Z[71];
	Z[73] = Z[1]*Z[19]+Z[21]*Z[71];
	Z[74] = Z[1]*Z[24]+Z[14]*Z[71];
	Z[75] = Z[9]*Z[2];
	Z[76] = Z[15]*Z[75]-Z[1]*Z[51];
	Z[77] = Z[16]*Z[75]-Z[1]*Z[55];
	Z[78] = Z[21]*Z[75]-Z[1]*Z[57];
	Z[79] = Z[1]*Z[27]+Z[15]*Z[71];
	Z[80] = Z[14]*Z[75]-Z[1]*Z[40];
	Z[81] = Z[9]*(Z[2]*Z[24]+Z[4]*Z[40]);
	Z[82] = Z[9]*(Z[2]*Z[27]+Z[4]*Z[51]);
	Z[83] = Z[9]*(Z[2]*Z[13]+Z[4]*Z[55]);
	Z[84] = Z[9]*(Z[2]*Z[19]+Z[4]*Z[57]);
	Z[85] = Z[72]+Z[73]+Z[74]+Z[79];
	Z[86] = -(Z[76]+Z[77]+Z[78]+Z[80]);
	Z[87] = Z[81]+Z[82]+Z[83]+Z[84];
	M[6] = 15.*(Z[8]*Z[85]+Z[12]*Z[86]+Z[59]*Z[87]);
	Z[88] = Z[67]*Z[2];
	Z[89] = Z[12]*Z[8];
	Z[90] = Z[4]*Z[88]+Z[35]*Z[42]+Z[89];
	Z[91] = Z[12]*Z[12];
	Z[44] = Z[42]*Z[42]+Z[44]*Z[67]+Z[91];
	M[7] = -(Z[12]*Z[70]+Z[69]*(Z[8]*Z[90]+Z[12]*Z[44]+Z[59]*Z[63]));
	Z[92] = Z[8]*Z[8];
	Z[45] = Z[35]*Z[35]+Z[45]*Z[67]+Z[92];
	M[8] = Z[8]*Z[70]+Z[69]*(Z[8]*Z[45]+Z[12]*Z[90]+Z[59]*Z[61]);
	Z[93] = 20.6175*Z[42];
	Z[94] = Z[93]+Z[71]*(15.*Y[43]-3.75)-11.094*Z[12];
	Z[95] = -22.1325*Z[42];
	Z[96] = Z[95]+Z[71]*(15.*Y[49]-3.75)+12.5835*Z[12];
	Z[93] = Z[93]+Z[71]*(15.*Y[45]-3.75)+12.636*Z[12];
	Z[97] = Z[75]*(Y[47]-0.25)-Z[50]-Z[49];
	Z[98] = Z[37]+Z[75]*(Y[43]-0.25)-Z[54];
	Z[99] = Z[56]+Z[75]*(Y[49]-0.25)-Z[49];
	Z[95] = Z[95]+Z[71]*(15.*Y[47]-3.75)-11.0415*Z[12];
	Z[100] = Z[37]+Z[36]+Z[75]*(Y[45]-0.25);
	Z[101] = Z[94]+Z[96]+Z[93]+Z[95];
	Z[102] = Z[97]+Z[98]+Z[99]+Z[100];
	M[9] = Z[8]*Z[101]-15.*Z[12]*Z[102];
	Z[103] = Z[9];
	Z[104] = Z[0];
	Z[105] = Z[394];
	Z[106] = Z[397];
	Z[107] = Z[396];
	Z[108] = Z[395];
	Z[109] = 1.-Z[92];
	if( Z[109]<=0. ) {
		YP[0] = (*dsn_undef);
		return;
	}
	Z[110] = (1.0/(sqrt(Z[109])));
	Z[111] = -Z[12]/sqrt(Z[109]);
	Z[112] = Z[75]*Y[49];
	Z[109] = fabs(Z[109])+1e-20;
	Z[113] = (1.0/(sqrt(Z[109])));
	Z[56] = (Y[21]+Z[49]+Z[39]-Z[112]-Z[56])*Z[113];
	Z[114] = Z[75]*Y[47];
	Z[49] = (Y[21]+Z[50]+Z[49]+Z[39]-Z[114])*Z[113];
	Z[50] = Y[267];
	Z[115] = sin(Z[50]);
	Z[50] = cos(Z[50]);
	Z[116] = Z[9]*(Z[0]*Z[50]+Z[3]*Z[115]);
	Z[117] = Z[8]*Z[50]+Z[35]*Z[115];
	Z[118] = Z[117]*Z[117];
	Z[119] = 1.-Z[118];
	if( Z[119]<=0. ) {
		YP[0] = (*dsn_undef);
		return;
	}
	Z[120] = (1.0/(sqrt(Z[119])));
	Z[121] = -Z[116]*Z[120];
	Z[122] = Z[12]*Z[50]+Z[42]*Z[115];
	Z[120] = -Z[122]*Z[120];
	Z[123] = Z[75]*Y[45];
	Z[119] = fabs(Z[119])+1e-20;
	Z[124] = (1.0/(sqrt(Z[119])));
	Z[36] = (Y[21]+Z[39]-Z[123]-Z[37]-Z[36])*Z[124];
	Z[125] = Z[75]*Y[43];
	Z[37] = (Y[21]+Z[54]+Z[39]-Z[125]-Z[37])*Z[124];
	Z[39] = Z[3]*Z[9];
	Z[54] = Z[39]*Y[16]+Z[42]*Y[20]-Z[35]*Y[22];
	Z[126] = Z[59]*Y[16]+Z[12]*Y[20]-Z[8]*Y[22];
	Z[127] = Z[4]*Y[20]-Z[2]*Y[22];
	Z[128] = Z[1]*Y[16];
	Z[129] = Z[9]*Z[127]-Z[128];
	Z[130] = Y[18]*Z[1];
	Z[131] = Z[130]+Y[24];
	Z[132] = Z[71]*Y[18];
	Z[133] = Y[14]*Z[2];
	Z[134] = Z[132]-Z[133];
	Z[135] = Y[43]*Z[4]*Z[131];
	Z[136] = Z[35]*Z[54];
	Z[137] = Z[8]*Z[126];
	Z[138] = Z[131]*Z[13];
	Z[139] = Z[138]-Z[9]*(Z[2]*(Y[44]+Z[129])-Z[135])-Z[17]*Z[134]-Z[136]-Z[137];
	Z[140] = Y[45]*Z[4]*Z[131];
	Z[141] = Z[131]*Z[24];
	Z[142] = Z[141]-Z[9]*(Z[2]*(Y[46]+Z[129])-Z[140])-Z[25]*Z[134]-Z[136]-Z[137];
	Z[143] = Y[47]*Z[4]*Z[131];
	Z[144] = Z[131]*Z[27];
	Z[145] = Z[144]-Z[9]*(Z[2]*(Y[48]+Z[129])-Z[143])-Z[20]*Z[134]-Z[136]-Z[137];
	Z[146] = Y[49]*Z[4]*Z[131];
	Z[147] = Z[131]*Z[19];
	Z[136] = Z[147]-Z[9]*(Z[2]*(Y[50]+Z[129])-Z[146])-Z[22]*Z[134]-Z[136]-Z[137];
	Z[137] = -96060.*Z[105];
	Z[148] = -96060.*Z[106];
	Z[149] = -96060.*Z[107];
	Z[150] = -96060.*Z[108];
	Z[151] = ( (500.*Z[136]-107919.+304000.*Z[56]<0.) ? -500.*Z[136]+107920.-304000.*Z[56] : 1. );
	Z[152] = ( (500.*Z[145]-107919.+304000.*Z[49]<0.) ? -500.*Z[145]+107920.-304000.*Z[49] : 1. );
	Z[153] = ( (500.*Z[142]-107919.+304000.*Z[36]<0.) ? -500.*Z[142]+107920.-304000.*Z[36] : 1. );
	Z[154] = ( (500.*Z[139]-107919.+304000.*Z[37]<0.) ? -500.*Z[139]+107920.-304000.*Z[37] : 1. );
	Z[155] = Z[150]*Z[104]*Z[103]*Z[110];
	Z[156] = 60240.*Y[3];
	Z[157] = Z[156]*Z[111];
	Z[158] = Z[155]-Z[157];
	Z[159] = Z[149]*Z[121];
	Z[160] = 60240.*Y[2];
	Z[161] = Z[160]*Z[120];
	Z[162] = -(Z[159]+Z[161]);
	Z[163] = Z[148]*Z[104]*Z[103]*Z[110];
	Z[164] = 60240.*Y[1];
	Z[165] = Z[164]*Z[111];
	Z[166] = Z[163]-Z[165];
	Z[167] = Z[137]*Z[121];
	Z[168] = 60240.*Y[0];
	Z[169] = Z[168]*Z[120];
	Z[170] = -(Z[167]+Z[169]);
	Z[171] = Z[149]*Z[120];
	Z[160] = Z[160]*Z[121];
	Z[172] = Z[160]-Z[171];
	Z[173] = Z[148]*Z[111];
	Z[164] = Z[164]*Z[104]*Z[103]*Z[110];
	Z[174] = -(Z[173]+Z[164]);
	Z[175] = Z[137]*Z[120];
	Z[168] = Z[168]*Z[121];
	Z[176] = Z[168]-Z[175];
	Z[177] = Z[150]*Z[111];
	Z[156] = Z[156]*Z[104]*Z[103]*Z[110];
	Z[178] = -(Z[177]+Z[156]);
	Z[179] = Z[0]*Z[54]-Z[3]*Z[126];
	Z[180] = Z[129]*Y[14]+Z[179]*Y[18];
	Z[181] = Z[0]*Z[126]+Z[3]*Z[54];
	Z[182] = Z[75]*Y[18];
	Z[183] = Y[14]*Z[4];
	Z[184] = Z[182]+Z[183];
	Z[185] = Z[134]*Z[1];
	Z[135] = Z[9]*(Z[2]*Y[44]-Z[135])+Z[185]*Y[43];
	Z[186] = Z[184]*Z[1];
	Z[187] = Z[9]*(-(Z[2]*Z[131]*Y[43]+Z[4]*Y[44]))+Z[186]*Y[43];
	Z[188] = Z[185]-Z[71]*Z[131];
	Z[189] = Z[186]-Z[75]*Z[131];
	Z[190] = Z[39]*Y[14]-Z[0]*Z[131];
	Z[191] = Z[1]*Y[24];
	Z[192] = Z[191]+Y[18];
	Z[193] = (Z[4]*Z[190]+Z[11]*Z[192])*Y[20];
	Z[190] = (Z[7]*Z[192]-Z[2]*Z[190])*Y[22];
	Z[194] = Z[193]+Z[190]-(Z[33]*Y[14]+Z[59]*Y[18])*Y[16];
	Z[195] = Z[59]*Y[14]+Z[3]*Z[131];
	Z[196] = (Z[4]*Z[195]+Z[41]*Z[192])*Y[20];
	Z[34] = (Z[34]*Z[192]-Z[2]*Z[195])*Y[22];
	Z[195] = (Z[39]*Y[18]-Z[5]*Y[14])*Y[16]+Z[196]+Z[34];
	Z[197] = (Z[2]*Y[20]+Z[4]*Y[22])*Y[24];
	Z[198] = Y[14]*Y[16];
	Z[127] = Y[14]*Z[127]*Z[1];
	Z[199] = Z[9]*(Z[198]-Z[197])+Z[127];
	Z[200] = Y[14]*(Z[130]-Y[24]);
	Z[201] = Z[200]*Z[4];
	Z[202] = Z[201]-Z[182]*Y[24];
	Z[203] = Z[200]*Z[2];
	Z[204] = Z[132]*Y[24]+Z[203];
	Z[205] = -(Z[71]*Y[43]+Z[13]);
	Z[125] = Z[125]-Z[55];
	Z[138] = Z[188]*Y[43]+Z[16]*Z[134]+Z[138];
	Z[206] = Z[189]*Y[43]+Z[16]*Z[184]-Z[55]*Z[131];
	Z[207] = (Z[180]-Z[0]*Z[195]-Z[3]*Z[194])*Z[9];
	Z[208] = (Y[14]*Z[181]-Z[199])*Z[1];
	Z[209] = Z[125]*Z[202]+Z[134]*Z[138]+Z[184]*Z[206]+Z[204]*Z[205]+Z[207]+Z[208];
	Z[210] = Z[134]*Z[135]+Z[184]*Z[187];
	Z[211] = 2.;
	Z[212] = Z[210]*Z[211]-Z[209];
	Z[146] = Z[9]*(Z[2]*Y[50]-Z[146])+Z[185]*Y[49];
	Z[213] = Z[9]*(-(Z[2]*Z[131]*Y[49]+Z[4]*Y[50]))+Z[186]*Y[49];
	Z[214] = -(Z[71]*Y[49]+Z[19]);
	Z[112] = Z[112]-Z[57];
	Z[215] = Z[189]*Y[49]+Z[21]*Z[184]-Z[57]*Z[131];
	Z[147] = Z[188]*Y[49]+Z[21]*Z[134]+Z[147];
	Z[216] = Z[112]*Z[202]+Z[134]*Z[147]+Z[184]*Z[215]+Z[204]*Z[214]+Z[207]+Z[208];
	Z[217] = Z[134]*Z[146]+Z[184]*Z[213];
	Z[218] = Z[211]*Z[217]-Z[216];
	Z[143] = Z[9]*(Z[2]*Y[48]-Z[143])+Z[185]*Y[47];
	Z[219] = Z[9]*(-(Z[2]*Z[131]*Y[47]+Z[4]*Y[48]))+Z[186]*Y[47];
	Z[114] = Z[114]-Z[51];
	Z[220] = -(Z[71]*Y[47]+Z[27]);
	Z[221] = Z[189]*Y[47]+Z[15]*Z[184]-Z[51]*Z[131];
	Z[144] = Z[188]*Y[47]+Z[15]*Z[134]+Z[144];
	Z[222] = Z[114]*Z[202]+Z[134]*Z[144]+Z[184]*Z[221]+Z[204]*Z[220]+Z[207]+Z[208];
	Z[223] = Z[134]*Z[143]+Z[184]*Z[219];
	Z[224] = Z[211]*Z[223]-Z[222];
	Z[140] = Z[9]*(Z[2]*Y[46]-Z[140])+Z[185]*Y[45];
	Z[225] = Z[9]*(-(Z[2]*Z[131]*Y[45]+Z[4]*Y[46]))+Z[186]*Y[45];
	Z[123] = Z[123]-Z[40];
	Z[226] = -(Z[71]*Y[45]+Z[24]);
	Z[189] = Z[189]*Y[45]+Z[14]*Z[184]-Z[40]*Z[131];
	Z[141] = Z[188]*Y[45]+Z[14]*Z[134]+Z[141];
	Z[188] = Z[123]*Z[202]+Z[134]*Z[141]+Z[184]*Z[189]+Z[204]*Z[226]+Z[207]+Z[208];
	Z[207] = Z[134]*Z[140]+Z[184]*Z[225];
	Z[208] = Z[207]*Z[211]-Z[188];
	Z[227] = Z[9]*Z[54]*Y[14]+Z[126]*Y[24];
	Z[228] = Z[54]*Y[24];
	Z[229] = Z[0]*(Z[9]*Z[126]*Y[14]-Z[228]);
	Z[230] = Z[9]*Z[129];
	Z[231] = Y[18]*Z[181]+(Z[1]*Z[181]+Z[230])*Y[24];
	Z[232] = Z[4]*Z[184]-Z[2]*Z[134];
	Z[233] = Z[9]*Y[47];
	Z[234] = Z[233]*Z[232];
	Z[235] = Z[1]*Y[48]+Z[234];
	Z[199] = Z[9]*Z[199];
	Z[234] = Z[234]-Z[27]*Z[184]-Z[51]*Z[134];
	Z[236] = Z[231]*Z[4];
	Z[237] = Z[35]*Z[194];
	Z[238] = Z[8]*Z[195];
	Z[239] = (Z[1]*Z[180]+Z[199]-Z[3]*Z[227]-Z[229])*Z[2];
	Z[240] = Y[14]*Y[18];
	Z[241] = Z[240]*Z[9];
	Z[242] = 30.;
	Z[220] = 15.*(Z[20]*Z[202]+Z[131]*Z[221]+Z[134]*Z[234]+Z[236]+Z[239]-Z[220]*Z[241]-Z[237]-Z[238]);
	Z[221] = Z[242]*(Z[131]*Z[219]+Z[134]*Z[235]);
	Z[243] = Z[220]-Z[221]+147.15;
	Z[244] = Z[9]*Y[45];
	Z[245] = Z[244]*Z[232];
	Z[246] = Z[1]*Y[46]+Z[245];
	Z[245] = Z[24]*Z[184]+Z[40]*Z[134]-Z[245];
	Z[231] = Z[231]*Z[2];
	Z[194] = Z[42]*Z[194];
	Z[195] = Z[12]*Z[195];
	Z[180] = (Z[1]*Z[180]+Z[199]-Z[3]*Z[227]-Z[229])*Z[4];
	Z[123] = Z[131]*Z[141]+Z[184]*Z[245]+Z[180]-Z[25]*Z[204]-Z[123]*Z[241]-Z[194]-Z[195]-Z[231];
	Z[141] = Z[131]*Z[140]-Z[184]*Z[246];
	Z[199] = Z[141]*Z[211]-Z[123];
	Z[227] = Z[9]*Y[43];
	Z[229] = Z[227]*Z[232];
	Z[247] = Z[1]*Y[44]+Z[229];
	Z[229] = Z[13]*Z[184]+Z[55]*Z[134]-Z[229];
	Z[125] = Z[131]*Z[138]+Z[184]*Z[229]+Z[180]-Z[17]*Z[204]-Z[125]*Z[241]-Z[194]-Z[195]-Z[231];
	Z[138] = Z[131]*Z[135]-Z[184]*Z[247];
	Z[248] = Z[138]*Z[211]-Z[125];
	Z[249] = Z[9]*Y[49];
	Z[250] = Z[249]*Z[232];
	Z[251] = Z[1]*Y[50]+Z[250];
	Z[250] = Z[19]*Z[184]+Z[57]*Z[134]-Z[250];
	Z[112] = Z[131]*Z[147]+Z[184]*Z[250]+Z[180]-Z[22]*Z[204]-Z[112]*Z[241]-Z[194]-Z[195]-Z[231];
	Z[147] = Z[131]*Z[146]-Z[184]*Z[251];
	Z[252] = Z[147]*Z[211]-Z[112];
	Z[20] = Z[131]*Z[144]+Z[180]-Z[20]*Z[204]-Z[114]*Z[241]-Z[184]*Z[234]-Z[194]-Z[195]-Z[231];
	Z[114] = Z[131]*Z[143]-Z[184]*Z[235];
	Z[144] = Z[114]*Z[211]-Z[20];
	Z[25] = 15.*(Z[25]*Z[202]+Z[131]*Z[189]+Z[236]+Z[239]-Z[134]*Z[245]-Z[226]*Z[241]-Z[237]-Z[238]);
	Z[180] = Z[242]*(Z[131]*Z[225]+Z[134]*Z[246]);
	Z[189] = Z[25]-Z[180]+147.15;
	Z[17] = 15.*(Z[17]*Z[202]+Z[131]*Z[206]+Z[236]+Z[239]-Z[134]*Z[229]-Z[205]*Z[241]-Z[237]-Z[238]);
	Z[194] = Z[242]*(Z[131]*Z[187]+Z[134]*Z[247]);
	Z[195] = Z[17]-Z[194]+147.15;
	Z[22] = 15.*(Z[22]*Z[202]+Z[131]*Z[215]+Z[236]+Z[239]-Z[134]*Z[250]-Z[214]*Z[241]-Z[237]-Z[238]);
	Z[202] = Z[242]*(Z[131]*Z[213]+Z[134]*Z[251]);
	Z[204] = Z[22]-Z[202]+147.15;
	Z[205] = 9.81;
	Z[206] = Z[151]+Z[152]+Z[153]+Z[154]-Z[243]-Z[189]-Z[195]-Z[204];
	Z[214] = Z[172]+Z[174]+Z[176]+Z[178];
	Z[215] = Z[158]+Z[162]+Z[166]+Z[170];
	Z[226] = Z[212]+Z[218]+Z[224]+Z[208];
	Z[229] = Z[199]+Z[248]+Z[252]+Z[144];
	Z[128] = Z[129]+Z[128];
	Z[231] = Y[16]*Y[18];
	V[0] = Z[8]*Z[206]+Z[12]*Z[214]+Z[59]*Z[215]-Z[70]*(Y[18]*Z[54]+Z[3]*(Z[230]*Y[24]+Z[4]*Z[205]-Z[9]*Z[231])+Z[128]*Z[0]*Y[14]-Z[1]*(-(Z[41]*Z[205]+Z[228]))-Z[34]-Z[196])+15.*(Z[12]*Z[229]+Z[59]*Z[226]);
	Z[33] = 15.*(Z[33]-Z[2]*Z[35]-Z[4]*Z[42])*Z[9];
	M[78] = -Z[33];
	M[79] = -Z[33];
	M[80] = -Z[33];
	M[81] = -Z[33];
	M[82] = -15.*(Z[35]*Z[52]+Z[39]*Z[58]+Z[42]*Z[47]);
	M[83] = Z[69]*(Z[35]*Z[61]+Z[39]*Z[68]+Z[42]*Z[63])+Z[39]*Z[70];
	M[84] = -15.*(Z[35]*Z[85]+Z[39]*Z[87]+Z[42]*Z[86]);
	M[85] = Z[42]*Z[70]+Z[69]*(Z[35]*Z[90]+Z[39]*Z[63]+Z[42]*Z[44]);
	M[86] = -(Z[35]*Z[70]+Z[69]*(Z[35]*Z[45]+Z[39]*Z[61]+Z[42]*Z[90]));
	M[87] = -Z[35]*Z[101]+15.*Z[42]*Z[102];
	V[1] = -(Z[35]*Z[206]+Z[39]*Z[215]+Z[42]*Z[214]+Z[70]*(Z[126]*Z[192]+Z[190]+Z[193]+Z[59]*(Z[129]*Y[24]-Z[231])-Z[128]*Z[3]*Y[14]))-15.*(Z[39]*Z[226]+Z[42]*Z[229])+21125.835*Z[35];
	M[156] = -15.*Z[83];
	M[157] = -15.*Z[81];
	M[158] = -15.*Z[82];
	M[159] = -15.*Z[84];
	Z[33] = Z[388];
	Z[34] = Z[392];
	Z[41] = Z[0]*Z[115]-Z[3]*Z[50];
	Z[54] = Z[9]*Z[33]*Z[41]+Z[1]*Z[34];
	Z[101] = Z[42]*Z[50]-Z[12]*Z[115];
	Z[102] = Z[33]*Z[101]+Z[34]*Z[71];
	Z[126] = Z[1]*Z[33]-Z[9]*Z[34]*Z[41];
	Z[128] = Z[34]*Z[101]-Z[33]*Z[71];
	Z[129] = 0.78;
	Z[190] = 1.4*Z[116];
	Z[192] = Z[190]*Z[122];
	Z[193] = Z[192]-Z[129]*(Z[54]*Z[102]-Z[126]*Z[128]);
	Z[50] = Z[35]*Z[50]-Z[8]*Z[115];
	Z[115] = Z[33]*Z[50]+Z[34]*Z[75];
	Z[33] = Z[34]*Z[50]-Z[33]*Z[75];
	Z[34] = Z[54]*Z[115];
	Z[190] = Z[190]*Z[117];
	Z[196] = Z[129]*(Z[34]-Z[33]*Z[126])-Z[190];
	Z[228] = Z[383];
	Z[230] = Z[387];
	Z[231] = Z[39]*Z[228]-Z[1]*Z[230];
	Z[234] = Z[42]*Z[228]+Z[71]*Z[230];
	Z[236] = Z[1]*Z[228]+Z[39]*Z[230];
	Z[237] = Z[71]*Z[228]-Z[42]*Z[230];
	Z[238] = 1.4*Z[59];
	Z[239] = Z[238]*Z[12];
	Z[245] = Z[129]*(Z[231]*Z[234]-Z[236]*Z[237])+Z[239];
	Z[250] = Z[35]*Z[228]+Z[75]*Z[230];
	Z[228] = Z[75]*Z[228]-Z[35]*Z[230];
	Z[230] = Z[238]*Z[8];
	Z[238] = -(Z[129]*(Z[231]*Z[250]-Z[228]*Z[236])+Z[230]);
	Z[253] = Z[380];
	Z[254] = Z[381];
	Z[255] = Z[39]*Z[253]-Z[1]*Z[254];
	Z[256] = Z[35]*Z[253]+Z[75]*Z[254];
	Z[257] = Z[1]*Z[253]+Z[39]*Z[254];
	Z[35] = Z[75]*Z[253]-Z[35]*Z[254];
	Z[258] = -(Z[129]*(Z[255]*Z[256]-Z[35]*Z[257])+Z[230]);
	Z[259] = Z[42]*Z[253]+Z[71]*Z[254];
	Z[42] = Z[71]*Z[253]-Z[42]*Z[254];
	Z[253] = Z[129]*(Z[255]*Z[259]-Z[42]*Z[257])+Z[239];
	Z[254] = Z[384];
	Z[260] = Z[385];
	Z[261] = Z[9]*Z[41]*Z[254]+Z[1]*Z[260];
	Z[262] = Z[71]*Z[260]+Z[101]*Z[254];
	Z[41] = Z[1]*Z[254]-Z[9]*Z[41]*Z[260];
	Z[101] = Z[101]*Z[260]-Z[71]*Z[254];
	Z[263] = Z[192]-Z[129]*(Z[261]*Z[262]-Z[41]*Z[101]);
	Z[264] = Z[50]*Z[254]+Z[75]*Z[260];
	Z[50] = Z[50]*Z[260]-Z[75]*Z[254];
	Z[254] = Z[261]*Z[264];
	Z[260] = Z[129]*(Z[254]-Z[41]*Z[50])-Z[190];
	Z[265] = Z[196]+Z[238]+Z[258]+Z[260];
	Z[266] = Z[193]+Z[245]+Z[253]+Z[263];
	Z[267] = Z[40]*Z[32];
	Z[268] = Z[27]*Z[31];
	Z[269] = Z[24]*Z[26];
	Z[270] = Z[55]*Z[29];
	Z[271] = Z[13]*Z[18];
	Z[272] = Z[19]*Z[23];
	Z[273] = Z[57]*Z[30];
	Z[274] = Z[51]*Z[28];
	M[160] = Z[2]*Z[266]+Z[4]*Z[265]+15.*(Z[273]+Z[274]+Z[271]+Z[272]+Z[270]+Z[268]+Z[269]+Z[267]+Z[71]*(Z[18]*Y[43]+Z[26]*Y[45]+Z[31]*Y[47]+Z[23]*Y[49])-Z[75]*(Z[29]*Y[43]+Z[32]*Y[45]+Z[28]*Y[47]+Z[30]*Y[49]))-1919.3*Z[59]*Z[3];
	Z[275] = Z[13]+Z[19]+Z[24]+Z[27]+Z[71]*(Y[43]+Y[45]+Y[47]+Y[49]);
	Z[276] = Z[55]+Z[57]+Z[40]+Z[51]+Z[75]*(-(Y[43]+Y[45]+Y[47]+Y[49]));
	M[161] = -15.*(Z[61]*Z[275]+Z[63]*Z[276]);
	Z[277] = Z[231]*Z[231];
	Z[278] = Z[236]*Z[236];
	Z[64] = Z[64]*Z[67];
	Z[279] = 1.4*Z[64];
	Z[280] = Z[129]*(Z[277]+Z[278])+Z[279];
	Z[281] = Z[255]*Z[255];
	Z[282] = Z[257]*Z[257];
	Z[279] = Z[129]*(Z[282]+Z[281])+Z[279];
	Z[283] = Z[261]*Z[261];
	Z[284] = Z[41]*Z[41];
	Z[285] = Z[116]*Z[116];
	Z[286] = 1.4*Z[285];
	Z[287] = Z[129]*(Z[283]+Z[284])+Z[286];
	Z[288] = Z[54]*Z[54];
	Z[289] = Z[126]*Z[126];
	Z[286] = Z[129]*(Z[288]+Z[289])+Z[286];
	Z[290] = Z[40]*Z[80];
	Z[291] = Z[27]*Z[79];
	Z[292] = Z[24]*Z[74];
	Z[293] = Z[55]*Z[77];
	Z[294] = Z[13]*Z[72];
	Z[295] = Z[19]*Z[73];
	Z[296] = Z[57]*Z[78];
	Z[297] = Z[51]*Z[76];
	Z[298] = 4200.;
	M[162] = Z[1]*Z[298]-Z[1]*(-(Z[280]+Z[279]+Z[287]+Z[286]))-Z[9]*(Z[4]*Z[266]-Z[2]*Z[265])+15.*(Z[71]*(Z[72]*Y[43]+Z[74]*Y[45]+Z[79]*Y[47]+Z[73]*Y[49])+Z[75]*(Z[77]*Y[43]+Z[80]*Y[45]+Z[76]*Y[47]+Z[78]*Y[49])+Z[294]+Z[295]+Z[291]+Z[292]-Z[290]-Z[297]-Z[296]-Z[293]);
	M[163] = -15.*(Z[44]*Z[276]+Z[90]*Z[275]);
	M[164] = 15.*(Z[45]*Z[275]+Z[90]*Z[276]);
	Z[265] = 15.*Z[97];
	Z[266] = 15.*Z[98];
	Z[275] = 15.*Z[99];
	Z[276] = 15.*Z[100];
	Z[66] = 1919.3*Z[66];
	Z[299] = Z[66]+494.2;
	Z[300] = Y[43]*Z[94];
	Z[301] = Y[45]*Z[93];
	Z[302] = Y[47]*Z[95];
	Z[303] = Y[49]*Z[96];
	Z[304] = Z[302]+Z[303]+Z[300]+Z[301];
	Z[305] = Y[43]*Z[266];
	Z[306] = Y[45]*Z[276];
	Z[307] = Y[47]*Z[265];
	Z[308] = Y[49]*Z[275];
	Z[309] = Z[308]+Z[305]+Z[306]+Z[307];
	Z[310] = Z[40]*Z[276];
	Z[311] = Z[27]*Z[95];
	Z[312] = Z[24]*Z[93];
	Z[313] = Z[55]*Z[266];
	Z[314] = Z[13]*Z[94];
	Z[315] = Z[19]*Z[96];
	Z[316] = Z[57]*Z[275];
	Z[317] = Z[51]*Z[265];
	Z[318] = Z[299]*Z[67];
	Z[319] = 2.8;
	M[165] = Z[129]*(Z[288]+Z[283]+Z[282]+Z[284]+Z[277]+Z[278]+Z[281]+Z[289])+Z[319]*(Z[285]+Z[64])+Z[298]+Z[71]*Z[304]+Z[75]*Z[309]+Z[311]+Z[312]+Z[314]+Z[315]-Z[310]-Z[313]-Z[316]-Z[317]-Z[318];
	Z[64] = Z[286]*Z[116];
	Z[277] = Z[122]*Z[193]+Z[64]-Z[117]*Z[196];
	M[166] = -Z[277];
	Z[278] = Z[287]*Z[116];
	Z[281] = Z[122]*Z[263]+Z[278]-Z[117]*Z[260];
	M[167] = -Z[281];
	Z[282] = Z[59]*Z[279];
	Z[283] = Z[12]*Z[253]+Z[282]-Z[8]*Z[258];
	M[168] = -Z[283];
	Z[284] = Z[59]*Z[280];
	Z[285] = Z[12]*Z[245]+Z[284]-Z[238]*Z[8];
	M[169] = -Z[285];
	Z[288] = Z[56]*Z[8];
	Z[289] = Z[288]*Z[111];
	Z[319] = Z[49]*Z[8];
	Z[320] = Z[319]*Z[111];
	Z[109] = Z[109]*Z[113];
	Z[113] = -Z[56]*Z[109];
	Z[109] = -Z[49]*Z[109];
	Z[321] = Z[36]*Z[117];
	Z[322] = Z[321]*Z[120];
	Z[323] = Z[37]*Z[117];
	Z[324] = Z[323]*Z[120];
	Z[119] = Z[119]*Z[124];
	Z[124] = -Z[36]*Z[119];
	Z[119] = -Z[37]*Z[119];
	Z[325] = 3059.65;
	Z[326] = 494.2*Z[191];
	Z[123] = Z[141]*Z[242]+Z[160]-Z[171]-15.*Z[123];
	Z[20] = Z[114]*Z[242]-Z[164]-Z[173]-15.*Z[20];
	Z[114] = Z[138]*Z[242]+Z[168]-Z[175]-15.*Z[125];
	Z[112] = Z[147]*Z[242]-Z[156]-Z[177]-15.*Z[112];
	Z[125] = Z[220]-Z[152]-Z[221]+147.15;
	Z[22] = Z[22]-Z[151]-Z[202]+147.15;
	Z[17] = Z[17]-Z[154]-Z[194]+147.15;
	Z[25] = Z[25]-Z[153]-Z[180]+147.15;
	Z[138] = Y[263]+Y[18];
	Z[141] = Z[71]*Z[138];
	Z[147] = Z[141]-Z[133];
	Z[156] = Z[75]*Z[138];
	Z[160] = Z[183]+Z[156];
	Z[164] = Z[122]*Z[160]-Z[117]*Z[147];
	Z[168] = Z[232]*Y[263];
	Z[171] = Z[1]*Y[264];
	Z[173] = Y[52]*Z[164]+Z[9]*(Z[168]+Z[240])+Z[171];
	Z[138] = Z[138]*Z[1];
	Z[175] = Z[138]+Y[24];
	Z[160] = -(Z[116]*Z[160]+Z[117]*Z[175]);
	Z[177] = Z[200]-Z[9]*Y[264];
	Z[180] = Y[18]*Y[24];
	Z[194] = Z[131]*Y[263]+Z[180];
	Z[200] = Z[177]*Z[4];
	Z[186] = Z[186]*Y[263];
	Z[202] = Z[75]*Z[194];
	Z[220] = Z[160]*Y[52]+Z[186]+Z[200]-Z[202];
	Z[147] = Z[116]*Z[147]+Z[122]*Z[175];
	Z[175] = Z[177]*Z[2];
	Z[177] = Z[185]*Y[263];
	Z[185] = Z[71]*Z[194];
	Z[194] = Z[147]*Y[52]+Z[175]+Z[185]-Z[177];
	Z[164] = Z[9]*(-(Z[168]+Z[240]))-Y[54]*Z[164]-Z[171];
	Z[160] = Z[160]*Y[54]+Z[186]+Z[200]-Z[202];
	Z[147] = Z[147]*Y[54]+Z[175]+Z[185]-Z[177];
	Z[168] = Z[122]*Y[54]+Z[141]-Z[133];
	Z[171] = Z[129]*(Z[254]-Z[41]*Z[50])-Z[190];
	Z[175] = Y[24]+Z[138]-Z[116]*Y[54];
	Z[177] = 1.4*Z[122]*Z[117];
	Z[185] = -(Z[129]*(Z[50]*Z[101]+Z[262]*Z[264])+Z[177]);
	Z[118] = 1.4*Z[118];
	Z[186] = Z[129]*(Z[50]*Z[50]+Z[264]*Z[264])+Z[118];
	Z[200] = Z[117]*Y[54]+Z[156]+Z[183];
	Z[202] = Z[171]*Z[175]+Z[186]*Z[200]-Z[168]*Z[185];
	Z[41] = Z[192]-Z[129]*(Z[261]*Z[262]-Z[41]*Z[101]);
	Z[221] = 1.4*Z[122]*Z[122];
	Z[232] = Z[129]*(Z[101]*Z[101]+Z[262]*Z[262])+Z[221];
	Z[50] = -(Z[129]*(Z[50]*Z[101]+Z[262]*Z[264])+Z[177]);
	Z[101] = Z[41]*Z[175]+Z[50]*Z[200]-Z[168]*Z[232];
	Z[141] = Z[122]*Y[52]+Z[141]-Z[133];
	Z[34] = Z[129]*(Z[34]-Z[33]*Z[126])-Z[190];
	Z[138] = Y[24]+Z[138]-Z[116]*Y[52];
	Z[190] = -(Z[129]*(Z[33]*Z[128]+Z[102]*Z[115])+Z[177]);
	Z[118] = Z[129]*(Z[33]*Z[33]+Z[115]*Z[115])+Z[118];
	Z[156] = Z[117]*Y[52]+Z[156]+Z[183];
	Z[240] = Z[34]*Z[138]+Z[118]*Z[156]-Z[141]*Z[190];
	Z[54] = Z[192]-Z[129]*(Z[54]*Z[102]-Z[126]*Z[128]);
	Z[126] = Z[129]*(Z[102]*Z[102]+Z[128]*Z[128])+Z[221];
	Z[33] = -(Z[129]*(Z[33]*Z[128]+Z[102]*Z[115])+Z[177]);
	Z[102] = Z[33]*Z[156]+Z[54]*Z[138]-Z[126]*Z[141];
	Z[115] = Z[8]*Z[134]-Z[12]*Z[184];
	Z[128] = Z[115]*Y[58]-Z[241];
	Z[177] = Z[180]*Z[2];
	Z[192] = Y[58]*Z[0];
	Z[221] = Z[8]*Y[58];
	Z[254] = Z[9]*(-(Z[184]*Z[192]+Z[177]))+Z[201]-Z[131]*Z[221];
	Z[261] = Z[180]*Z[4];
	Z[262] = Z[12]*Y[58];
	Z[192] = Z[9]*(Z[134]*Z[192]+Z[261])+Z[203]+Z[262]*Z[131];
	Z[264] = Y[56]*Z[0];
	Z[327] = Z[12]*Y[56];
	Z[134] = Z[9]*(Z[134]*Z[264]+Z[261])+Z[203]+Z[327]*Z[131];
	Z[115] = Z[115]*Y[56]-Z[241];
	Z[203] = Z[8]*Y[56];
	Z[131] = Z[9]*(-(Z[184]*Z[264]+Z[177]))+Z[201]-Z[203]*Z[131];
	Z[177] = Z[132]+Z[262]-Z[133];
	Z[184] = -(Z[129]*(Z[231]*Z[250]-Z[228]*Z[236])+Z[230]);
	Z[201] = Z[59]*Y[58]-Y[24]-Z[130];
	Z[89] = 1.4*Z[89];
	Z[241] = -(Z[129]*(Z[228]*Z[237]+Z[234]*Z[250])+Z[89]);
	Z[92] = 1.4*Z[92];
	Z[261] = Z[129]*(Z[228]*Z[228]+Z[250]*Z[250])+Z[92];
	Z[221] = Z[182]+Z[183]+Z[221];
	Z[262] = Z[177]*Z[241]+Z[184]*Z[201]-Z[221]*Z[261];
	Z[231] = Z[129]*(Z[231]*Z[234]-Z[236]*Z[237])+Z[239];
	Z[91] = 1.4*Z[91];
	Z[236] = Z[129]*(Z[234]*Z[234]+Z[237]*Z[237])+Z[91];
	Z[228] = -(Z[129]*(Z[228]*Z[237]+Z[234]*Z[250])+Z[89]);
	Z[234] = Z[177]*Z[236]+Z[201]*Z[231]-Z[221]*Z[228];
	Z[132] = Z[132]+Z[327]-Z[133];
	Z[133] = -(Z[129]*(Z[255]*Z[256]-Z[35]*Z[257])+Z[230]);
	Z[230] = Z[59]*Y[56]-Y[24]-Z[130];
	Z[237] = -(Z[129]*(Z[35]*Z[42]+Z[256]*Z[259])+Z[89]);
	Z[92] = Z[129]*(Z[35]*Z[35]+Z[256]*Z[256])+Z[92];
	Z[182] = Z[182]+Z[183]+Z[203];
	Z[183] = Z[132]*Z[237]+Z[133]*Z[230]-Z[92]*Z[182];
	Z[203] = Z[129]*(Z[255]*Z[259]-Z[42]*Z[257])+Z[239];
	Z[91] = Z[129]*(Z[42]*Z[42]+Z[259]*Z[259])+Z[91];
	Z[35] = -(Z[129]*(Z[35]*Z[42]+Z[256]*Z[259])+Z[89]);
	Z[42] = Z[91]*Z[132]+Z[203]*Z[230]-Z[35]*Z[182];
	Z[89] = Z[182]*Z[42];
	Z[129] = Z[221]*Z[234];
	Z[239] = Z[132]*Z[183];
	Z[250] = Z[177]*Z[262];
	Z[255] = Z[320]*Z[152];
	Z[256] = Z[289]*Z[151];
	Z[257] = Z[324]*Z[154];
	Z[259] = Z[322]*Z[153];
	Z[264] = Z[40]*Z[123];
	Z[327] = Z[51]*Z[20];
	Z[328] = Z[55]*Z[114];
	Z[329] = Z[57]*Z[112];
	Z[330] = Z[27]*Z[125];
	Z[331] = Z[19]*Z[22];
	Z[332] = Z[13]*Z[17];
	Z[333] = Z[24]*Z[25];
	Z[334] = -Z[124]*Z[172];
	Z[335] = -Z[109]*Z[174];
	Z[336] = -Z[119]*Z[176];
	Z[337] = -Z[113]*Z[178];
	Z[338] = Z[286]*Z[173];
	Z[339] = Z[193]*Z[220];
	Z[340] = Z[196]*Z[194];
	Z[341] = Z[287]*Z[164];
	Z[342] = Z[263]*Z[160];
	Z[343] = Z[260]*Z[147];
	Z[344] = Z[168]*Z[202];
	Z[345] = Z[200]*Z[101];
	Z[346] = Z[141]*Z[240];
	Z[347] = Z[156]*Z[102];
	Z[348] = Z[280]*Z[128];
	Z[349] = Z[245]*Z[254];
	Z[350] = Z[238]*Z[192];
	Z[351] = Z[258]*Z[134];
	Z[352] = Z[279]*Z[115];
	Z[353] = Z[253]*Z[131];
	Z[354] = Y[14]*Y[14];
	Z[355] = Z[211]*(-(Y[18]*Z[325]+Z[326]+Z[66]*(Z[191]-Y[18])))*Y[14]*Z[9];
	Z[180] = (-3838.6*Z[180]*Z[67]-1919.3*Z[354]*Z[1])*Z[3]*Z[0];
	V[2] = Z[264]+Z[259]+Z[256]+Z[257]+Z[352]+Z[255]+Z[346]+Z[347]+Z[348]+Z[350]+Z[351]+Z[355]+Z[180]+Z[327]+Z[343]+Z[344]+Z[345]+Z[340]+Z[341]+Z[329]+Z[328]-Z[250]-Z[353]-Z[239]-Z[349]-Z[129]-Z[75]*(Z[114]*Y[43]+Z[123]*Y[45]+Z[20]*Y[47]+Z[112]*Y[49])-Z[71]*(Z[17]*Y[43]+Z[25]*Y[45]+Z[125]*Y[47]+Z[22]*Y[49])-Z[89]-Z[342]-Z[338]-Z[339]-Z[335]-Z[336]-Z[337]-Z[332]-Z[333]-Z[334]-Z[330]-Z[331];
	Z[46] = Z[46]*Z[67]+Z[65];
	Z[65] = 15.*Z[46];
	M[234] = Z[65];
	M[238] = 15.*(Z[1]*Z[43]-Z[9]*(Z[2]*Z[18]+Z[4]*Z[29]));
	Z[356] = Z[9]*(Z[2]*Z[61]+Z[4]*Z[63])-Z[1]*Z[68];
	Z[357] = 15.*Z[356];
	M[239] = Z[357];
	Z[358] = Z[2]*Z[72];
	Z[359] = Z[1]*Z[83];
	M[240] = 15.*(Z[9]*(Z[4]*Z[77]-Z[358])+Z[359]);
	Z[360] = Z[2]*Z[90];
	Z[361] = Z[9]*(Z[4]*Z[44]+Z[360])-Z[1]*Z[63];
	Z[362] = 15.*Z[361];
	M[241] = Z[362];
	Z[363] = Z[4]*Z[90];
	Z[364] = Z[1]*Z[61];
	Z[365] = Z[9]*(Z[2]*Z[45]+Z[363])-Z[364];
	Z[366] = 15.*Z[365];
	M[242] = -Z[366];
	M[243] = Z[9]*(Z[4]*Z[266]-Z[2]*Z[94]);
	Z[367] = 5616.;
	Z[368] = 29806.14;
	V[3] = Z[367]*(Z[9]*(Z[4]*Z[187]-Z[2]*Z[135])-Z[1]*Z[247])+Z[1]*Z[170]+Z[368]-Z[9]*(Z[2]*(Z[154]-Z[195])+Z[4]*Z[176])+15.*(Z[1]*Z[212]-Z[71]*Z[248])-54590.*Y[43];
	M[313] = Z[65];
	M[316] = 15.*(Z[1]*Z[48]-Z[9]*(Z[2]*Z[26]+Z[4]*Z[32]));
	M[317] = Z[357];
	Z[135] = Z[2]*Z[74];
	Z[187] = Z[1]*Z[81];
	M[318] = 15.*(Z[9]*(Z[4]*Z[80]-Z[135])+Z[187]);
	M[319] = Z[362];
	M[320] = -Z[366];
	M[321] = Z[9]*(Z[4]*Z[276]-Z[2]*Z[93]);
	V[4] = Z[367]*(Z[9]*(Z[4]*Z[225]-Z[2]*Z[140])-Z[1]*Z[246])+Z[368]+Z[1]*Z[162]-Z[9]*(Z[2]*(Z[153]-Z[189])+Z[4]*Z[172])+15.*(Z[1]*Z[208]-Z[71]*Z[199])-54590.*Y[45];
	M[392] = Z[65];
	M[394] = 15.*(Z[1]*Z[53]-Z[9]*(Z[2]*Z[31]+Z[4]*Z[28]));
	M[395] = Z[357];
	Z[140] = Z[2]*Z[79];
	Z[189] = Z[1]*Z[82];
	M[396] = 15.*(Z[9]*(Z[4]*Z[76]-Z[140])+Z[189]);
	M[397] = Z[362];
	M[398] = -Z[366];
	M[399] = Z[9]*(Z[4]*Z[265]-Z[2]*Z[95]);
	Z[195] = 3806.;
	Z[199] = 30712.5;
	V[5] = Z[195]*(Z[9]*(Z[4]*Z[219]-Z[2]*Z[143])-Z[1]*Z[235])+Z[1]*Z[166]+Z[199]-Z[9]*(Z[2]*(Z[152]-Z[243])+Z[4]*Z[174])+15.*(Z[1]*Z[224]-Z[71]*Z[144])-56250.*Y[47];
	M[471] = Z[65];
	M[472] = 15.*(Z[1]*Z[38]-Z[9]*(Z[2]*Z[23]+Z[4]*Z[30]));
	M[473] = Z[357];
	Z[143] = Z[2]*Z[73];
	Z[144] = Z[1]*Z[84];
	M[474] = 15.*(Z[9]*(Z[4]*Z[78]-Z[143])+Z[144]);
	M[475] = Z[362];
	M[476] = -Z[366];
	M[477] = Z[9]*(Z[4]*Z[275]-Z[2]*Z[96]);
	V[6] = Z[199]+Z[1]*Z[158]-Z[195]*(Z[1]*Z[251]+Z[9]*(Z[2]*Z[146]-Z[4]*Z[213]))-Z[9]*(Z[2]*(Z[151]-Z[204])+Z[4]*Z[178])+15.*(Z[1]*Z[218]-Z[71]*Z[252])-56250.*Y[49];
	Z[146] = Z[2]*Z[77]+Z[4]*Z[72];
	M[546] = 15.*Z[146];
	Z[195] = Z[2]*Z[80]+Z[4]*Z[74];
	M[547] = 15.*Z[195];
	Z[199] = Z[2]*Z[76]+Z[4]*Z[79];
	M[548] = 15.*Z[199];
	Z[204] = Z[2]*Z[78]+Z[4]*Z[73];
	M[549] = 15.*Z[204];
	Z[208] = Z[2]*Z[190]+Z[4]*Z[118];
	Z[212] = Z[2]*Z[126]+Z[4]*Z[33];
	Z[213] = Z[2]*Z[236]+Z[4]*Z[228];
	Z[218] = Z[2]*Z[241]+Z[4]*Z[261];
	Z[219] = Z[2]*Z[185]+Z[4]*Z[186];
	Z[224] = Z[2]*Z[232]+Z[4]*Z[50];
	Z[225] = Z[2]*Z[91]+Z[4]*Z[35];
	Z[235] = -Z[66]-1786.5;
	Z[243] = Z[2]*Z[237]+Z[4]*Z[92];
	Z[246] = Z[14]*Z[26]+Z[40]*Z[48]+Z[15]*Z[31]+Z[51]*Z[53]+Z[21]*Z[23]+Z[38]*Z[57]+Z[16]*Z[18]+Z[43]*Z[55]-Y[45]*(Z[1]*Z[26]+Z[48]*Z[75])-Y[47]*(Z[1]*Z[31]+Z[53]*Z[75])-Y[49]*(Z[1]*Z[23]+Z[38]*Z[75])-Y[43]*(Z[1]*Z[18]+Z[43]*Z[75]);
	Z[38] = Z[21]*Z[30]+Z[15]*Z[28]+Z[14]*Z[32]+Z[16]*Z[29]-Y[43]*(Z[1]*Z[29]+Z[43]*Z[71])-Y[49]*(Z[1]*Z[30]+Z[38]*Z[71])-Z[19]*Z[38]-Z[27]*Z[53]-Y[47]*(Z[1]*Z[28]+Z[53]*Z[71])-Z[24]*Z[48]-Y[45]*(Z[1]*Z[32]+Z[48]*Z[71])-Z[13]*Z[43];
	Z[10] = Z[212]+Z[213]+Z[224]+Z[225]-Z[2]*Z[235]-1919.3*Z[10]*Z[3];
	Z[3] = Z[208]+Z[218]+Z[219]+Z[243]-Z[4]*Z[235]+1919.3*Z[6]*Z[3];
	M[550] = Z[2]*Z[10]+Z[3]*Z[4]-15.*(Z[2]*Z[246]+Z[38]*Z[4]);
	Z[6] = Z[68]*Z[75]+Z[364];
	Z[43] = Z[1]*Z[63]+Z[68]*Z[71];
	Z[43] = Z[43]*Y[43]+Z[43]*Y[45]+Z[43]*Y[47]+Z[43]*Y[49]+Z[13]*Z[68]+Z[19]*Z[68]+Z[24]*Z[68]+Z[27]*Z[68]-Z[14]*Z[63]-Z[15]*Z[63]-Z[16]*Z[63]-Z[21]*Z[63];
	Z[6] = Y[43]*Z[6]+Y[45]*Z[6]+Z[6]*Y[47]+Z[6]*Y[49]-Z[14]*Z[61]-Z[15]*Z[61]-Z[16]*Z[61]-Z[21]*Z[61]-Z[40]*Z[68]-Z[51]*Z[68]-Z[55]*Z[68]-Z[57]*Z[68];
	M[551] = -15.*(Z[2]*Z[6]+Z[4]*Z[43]);
	Z[48] = Z[9]*(Z[4]*Z[237]-Z[2]*Z[92])-Z[1]*Z[133];
	Z[53] = Z[9]*(Z[4]*Z[91]-Z[2]*Z[35])-Z[1]*Z[203];
	Z[68] = Z[9]*(Z[4]*Z[232]-Z[2]*Z[50])-Z[1]*Z[41];
	Z[235] = Z[9]*(Z[4]*Z[185]-Z[2]*Z[186])-Z[1]*Z[171];
	Z[247] = Z[9]*(Z[4]*Z[236]-Z[2]*Z[228])-Z[1]*Z[231];
	Z[248] = Z[9]*(Z[4]*Z[241]-Z[2]*Z[261])-Z[184]*Z[1];
	Z[251] = Z[9]*(Z[4]*Z[190]-Z[2]*Z[118])-Z[1]*Z[34];
	Z[252] = Z[9]*(Z[4]*Z[126]-Z[2]*Z[33])-Z[1]*Z[54];
	Z[357] = Z[13]*Z[83]+Z[16]*Z[77]+Z[14]*Z[80]+Z[24]*Z[81]+Z[15]*Z[76]+Z[27]*Z[82]+Z[19]*Z[84]+Z[21]*Z[78]-Y[45]*(Z[1]*Z[80]-Z[71]*Z[81])-Y[47]*(Z[1]*Z[76]-Z[71]*Z[82])-Y[49]*(Z[1]*Z[78]-Z[71]*Z[84])-Y[43]*(Z[1]*Z[77]-Z[71]*Z[83]);
	Z[72] = Y[43]*(Z[1]*Z[72]+Z[75]*Z[83])+Y[49]*(Z[1]*Z[73]+Z[75]*Z[84])+Y[47]*(Z[1]*Z[79]+Z[75]*Z[82])+Y[45]*(Z[1]*Z[74]+Z[75]*Z[81])-Z[16]*Z[72]-Z[55]*Z[83]-Z[21]*Z[73]-Z[57]*Z[84]-Z[15]*Z[79]-Z[51]*Z[82]-Z[14]*Z[74]-Z[40]*Z[81];
	Z[73] = Z[48]+Z[235]+Z[248]+Z[251];
	Z[74] = Z[53]+Z[68]+Z[247]+Z[252];
	M[552] = -(Z[2]*Z[74]+Z[4]*Z[73])+15.*(Z[2]*Z[72]+Z[4]*Z[357]);
	Z[79] = Z[1]*Z[90];
	Z[81] = Z[63]*Z[75]+Z[79];
	Z[82] = Z[16]*Z[90];
	Z[83] = Z[55]*Z[63];
	Z[84] = Z[1]*Z[44]+Z[63]*Z[71];
	Z[362] = Z[21]*Z[90];
	Z[364] = Z[57]*Z[63];
	Z[366] = Z[15]*Z[90];
	Z[367] = Z[51]*Z[63];
	Z[368] = Z[14]*Z[90];
	Z[369] = Z[40]*Z[63];
	Z[81] = Z[81]*Y[43]+Z[81]*Y[45]+Z[81]*Y[47]+Z[81]*Y[49]-Z[82]-Z[83]-Z[362]-Z[364]-Z[366]-Z[367]-Z[368]-Z[369];
	Z[84] = Z[84]*Y[43]+Z[84]*Y[45]+Z[84]*Y[47]+Z[84]*Y[49]+Z[13]*Z[63]+Z[19]*Z[63]+Z[24]*Z[63]+Z[27]*Z[63]-Z[14]*Z[44]-Z[15]*Z[44]-Z[16]*Z[44]-Z[21]*Z[44];
	M[553] = -15.*(Z[2]*Z[81]+Z[4]*Z[84]);
	Z[370] = Z[1]*Z[45]+Z[61]*Z[75];
	Z[371] = Z[13]*Z[61];
	Z[79] = Z[61]*Z[71]+Z[79];
	Z[372] = Z[24]*Z[61];
	Z[373] = Z[27]*Z[61];
	Z[374] = Z[19]*Z[61];
	Z[79] = Z[82]+Z[362]+Z[366]+Z[368]-Z[79]*Y[43]-Z[79]*Y[45]-Z[79]*Y[47]-Z[79]*Y[49]-Z[371]-Z[372]-Z[373]-Z[374];
	Z[82] = Z[14]*Z[45]+Z[15]*Z[45]+Z[16]*Z[45]+Z[21]*Z[45]+Z[40]*Z[61]+Z[51]*Z[61]+Z[55]*Z[61]+Z[57]*Z[61]-Z[370]*Y[43]-Z[370]*Y[45]-Z[370]*Y[47]-Z[370]*Y[49];
	M[554] = -15.*(Z[2]*Z[82]+Z[4]*Z[79]);
	Z[299] = -Z[299];
	Z[362] = 1919.3*Z[11]*Z[0];
	Z[366] = 1919.3*Z[7]*Z[0];
	Z[62] = Z[9]*(Z[62]*Z[299]-Z[362]);
	Z[368] = Z[16]*Z[94];
	Z[370] = Z[21]*Z[96];
	Z[375] = Z[14]*Z[93];
	Z[376] = Z[14]*Z[276];
	Z[60] = Z[9]*(Z[60]*Z[299]+Z[366]);
	Z[377] = Z[16]*Z[266];
	Z[378] = Z[21]*Z[275];
	M[555] = -(Z[1]*(Z[2]*(-(Z[303]+Z[300]+Z[301]+Z[302]))+Z[4]*(Z[308]+Z[305]+Z[306]+Z[307]))+Z[2]*(Z[15]*Z[95]+Z[368]+Z[370]+Z[375]-Z[41]-Z[54]-Z[62]-Z[203]-Z[231])+Z[4]*(Z[60]-Z[15]*Z[265]-Z[34]-Z[133]-Z[171]-Z[184]-Z[376]-Z[377]-Z[378]));
	Z[300] = Z[34]*Z[116]+Z[190]*Z[122]-Z[117]*Z[118];
	Z[301] = Z[54]*Z[116]+Z[122]*Z[126]-Z[33]*Z[117];
	M[556] = -(Z[2]*Z[301]+Z[4]*Z[300]);
	Z[302] = Z[41]*Z[116]+Z[122]*Z[232]-Z[50]*Z[117];
	Z[303] = Z[116]*Z[171]+Z[122]*Z[185]-Z[117]*Z[186];
	M[557] = -(Z[2]*Z[302]+Z[4]*Z[303]);
	Z[305] = Z[12]*Z[237]+Z[59]*Z[133]-Z[8]*Z[92];
	Z[306] = Z[12]*Z[91]+Z[59]*Z[203]-Z[8]*Z[35];
	M[558] = -(Z[2]*Z[306]+Z[4]*Z[305]);
	Z[307] = Z[12]*Z[236]+Z[59]*Z[231]-Z[8]*Z[228];
	Z[308] = Z[12]*Z[241]+Z[59]*Z[184]-Z[8]*Z[261];
	M[559] = -(Z[2]*Z[307]+Z[4]*Z[308]);
	Z[288] = -Z[288]*Z[104]*Z[103]*Z[110];
	Z[319] = -Z[319]*Z[104]*Z[103]*Z[110];
	Z[321] = Z[321]*Z[121];
	Z[323] = Z[323]*Z[121];
	Z[159] = Z[207]*Z[242]-Z[159]-Z[161]-15.*Z[188];
	Z[161] = Z[14]*Z[123]-Z[24]*Z[159];
	Z[188] = Y[45]*(Z[1]*Z[123]+Z[71]*Z[159]);
	Z[14] = Z[14]*Z[25]-Z[40]*Z[159];
	Z[159] = Y[45]*(Z[1]*Z[25]-Z[75]*Z[159]);
	Z[163] = Z[223]*Z[242]+Z[163]-Z[165]-15.*Z[222];
	Z[165] = Z[15]*Z[20]-Z[27]*Z[163];
	Z[207] = Y[47]*(Z[1]*Z[20]+Z[71]*Z[163]);
	Z[222] = Y[47]*(Z[1]*Z[125]-Z[75]*Z[163]);
	Z[163] = Z[15]*Z[125]-Z[51]*Z[163];
	Z[167] = Z[210]*Z[242]-Z[167]-Z[169]-15.*Z[209];
	Z[169] = Y[43]*(Z[1]*Z[114]+Z[71]*Z[167]);
	Z[209] = Z[16]*Z[114]-Z[13]*Z[167];
	Z[16] = Z[16]*Z[17]-Z[55]*Z[167];
	Z[167] = Y[43]*(Z[1]*Z[17]-Z[75]*Z[167]);
	Z[155] = Z[217]*Z[242]+Z[155]-Z[157]-15.*Z[216];
	Z[157] = Y[49]*(Z[1]*Z[112]+Z[71]*Z[155]);
	Z[210] = Z[21]*Z[112]-Z[19]*Z[155];
	Z[216] = Y[49]*(Z[1]*Z[22]-Z[75]*Z[155]);
	Z[21] = Z[21]*Z[22]-Z[57]*Z[155];
	Z[155] = -(Z[124]*Z[162]+Z[153]*Z[321]);
	Z[162] = Z[162]*Z[322]-Z[172]*Z[321];
	Z[172] = -(Z[109]*Z[166]+Z[152]*Z[319]);
	Z[166] = Z[166]*Z[320]-Z[174]*Z[319];
	Z[174] = -(Z[119]*Z[170]+Z[154]*Z[323]);
	Z[170] = Z[170]*Z[324]-Z[176]*Z[323];
	Z[176] = -(Z[113]*Z[158]+Z[151]*Z[288]);
	Z[158] = Z[158]*Z[289]-Z[178]*Z[288];
	Z[178] = Z[141]*Z[193]-Z[138]*Z[286]-Z[156]*Z[196];
	Z[102] = Z[34]*Z[173]+Z[102]*Z[138]+Z[190]*Z[220]-Z[118]*Z[194]-Z[141]*Z[178];
	Z[33] = Z[54]*Z[173]+Z[126]*Z[220]-Z[33]*Z[194]-Z[138]*Z[240]-Z[156]*Z[178];
	Z[118] = Z[168]*Z[263]-Z[175]*Z[287]-Z[200]*Z[260];
	Z[101] = Z[118]*Z[168]+Z[147]*Z[186]+Z[164]*Z[171]-Z[101]*Z[175]-Z[160]*Z[185];
	Z[50] = Z[41]*Z[164]+Z[50]*Z[147]+Z[118]*Z[200]+Z[175]*Z[202]-Z[160]*Z[232];
	Z[118] = Z[177]*Z[245]+Z[201]*Z[280]-Z[221]*Z[238];
	Z[126] = Z[118]*Z[221]+Z[128]*Z[231]+Z[192]*Z[228]+Z[201]*Z[262]-Z[236]*Z[254];
	Z[118] = Z[118]*Z[177]+Z[128]*Z[184]+Z[192]*Z[261]-Z[201]*Z[234]-Z[241]*Z[254];
	Z[128] = Z[132]*Z[253]+Z[230]*Z[279]-Z[182]*Z[258];
	Z[35] = Z[35]*Z[134]+Z[115]*Z[203]+Z[128]*Z[182]+Z[183]*Z[230]-Z[91]*Z[131];
	Z[91] = 0.5;
	Z[91] = Z[91]*(Y[24]*Y[24]-Z[354])+Z[191]*Y[18];
	Z[138] = -2280.7;
	Z[138] = Y[24]*(Y[18]*Z[138]-Z[326]-Z[66]*(Z[211]*Y[18]+Z[191]));
	Z[66] = Z[130]*(Z[325]-Z[66])-646.15*Y[24];
	Z[11] = -(Z[9]*(-Z[138]*Z[4]+3838.6*Z[11]*Z[91]*Z[0])+Z[211]*Y[14]*(Z[88]*Z[299]*Y[24]+Z[366]*Y[18]+Z[2]*Z[66]));
	Z[42] = Z[92]*Z[134]+Z[115]*Z[133]+Z[128]*Z[132]-Z[42]*Z[230]-Z[131]*Z[237];
	Z[0] = Z[211]*Y[14]*(Z[4]*Z[67]*Z[299]*Y[24]+Z[4]*Z[66]-Z[362]*Y[18])-Z[9]*(-Z[138]*Z[2]-3838.6*Z[7]*Z[91]*Z[0]);
	V[7] = -(Z[2]*(Z[159]+Z[222]+Z[167]-Z[14]-Z[163]-Z[16])+Z[4]*(Z[161]+Z[165]+Z[209]-Z[188]-Z[207])+Z[2]*(Z[216]+Z[33]+Z[0]-Z[21]-Z[155]-Z[172]-Z[174]-Z[176]-Z[50]-Z[126]-Z[35])+Z[4]*(Z[210]+Z[102]+Z[11]-Z[169]-Z[157]-Z[162]-Z[166]-Z[170]-Z[158]-Z[101]-Z[118]-Z[42]));
	M[624] = -Z[65];
	M[625] = -Z[65];
	M[626] = -Z[65];
	M[627] = -Z[65];
	M[628] = 15.*(Z[9]*(Z[2]*Z[52]+Z[4]*Z[47])-Z[1]*Z[58]);
	M[629] = Z[1]*Z[70]-Z[69]*Z[356];
	M[630] = -15.*(Z[1]*Z[87]+Z[9]*(-(Z[2]*Z[85]+Z[4]*Z[86])));
	M[631] = -(Z[69]*Z[361]+Z[70]*Z[71]);
	M[632] = Z[69]*Z[365]+Z[70]*Z[75];
	M[633] = Z[75]*(Z[94]+Z[96]+Z[93]+Z[95])-15.*Z[71]*(Z[97]+Z[98]+Z[99]+Z[100]);
	V[8] = Z[9]*(Z[2]*Z[206]+Z[4]*Z[214])-Z[70]*(Z[9]*(Z[179]*Y[24]+Z[2]*Z[205]+Z[198]-Z[197])+Z[127]-Y[14]*Z[181])-Z[1]*Z[215]+15.*(Z[71]*Z[229]-Z[1]*Z[226]);
	M[702] = 15.*(Z[9]*(Z[358]-Z[4]*Z[77])-Z[359]);
	M[703] = 15.*(Z[9]*(Z[135]-Z[4]*Z[80])-Z[187]);
	M[704] = 15.*(Z[9]*(Z[140]-Z[4]*Z[76])-Z[189]);
	M[705] = 15.*(Z[9]*(Z[143]-Z[4]*Z[78])-Z[144]);
	Z[7] = Z[2]*Z[253]+Z[4]*Z[258];
	Z[47] = Z[2]*Z[193]+Z[4]*Z[196];
	Z[52] = Z[2]*Z[263]+Z[4]*Z[260];
	Z[58] = Z[2]*Z[245]+Z[4]*Z[238];
	M[706] = Z[1]*(Z[7]+Z[47]+Z[52]+Z[58])+Z[9]*(Z[3]*Z[2]-Z[4]*Z[10])-15.*(Z[1]*(Z[249]*(Z[2]*Z[30]-Z[4]*Z[23])-Z[273]-Z[272]-Z[269]-Z[267]-Z[244]*(Z[4]*Z[26]-Z[2]*Z[32])-Z[271]-Z[270]-Z[227]*(Z[4]*Z[18]-Z[2]*Z[29])-Z[274]-Z[268]-Z[233]*(Z[4]*Z[31]-Z[2]*Z[28]))+Z[9]*(Z[38]*Z[2]-Z[4]*Z[246]))-1919.3*Z[39]*Z[5];
	Z[3] = Z[4]*Z[61]-Z[2]*Z[63];
	M[707] = 15.*(Z[1]*(-(Z[3]*Z[227]+Z[3]*Z[233]+Z[3]*Z[244]+Z[3]*Z[249]+Z[83]+Z[364]+Z[367]+Z[369]+Z[371]+Z[372]+Z[373]+Z[374]))+Z[9]*(Z[4]*Z[6]-Z[2]*Z[43]));
	Z[3] = Z[1]*Z[279]+Z[9]*(Z[2]*Z[258]-Z[4]*Z[253]);
	Z[5] = Z[9]*(Z[4]*Z[193]-Z[2]*Z[196])-Z[1]*Z[286];
	Z[6] = Z[9]*(Z[4]*Z[263]-Z[2]*Z[260])-Z[1]*Z[287];
	Z[10] = Z[9]*(Z[4]*Z[245]-Z[2]*Z[238])-Z[1]*Z[280];
	M[708] = Z[46]*Z[298]-Z[1]*(Z[5]+Z[6]+Z[10]-Z[3])-Z[9]*(Z[2]*Z[73]-Z[4]*Z[74])+15.*(Z[1]*(Z[146]*Z[227]+Z[195]*Z[244]+Z[199]*Z[233]+Z[204]*Z[249]+Z[291]+Z[292]+Z[294]+Z[295]-Z[290]-Z[293]-Z[296]-Z[297])+Z[9]*(Z[2]*Z[357]-Z[4]*Z[72]));
	Z[18] = Z[2]*Z[44]-Z[363];
	M[709] = 15.*(Z[1]*(Z[18]*Z[227]+Z[18]*Z[233]+Z[18]*Z[244]+Z[18]*Z[249]-Z[13]*Z[90]-Z[19]*Z[90]-Z[24]*Z[90]-Z[27]*Z[90]-Z[40]*Z[44]-Z[44]*Z[51]-Z[44]*Z[55]-Z[44]*Z[57])+Z[9]*(Z[4]*Z[81]-Z[2]*Z[84]));
	Z[18] = Z[4]*Z[45]-Z[360];
	M[710] = 15.*(Z[1]*(Z[13]*Z[45]+Z[18]*Z[227]+Z[18]*Z[233]+Z[18]*Z[244]+Z[18]*Z[249]+Z[19]*Z[45]+Z[24]*Z[45]+Z[27]*Z[45]+Z[40]*Z[90]+Z[51]*Z[90]+Z[55]*Z[90]+Z[57]*Z[90])+Z[9]*(Z[4]*Z[82]-Z[2]*Z[79]));
	Z[13] = Z[2]*Z[265]+Z[4]*Z[95];
	M[711] = Z[9]*Z[13]*Z[15]-Z[1]*(Z[9]*(Z[2]*Z[309]+Z[4]*Z[304])-Z[279]-Z[280]-Z[286]-Z[287])-Z[9]*(Z[2]*(-(Z[376]+Z[378]))+Z[4]*(-(Z[375]+Z[368]+Z[370])))-Z[1]*(Z[316]+Z[310]+Z[313]+Z[318]+Z[317]-Z[315]-Z[249]*(Z[2]*Z[275]+Z[4]*Z[96])-Z[312]-Z[244]*(Z[2]*Z[276]+Z[4]*Z[93])-Z[314]-Z[227]*(Z[2]*Z[266]+Z[4]*Z[94])-Z[298]-Z[311]-Z[233]*Z[13])-Z[9]*(Z[2]*(Z[60]-Z[133]-Z[184]-Z[34]-Z[171]-Z[377])+Z[4]*(Z[203]+Z[231]+Z[54]+Z[41]+Z[62]));
	M[712] = Z[9]*(Z[4]*Z[301]-Z[2]*Z[300])-Z[1]*Z[277];
	M[713] = Z[9]*(Z[4]*Z[302]-Z[2]*Z[303])-Z[1]*Z[281];
	M[714] = Z[9]*(Z[4]*Z[306]-Z[2]*Z[305])-Z[1]*Z[283];
	M[715] = Z[9]*(Z[4]*Z[307]-Z[2]*Z[308])-Z[1]*Z[285];
	Z[13] = Z[256]-Z[337];
	Z[15] = Z[259]-Z[334];
	Z[18] = Z[255]-Z[335];
	Z[19] = Z[257]-Z[336];
	Z[23] = Z[339]+Z[338]-Z[346]-Z[347]-Z[340];
	Z[24] = Z[344]+Z[345]+Z[341]+Z[343]-Z[342];
	Z[26] = Z[250]+Z[129]+Z[349]-Z[348]-Z[350];
	Z[27] = Z[239]+Z[89]+Z[353]-Z[351]-Z[352];
	Z[17] = Z[330]+Z[233]*(Z[2]*Z[20]+Z[4]*Z[125])+Z[332]+Z[227]*(Z[2]*Z[114]+Z[4]*Z[17])+Z[23]-Z[327]-Z[328]-Z[13]-Z[15]-Z[18]-Z[19];
	V[9] = -(Z[1]*Z[17]+Z[1]*(Z[331]+Z[249]*(Z[2]*Z[112]+Z[4]*Z[22])+Z[333]+Z[244]*(Z[2]*Z[123]+Z[4]*Z[25])+Z[26]+Z[27]-Z[329]-Z[264]-Z[24]-Z[355]-Z[180])+Z[9]*(Z[2]*(Z[161]+Z[210]+Z[102]-Z[188]-Z[157]-Z[170])+Z[4]*(Z[14]+Z[21]+Z[172]+Z[174]-Z[159]-Z[216]-Z[33]))+Z[9]*(Z[2]*(Z[165]+Z[209]+Z[11]-Z[207]-Z[169]-Z[162]-Z[166]-Z[158]-Z[101]-Z[118]-Z[42])+Z[4]*(Z[163]+Z[16]+Z[155]+Z[176]+Z[50]+Z[126]+Z[35]-Z[222]-Z[167]-Z[0])));
	M[784] = Z[8]*Z[218]-Z[12]*Z[213]-Z[58]*Z[59];
	M[786] = Z[10]*Z[59]+Z[12]*Z[247]-Z[8]*Z[248];
	M[789] = Z[8]*Z[184]-Z[12]*Z[231]-Z[284];
	M[793] = Z[12]*Z[307]+Z[59]*Z[285]-Z[8]*Z[308];
	M[804] = -1.;
	V[10] = -(Z[8]*(-(Z[158]+Z[118]))+Z[12]*(Z[176]+Z[126])+Z[59]*(Z[13]-Z[26]));
	M[870] = -1.;
	M[883] = 1.;
	M[940] = Z[8]*Z[243]-Z[7]*Z[59]-Z[12]*Z[225];
	M[942] = Z[12]*Z[53]-Z[59]*Z[3]-Z[8]*Z[48];
	M[945] = Z[8]*Z[133]-Z[12]*Z[203]-Z[282];
	M[948] = Z[12]*Z[306]+Z[59]*Z[283]-Z[8]*Z[305];
	M[959] = -1.;
	V[12] = -(Z[8]*(-(Z[166]+Z[42]))+Z[12]*(Z[172]+Z[35])+Z[59]*(Z[18]-Z[27]));
	M[1105] = -1.;
	M[1118] = 1.;
	M[1252] = Z[117]*Z[219]-Z[52]*Z[116]-Z[122]*Z[224];
	M[1254] = Z[6]*Z[116]+Z[68]*Z[122]-Z[117]*Z[235];
	M[1257] = Z[117]*Z[171]-Z[41]*Z[122]-Z[278];
	M[1259] = Z[116]*Z[281]+Z[122]*Z[302]-Z[117]*Z[303];
	M[1270] = -1.;
	V[16] = -(Z[116]*(Z[15]+Z[24])+Z[117]*(-(Z[162]+Z[101]))+Z[122]*(Z[155]+Z[50]));
	M[1336] = -1.;
	M[1353] = 1.;
	M[1408] = Z[117]*Z[208]-Z[47]*Z[116]-Z[122]*Z[212];
	M[1410] = Z[5]*Z[116]+Z[122]*Z[252]-Z[117]*Z[251];
	M[1413] = Z[34]*Z[117]-Z[54]*Z[122]-Z[64];
	M[1414] = Z[116]*Z[277]+Z[122]*Z[301]-Z[117]*Z[300];
	M[1425] = -1.;
	V[18] = -(Z[116]*(Z[19]-Z[23])+Z[117]*(Z[102]-Z[170])+Z[122]*(Z[174]-Z[33]));
	M[1571] = -1.;
	M[1588] = 1.;
	M[1731] = 1.;
	M[1747] = -1.;
	M[2044] = 1.;
	Z[0] = Y[397]+1.;
	Z[1] = 1.0/Y[386];
	Z[2] = 1.0/Y[390];
	Z[3] = Z[1]*Z[2];
	Z[4] = Z[3]*Z[0];
	M[2062] = -Z[4];
	Z[5] = 1.0/Z[0];
	Z[6] = 1.0/Y[387];
	M[2063] = -(Z[5]*Z[6]*Y[397]+Z[1])*Z[2]*Z[0];
	M[2065] = -Z[4];
	V[26] = -Y[397]*Z[6]*Y[170]*Z[2];
	M[2138] = 0.001;
	M[2144] = -0.002;
	V[27] = Y[8]*Y[59];
	M[2198] = -1.;
	M[2199] = 1.;
	M[2272] = -0.5;
	M[2273] = -0.5;
	M[2276] = 1.;
	M[2278] = 1.;
	Z[1] = 1.0/Y[388];
	M[2760] = -Z[1];
	Z[0] = Z[3]*Y[387]*Y[388]*Y[389]*Z[0]*Z[1]*Z[6];
	M[2764] = Z[0];
	Z[2] = Y[389]*Y[388];
	M[2765] = Z[3]*Z[2]*((Y[386]+Y[387])*Y[397]+Y[387])*Z[1]*Z[6];
	M[2767] = Z[0];
	V[35] = Z[3]*Y[386]*(Z[2]*Y[170]*Y[397]+Y[171]*Y[387]*Y[390])*Z[1]*Z[6];
	LSQDecompSolve(39,M,78,P,V);
	if( P[38]==0 ) {
		YP[0] = (*dsn_undef);
		return;
	}
	YP[44] = V[0];
	YP[46] = V[1];
	YP[48] = V[2];
	YP[50] = V[3];
	YP[14] = V[4];
	YP[16] = V[5];
	YP[18] = V[6];
	YP[20] = V[7];
	YP[22] = V[8];
	YP[24] = V[9];
	YP[52] = V[10];
	YP[54] = V[11];
	YP[56] = V[12];
	YP[58] = V[13];
	YP[59] = V[14];
	YP[5] = V[15];
	YP[7] = V[16];
	Y[95] = V[17];
	Y[96] = V[18];
	Y[97] = V[19];
	Y[98] = V[20];
	Y[204] = V[21];
	Y[205] = V[22];
	Y[206] = V[23];
	Y[207] = V[24];
	Y[173] = V[25];
	Y[174] = V[26];
	Y[175] = V[27];
	Y[176] = V[28];
	Y[65] = V[29];
	Y[64] = V[30];
	Y[100] = V[31];
	Y[67] = V[32];
	Y[103] = V[33];
	Y[68] = V[34];
	Y[69] = V[35];
	Y[106] = V[36];
	Y[107] = V[37];
	Y[101] = V[38];
	Z[0] = Z[386];
	Z[1] = Z[390];
	Z[2] = Z[391];
	Z[3] = Y[14]*Z[0];
	Z[4] = Y[18]*Z[1];
	Z[5] = Z[3]-Z[2]*Z[4];
	Y[187] = Z[5];
	YP[25] = Y[186];
	Z[6] = Y[14]*Z[2];
	Z[4] = Z[0]*Z[4]+Z[6];
	Y[188] = Z[4];
	YP[26] = Y[187];
	Z[7] = Z[389];
	Z[8] = Y[263]+Y[18];
	Z[9] = Z[7]*Z[8]+Y[24];
	Y[189] = Z[9];
	YP[27] = Y[188];
	Z[3] = Z[3]-Z[1]*Z[2]*Z[8];
	Y[190] = Z[3];
	YP[28] = Y[189];
	Z[6] = Z[0]*Z[1]*Z[8]+Z[6];
	Y[191] = Z[6];
	YP[29] = Y[190];
	Y[192] = Z[9];
	YP[30] = Y[191];
	Y[193] = Z[3];
	YP[31] = Y[192];
	Y[194] = Z[6];
	YP[32] = Y[193];
	Z[3] = Y[18]*Z[7]+Y[24];
	Y[195] = Z[3];
	YP[33] = Y[194];
	Y[196] = Z[5];
	YP[34] = Y[195];
	Y[197] = Z[4];
	YP[35] = Y[196];
	Y[198] = Z[3];
	YP[36] = Y[197];
	Y[199] = Z[5];
	YP[37] = Y[198];
	Y[200] = Z[4];
	YP[38] = Y[199];
	Y[201] = Z[3];
	YP[39] = Y[200];
	Y[202] = Z[5];
	YP[40] = Y[201];
	Y[203] = Z[4];
	YP[41] = Y[202];
	Z[3] = Z[379];
	Z[4] = Z[382];
	Z[5] = Z[3]*Z[7];
	Y[177] = (Z[0]*Z[4]+Z[2]*Z[5])*Y[20]+(Z[2]*Z[4]-Z[5]*Z[0])*Y[22]+Z[1]*Z[3]*Y[16];
	YP[42] = Y[203];
	Y[112] = exp(0.2432856897999999983*Y[177]+10.0796158700000004-49.97929146000000156*Y[83]);
	Z[0] = Y[112]+1.;
	Z[0] = 1.0/Z[0];
	Y[113] = Z[0];
	Y[117] = exp(-0.02812856950000000153*Y[177]-76.55028944*Y[83]+21.56605852);
	Z[0] = 1.+Y[117];
	Z[0] = 1.0/Z[0];
	Y[118] = Z[0];
	Y[114] = exp(-7.239079096000000587*Y[118]+2.71471066500000017-7.00272036*Y[113]);
	Y[115] = exp(-0.6107030660000000201+3.313240363999999869*Y[113]+6.73137902*Y[118]);
	Z[0] = Y[114]+Y[115];
	Z[0] = 1.0/Z[0];
	Y[116] = Z[0];
	Y[71] = Y[114]*Y[116];
	Y[72] = Y[116]*Y[115];
	Y[121] = exp(6.7963375-0.2838676995999999849*Y[177]-11.09524043*Y[83]);
	Y[122] = exp(0.01241087923000000106*Y[177]+21.5722487*Y[83]-6.272946396000000213);
	Z[0] = Y[122]+1.;
	Z[1] = Y[121]+1.;
	Z[1] = 1.0/Z[1];
	Z[0] = 1.0/Z[0];
	Y[74] = -777.8647008*Z[1]-2929.728568*Z[0]+2540.738686;
	if( Y[340]==1. )
		Y[125] = 0.;
	else
		Y[125] = Y[74];
	if( Y[339]==1. )
		Y[123] = 0.;
	else
		Y[123] = Y[125];
	Y[119] = exp(-7.974254557999999552+28.12302425999999872*Y[83]-0.0003008746441999999843*Y[177]);
	YP[11] = 25.*Y[123]-50.*Y[11];
	Y[120] = exp(0.4441051494000000178*Y[177]-22.40944005999999913+83.70368844*Y[83]);
	Z[0] = Y[120]+1.;
	Z[1] = Y[119]+1.;
	Z[0] = 1.0/Z[0];
	Z[1] = 1.0/Z[1];
	Y[73] = 4428.883585-4592.896108*Z[1]-244.0444174*Z[0];
	if( Y[341]==1. )
		Y[124] = 0.;
	else
		Y[124] = Y[73];
	Y[66] = fabs(9.54929658551372013*Y[389]*Y[7]);
	Z[0] = Y[267];
	Z[1] = sin(Z[0]);
	Z[2] = Z[379];
	Z[3] = Z[389];
	Z[4] = Z[386];
	Z[5] = Z[382];
	Z[6] = Z[391];
	Z[7] = Z[2]*Z[4];
	Z[8] = Z[5]*Z[6];
	Z[9] = Z[8]-Z[3]*Z[7];
	Z[0] = cos(Z[0]);
	Z[10] = Z[5]*Z[4];
	Z[11] = Z[2]*Z[6];
	Z[12] = Z[10]*Z[3]+Z[11];
	Z[13] = Z[1]*Z[9]-Z[0]*Z[12];
	Z[14] = -asin(Z[13]);
	Z[15] = Z[390];
	Z[16] = Z[15]*(Z[5]*Z[0]+Z[1]*Z[2]);
	Z[17] = 1.-Z[13]*Z[13];
	if( Z[17]<=0. ) {
		YP[0] = (*dsn_undef);
		return;
	}
	Z[18] = (1.0/(sqrt(Z[17])));
	Z[19] = -Z[16]*Z[18];
	Z[10] = Z[3]*Z[11]+Z[10];
	Z[7] = Z[7]-Z[8]*Z[3];
	Z[0] = Z[1]*Z[10]-Z[7]*Z[0];
	Z[1] = -Z[0]*Z[18];
	Z[8] = Z[15]*Z[4];
	Z[11] = Z[8]*Y[43];
	Z[18] = 0.7396;
	Z[20] = 1.3745;
	Z[21] = Z[20]*Z[9];
	Z[22] = Z[18]*Z[12];
	Z[23] = 0.25*Z[8];
	Z[17] = fabs(Z[17])+1e-20;
	Z[17] = (Z[23]+Z[21]+Z[22]+Y[21]-Z[11])/sqrt(Z[17]);
	Z[24] = 0.01*Z[17]+0.004657894736842105263*atan(412.2033898305084746*Z[17]-146.3322033898305085)+0.35145;
	Z[25] = Y[263]+Y[18];
	Z[26] = Y[14]*Z[4];
	Z[27] = Z[15]*Z[6];
	Z[28] = Y[14]*Z[6];
	Z[29] = cos(Z[14]);
	Z[29] = (1.0/(Z[29]*Z[29]));
	Z[0] = -(Z[0]*(Z[26]-Z[0]*Y[52]-Z[25]*Z[27])+Z[16]*(Z[3]*Z[25]+Y[24]-Z[16]*Y[52])+(Z[13]+sin(Z[14]))*(Z[8]*Z[25]+Z[28]-Z[13]*Y[52]))*Z[29];
	Z[9] = Z[2]*Z[15]*Y[16]+Z[10]*Y[20]+Z[9]*Y[22];
	Z[12] = Z[7]*Y[20]+Z[12]*Y[22]-Z[5]*Z[15]*Y[16];
	Z[13] = Z[23]+Z[21]+Z[22];
	Z[8] = Z[8]*Y[18]+Z[28];
	Z[16] = Y[16]*Z[3]+Z[15]*(Z[4]*Y[22]-Z[6]*Y[20])-Y[44];
	Z[21] = Z[3]*Y[18]+Y[24];
	Z[2] = Z[1]*(Z[3]*Z[16]+Z[15]*(Z[9]*Z[2]-Z[5]*Z[12])+(Z[13]-Z[11])*(Z[26]-Z[27]*Y[18])+(-(Z[27]*Y[43]+Z[7]*Z[18]+Z[10]*Z[20])+0.25*Z[27])*Z[8])-Z[19]*(Z[7]*Z[12]+Z[8]*(Z[15]*(Z[2]*Z[20]-Z[5]*Z[18])-Y[43]*Z[3]+0.25*Z[3])+Z[9]*Z[10]+Z[15]*(Z[4]*Z[21]*Y[43]-Z[6]*Z[16])-Z[13]*Z[21]);
	Z[3] = -3.333333333333333333;
	YP[0] = Z[3]*(Y[0]*fabs(Z[2])+Z[2]-Z[0]*Z[24]);
	Z[0] = Z[390];
	Z[1] = Z[0];
	Z[2] = Z[382];
	Z[3] = Z[2];
	Z[4] = Z[389];
	Z[5] = Z[386];
	Z[6] = Z[379];
	Z[7] = Z[391];
	Z[8] = Z[2]*Z[5];
	Z[9] = Z[6]*Z[7];
	Z[10] = Z[8]*Z[4]+Z[9];
	Z[11] = asin(Z[10]);
	Z[12] = 1.-Z[10]*Z[10];
	Z[13] = (1.0/(sqrt(Z[12])));
	Z[14] = Z[2]*Z[7];
	Z[15] = Z[5]*Z[6];
	Z[16] = Z[15]-Z[4]*Z[14];
	Z[17] = Z[16]/sqrt(Z[12]);
	Z[14] = Z[14]-Z[15]*Z[4];
	Z[15] = Z[5]*Z[0];
	Z[18] = Z[15]*Y[47];
	Z[19] = 0.7361;
	Z[20] = -1.4755;
	Z[21] = Z[19]*Z[10];
	Z[22] = Z[20]*Z[14];
	Z[23] = 0.25*Z[15];
	Z[12] = fabs(Z[12])+1e-20;
	Z[12] = (Y[21]+Z[23]+Z[22]+Z[21]-Z[18])/sqrt(Z[12]);
	Z[24] = 0.01*Z[12]+0.004657894736842105263*atan(412.2033898305084746*Z[12]-146.3322033898305085)+0.35145;
	Z[25] = Y[18]*Z[4];
	Z[26] = Z[0]*Z[2];
	Z[27] = Z[5]*Y[14];
	Z[28] = Y[18]*Z[0]*Z[7];
	Z[29] = Y[14]*Z[7];
	Z[15] = Z[15]*Y[18];
	Z[30] = cos(Z[11]);
	Z[30] = (1.0/(Z[30]*Z[30]));
	Z[30] = (Z[16]*(Z[16]*Y[56]+Z[27]-Z[28])+(Z[10]-sin(Z[11]))*(Z[10]*Y[56]+Z[15]+Z[29])-Z[26]*(Y[24]+Z[25]-Z[26]*Y[56]))*Z[30];
	Z[8] = Z[9]*Z[4]+Z[8];
	Z[9] = Z[0]*Z[6]*Y[16]+Z[8]*Y[20]+Z[14]*Y[22];
	Z[10] = Z[16]*Y[20]+Z[10]*Y[22]-Z[26]*Y[16];
	Z[14] = Z[23]+Z[21]+Z[22];
	Z[15] = Z[15]+Z[29];
	Z[21] = Y[16]*Z[4]+Z[0]*(Z[5]*Y[22]-Z[7]*Y[20])-Y[48];
	Z[22] = Z[25]+Y[24];
	Z[0] = Z[17]*(Z[0]*(Z[6]*Z[9]-Z[2]*Z[10])+Z[4]*Z[21]+(Z[14]-Z[18])*(Z[27]-Z[28])+(-(Z[8]*Z[20]+Z[16]*Z[19]+Z[0]*Y[47]*Z[7])+0.25*Z[7]*Z[0])*Z[15])+(Z[0]*(Z[5]*Z[22]*Y[47]-Z[7]*Z[21])+Z[8]*Z[9]+Z[10]*Z[16]+Z[15]*(Z[0]*(Z[6]*Z[20]-Z[2]*Z[19])-Y[47]*Z[4]+0.25*Z[4])-Z[14]*Z[22])*Z[3]*Z[1]*Z[13];
	Z[2] = -3.333333333333333333;
	YP[1] = Z[2]*(Y[1]*fabs(Z[0])+Z[0]-Z[24]*Z[30]);
	Z[0] = Y[267];
	Z[1] = sin(Z[0]);
	Z[2] = Z[379];
	Z[3] = Z[389];
	Z[4] = Z[386];
	Z[5] = Z[382];
	Z[6] = Z[391];
	Z[7] = Z[2]*Z[4];
	Z[8] = Z[5]*Z[6];
	Z[9] = Z[8]-Z[3]*Z[7];
	Z[0] = cos(Z[0]);
	Z[10] = Z[5]*Z[4];
	Z[11] = Z[2]*Z[6];
	Z[12] = Z[10]*Z[3]+Z[11];
	Z[13] = Z[1]*Z[9]-Z[0]*Z[12];
	Z[14] = -asin(Z[13]);
	Z[15] = Z[390];
	Z[16] = Z[15]*(Z[5]*Z[0]+Z[1]*Z[2]);
	Z[17] = 1.-Z[13]*Z[13];
	Z[18] = (1.0/(sqrt(Z[17])));
	Z[19] = -Z[16]*Z[18];
	Z[10] = Z[3]*Z[11]+Z[10];
	Z[7] = Z[7]-Z[8]*Z[3];
	Z[0] = Z[1]*Z[10]-Z[7]*Z[0];
	Z[1] = -Z[0]*Z[18];
	Z[8] = Z[15]*Z[4];
	Z[11] = Z[8]*Y[45];
	Z[18] = 0.8424;
	Z[20] = 1.3745;
	Z[21] = Z[20]*Z[9];
	Z[22] = Z[18]*Z[12];
	Z[23] = 0.25*Z[8];
	Z[17] = fabs(Z[17])+1e-20;
	Z[17] = (Y[21]+Z[21]+Z[23]-Z[11]-Z[22])/sqrt(Z[17]);
	Z[24] = 0.01*Z[17]+0.004657894736842105263*atan(412.2033898305084746*Z[17]-146.3322033898305085)+0.35145;
	Z[25] = Y[263]+Y[18];
	Z[26] = Y[14]*Z[4];
	Z[27] = Z[15]*Z[6];
	Z[28] = Y[14]*Z[6];
	Z[29] = cos(Z[14]);
	Z[29] = (1.0/(Z[29]*Z[29]));
	Z[0] = -(Z[0]*(Z[26]-Z[0]*Y[54]-Z[25]*Z[27])+Z[16]*(Z[3]*Z[25]+Y[24]-Z[16]*Y[54])+(Z[13]+sin(Z[14]))*(Z[8]*Z[25]+Z[28]-Z[13]*Y[54]))*Z[29];
	Z[9] = Z[2]*Z[15]*Y[16]+Z[10]*Y[20]+Z[9]*Y[22];
	Z[12] = Z[7]*Y[20]+Z[12]*Y[22]-Z[5]*Z[15]*Y[16];
	Z[13] = Z[21]+Z[23]-Z[22];
	Z[8] = Z[8]*Y[18]+Z[28];
	Z[16] = Y[16]*Z[3]+Z[15]*(Z[4]*Y[22]-Z[6]*Y[20])-Y[46];
	Z[21] = Z[3]*Y[18]+Y[24];
	Z[2] = Z[1]*(Z[3]*Z[16]+Z[15]*(Z[9]*Z[2]-Z[5]*Z[12])+(Z[13]-Z[11])*(Z[26]-Z[27]*Y[18])+(Z[7]*Z[18]-Z[10]*Z[20]-Z[27]*Y[45]+0.25*Z[27])*Z[8])-Z[19]*(Z[7]*Z[12]+Z[8]*(Z[15]*(Z[2]*Z[20]+Z[5]*Z[18])-Y[45]*Z[3]+0.25*Z[3])+Z[9]*Z[10]+Z[15]*(Z[4]*Z[21]*Y[45]-Z[6]*Z[16])-Z[13]*Z[21]);
	Z[3] = -3.333333333333333333;
	YP[2] = Z[3]*(Y[2]*fabs(Z[2])+Z[2]-Z[0]*Z[24]);
	Z[0] = Z[390];
	Z[1] = Z[0];
	Z[2] = Z[382];
	Z[3] = Z[2];
	Z[4] = Z[389];
	Z[5] = Z[386];
	Z[6] = Z[379];
	Z[7] = Z[391];
	Z[8] = Z[2]*Z[5];
	Z[9] = Z[6]*Z[7];
	Z[10] = Z[8]*Z[4]+Z[9];
	Z[11] = asin(Z[10]);
	Z[12] = 1.-Z[10]*Z[10];
	Z[13] = (1.0/(sqrt(Z[12])));
	Z[14] = Z[2]*Z[7];
	Z[15] = Z[5]*Z[6];
	Z[16] = Z[15]-Z[4]*Z[14];
	Z[17] = Z[16]/sqrt(Z[12]);
	Z[14] = Z[14]-Z[15]*Z[4];
	Z[15] = Z[5]*Z[0];
	Z[18] = Z[15]*Y[49];
	Z[19] = 0.8389;
	Z[20] = -1.4755;
	Z[21] = Z[20]*Z[14];
	Z[22] = Z[19]*Z[10];
	Z[23] = 0.25*Z[15];
	Z[12] = fabs(Z[12])+1e-20;
	Z[12] = (Y[21]+Z[21]+Z[23]-Z[18]-Z[22])/sqrt(Z[12]);
	Z[24] = 0.01*Z[12]+0.004657894736842105263*atan(412.2033898305084746*Z[12]-146.3322033898305085)+0.35145;
	Z[25] = Y[18]*Z[4];
	Z[26] = Z[0]*Z[2];
	Z[27] = Z[5]*Y[14];
	Z[28] = Y[18]*Z[0]*Z[7];
	Z[29] = Y[14]*Z[7];
	Z[15] = Z[15]*Y[18];
	Z[30] = cos(Z[11]);
	Z[30] = (1.0/(Z[30]*Z[30]));
	Z[30] = (Z[16]*(Z[16]*Y[58]+Z[27]-Z[28])+(Z[10]-sin(Z[11]))*(Z[10]*Y[58]+Z[15]+Z[29])-Z[26]*(Y[24]+Z[25]-Z[26]*Y[58]))*Z[30];
	Z[8] = Z[9]*Z[4]+Z[8];
	Z[9] = Z[0]*Z[6]*Y[16]+Z[8]*Y[20]+Z[14]*Y[22];
	Z[10] = Z[16]*Y[20]+Z[10]*Y[22]-Z[26]*Y[16];
	Z[14] = Z[21]+Z[23]-Z[22];
	Z[15] = Z[15]+Z[29];
	Z[21] = Y[16]*Z[4]+Z[0]*(Z[5]*Y[22]-Z[7]*Y[20])-Y[50];
	Z[22] = Z[25]+Y[24];
	Z[0] = Z[17]*(Z[0]*(Z[6]*Z[9]-Z[2]*Z[10])+Z[4]*Z[21]+(Z[14]-Z[18])*(Z[27]-Z[28])+(Z[16]*Z[19]-Z[8]*Z[20]-Z[0]*Y[49]*Z[7]+0.25*Z[7]*Z[0])*Z[15])+(Z[0]*(Z[5]*Z[22]*Y[49]-Z[7]*Z[21])+Z[8]*Z[9]+Z[10]*Z[16]+Z[15]*(Z[0]*(Z[2]*Z[19]+Z[6]*Z[20])-Y[49]*Z[4]+0.25*Z[4])-Z[14]*Z[22])*Z[3]*Z[1]*Z[13];
	Z[2] = -3.333333333333333333;
	YP[3] = Z[2]*(Y[3]*fabs(Z[0])+Z[0]-Z[24]*Z[30]);
	YP[6] = (1.*(Y[170]-Y[69]))/Y[387];
	YP[12] = 25.*Y[124]-50.*Y[12];
	if( Y[288]==1. )
		Y[108] = 1.;
	else
		Y[108] = 0.;
	if( Y[288]==1. )
		Y[109] = 0.;
	else
		Y[109] = 1.;
	Z[0] = 50.;
	YP[8] = Z[0]*(Y[108]-Y[8]);
	Z[0] = Y[267];
	Z[1] = sin(Z[0]);
	Z[2] = Z[379];
	Z[3] = Z[390];
	Z[0] = cos(Z[0]);
	Z[4] = Z[382];
	Z[5] = Z[3]*(Z[0]*Z[4]+Z[1]*Z[2]);
	Z[6] = Z[389];
	Z[7] = Z[386];
	Z[8] = Z[391];
	Z[9] = Z[2]*Z[7];
	Z[10] = Z[8]*Z[4];
	Z[11] = Z[10]-Z[6]*Z[9];
	Z[12] = Z[4]*Z[7];
	Z[13] = Z[2]*Z[8];
	Z[14] = Z[6]*Z[12]+Z[13];
	Z[15] = Z[1]*Z[11]-Z[0]*Z[14];
	Z[16] = 1.-Z[15]*Z[15];
	Z[17] = (1.0/(sqrt(Z[16])));
	Z[18] = -Z[5]*Z[17];
	Z[12] = Z[6]*Z[13]+Z[12];
	Z[9] = Z[9]-Z[6]*Z[10];
	Z[0] = Z[1]*Z[12]-Z[0]*Z[9];
	Z[1] = -Z[0]*Z[17];
	Z[10] = Z[3]*Z[7];
	Z[13] = Z[10]*Y[43];
	Z[17] = 0.7396;
	Z[19] = 1.3745;
	Z[20] = Z[19]*Z[11];
	Z[21] = Z[17]*Z[14];
	Z[22] = 0.25*Z[10];
	Z[16] = fabs(Z[16])+1e-20;
	Z[23] = (1.0/(sqrt(Z[16])));
	Z[24] = (Z[21]+Z[20]+Y[21]+Z[22]-Z[13])*Z[23];
	Z[16] = -Z[24]*Z[16]*Z[23];
	Z[23] = Z[24]*Z[15];
	Z[25] = -Z[23]*Z[18];
	Z[23] = -Z[1]*Z[23];
	Z[11] = Z[2]*Z[3]*Y[16]+Z[12]*Y[20]+Z[11]*Y[22];
	Z[14] = Z[9]*Y[20]+Z[14]*Y[22]-Z[3]*Z[4]*Y[16];
	Z[26] = Y[14]*Z[7];
	Z[20] = Z[21]+Z[20]+Z[22];
	Z[21] = Y[14]*Z[8];
	Z[22] = Z[10]*Y[18]+Z[21];
	Z[27] = Y[16]*Z[6]+Z[3]*(Z[7]*Y[22]-Z[8]*Y[20])-Y[44];
	Z[28] = Z[3]*(Z[2]*Z[11]-Z[4]*Z[14]);
	Z[13] = (Z[20]-Z[13])*(Z[26]-Z[3]*Z[8]*Y[18]);
	Z[29] = (-(Y[43]*Z[3]*Z[8]+Z[9]*Z[17]+Z[12]*Z[19])+0.25*Z[8]*Z[3])*Z[22];
	Z[30] = Z[27]*Z[6];
	Z[31] = Z[6]*Y[18]+Y[24];
	Z[27] = Z[27]*Z[8];
	Z[7] = Z[7]*Y[43]*Z[31];
	Z[2] = (Z[3]*(Z[2]*Z[19]-Z[4]*Z[17])-Y[43]*Z[6]+0.25*Z[6])*Z[22];
	Z[4] = Z[12]*Z[11];
	Z[9] = Z[9]*Z[14];
	Z[11] = Z[31]*Z[20];
	Z[12] = Z[1]*(Z[29]+Z[30]+Z[28]+Z[13])-Z[18]*(Z[3]*(Z[7]-Z[27])+Z[2]+Z[4]+Z[9]-Z[11]);
	Z[14] = Y[263]+Y[18];
	Z[10] = Z[10]*Z[14]+Z[21]-Z[15]*Y[52];
	Z[0] = Z[18]*(Z[16]*(Z[26]-Z[3]*Z[8]*Z[14]-Z[0]*Y[52])+Z[13]+Z[28]+Z[29]+Z[30]-Z[23]*Z[10])-Z[1]*(Z[3]*(Z[27]-Z[7])+Z[16]*(Z[6]*Z[14]+Y[24]-Z[5]*Y[52])+Z[11]-Z[10]*Z[25]-Z[2]-Z[4]-Z[9]);
	Z[2] = -3.333333333333333333;
	YP[60] = Z[2]*(Y[60]*fabs(Z[12])-Z[0]);
	Z[0] = Z[390];
	Z[1] = Z[0];
	Z[2] = Z[382];
	Z[3] = Z[2];
	Z[4] = Z[389];
	Z[5] = Z[386];
	Z[6] = Z[379];
	Z[7] = Z[391];
	Z[8] = Z[2]*Z[5];
	Z[9] = Z[6]*Z[7];
	Z[10] = Z[8]*Z[4]+Z[9];
	Z[11] = 1.-Z[10]*Z[10];
	Z[12] = (1.0/(sqrt(Z[11])));
	Z[13] = Z[2]*Z[7];
	Z[14] = Z[5]*Z[6];
	Z[15] = Z[14]-Z[4]*Z[13];
	Z[16] = Z[15]/sqrt(Z[11]);
	Z[13] = Z[13]-Z[4]*Z[14];
	Z[14] = Z[5]*Z[0];
	Z[17] = Z[14]*Y[47];
	Z[18] = 0.7361;
	Z[19] = -1.4755;
	Z[20] = Z[18]*Z[10];
	Z[21] = Z[19]*Z[13];
	Z[22] = 0.25*Z[14];
	Z[11] = fabs(Z[11])+1e-20;
	Z[23] = (1.0/(sqrt(Z[11])));
	Z[24] = (Z[22]+Z[21]+Z[20]+Y[21]-Z[17])*Z[23];
	Z[11] = -Z[24]*Z[11]*Z[23];
	Z[23] = Z[24]*Z[10];
	Z[25] = -Z[23]*Z[3]*Z[1]*Z[12];
	Z[23] = Z[16]*Z[23];
	Z[8] = Z[9]*Z[4]+Z[8];
	Z[9] = Z[0]*Z[6]*Y[16]+Z[8]*Y[20]+Z[13]*Y[22];
	Z[13] = Z[0]*Z[2];
	Z[26] = Z[15]*Y[20]+Z[10]*Y[22]-Z[13]*Y[16];
	Z[27] = Z[5]*Y[14];
	Z[28] = Y[18]*Z[0]*Z[7];
	Z[20] = Z[21]+Z[20]+Z[22];
	Z[21] = Y[14]*Z[7];
	Z[14] = Z[14]*Y[18];
	Z[22] = Z[14]+Z[21];
	Z[29] = Y[16]*Z[4]+Z[0]*(Z[5]*Y[22]-Z[7]*Y[20])-Y[48];
	Z[30] = Z[0]*(Z[6]*Z[9]-Z[2]*Z[26]);
	Z[31] = (-(Z[0]*Y[47]*Z[7]+Z[19]*Z[8]+Z[15]*Z[18])+0.25*Z[7]*Z[0])*Z[22];
	Z[17] = (Z[20]-Z[17])*(Z[27]-Z[28]);
	Z[32] = Z[4]*Z[29];
	Z[33] = Y[18]*Z[4];
	Z[34] = Z[33]+Y[24];
	Z[5] = (Z[5]*Z[34]*Y[47]-Z[7]*Z[29])*Z[0];
	Z[0] = (Z[0]*(Z[6]*Z[19]-Z[2]*Z[18])-Y[47]*Z[4]+0.25*Z[4])*Z[22];
	Z[2] = Z[8]*Z[9];
	Z[4] = Z[15]*Z[26];
	Z[6] = Z[34]*Z[20];
	Z[7] = Z[16]*(Z[32]+Z[30]+Z[31]+Z[17])+(Z[2]+Z[4]+Z[0]+Z[5]-Z[6])*Z[3]*Z[1]*Z[12];
	Z[8] = Z[10]*Y[56]+Z[14]+Z[21];
	Z[0] = Z[16]*(Z[8]*Z[25]+Z[0]+Z[2]+Z[4]+Z[5]-Z[11]*(Y[24]+Z[33]-Z[13]*Y[56])-Z[6])-(Z[11]*(Z[15]*Y[56]+Z[27]-Z[28])+Z[17]+Z[30]+Z[31]+Z[32]-Z[23]*Z[8])*Z[3]*Z[1]*Z[12];
	Z[2] = -3.333333333333333333;
	YP[61] = Z[2]*(Y[61]*fabs(Z[7])-Z[0]);
	Z[0] = Y[267];
	Z[1] = sin(Z[0]);
	Z[2] = Z[379];
	Z[3] = Z[390];
	Z[0] = cos(Z[0]);
	Z[4] = Z[382];
	Z[5] = Z[3]*(Z[0]*Z[4]+Z[1]*Z[2]);
	Z[6] = Z[389];
	Z[7] = Z[386];
	Z[8] = Z[391];
	Z[9] = Z[2]*Z[7];
	Z[10] = Z[8]*Z[4];
	Z[11] = Z[10]-Z[6]*Z[9];
	Z[12] = Z[4]*Z[7];
	Z[13] = Z[2]*Z[8];
	Z[14] = Z[6]*Z[12]+Z[13];
	Z[15] = Z[1]*Z[11]-Z[0]*Z[14];
	Z[16] = 1.-Z[15]*Z[15];
	Z[17] = (1.0/(sqrt(Z[16])));
	Z[18] = -Z[5]*Z[17];
	Z[12] = Z[6]*Z[13]+Z[12];
	Z[9] = Z[9]-Z[6]*Z[10];
	Z[0] = Z[1]*Z[12]-Z[0]*Z[9];
	Z[1] = -Z[0]*Z[17];
	Z[10] = Z[3]*Z[7];
	Z[13] = Z[10]*Y[45];
	Z[17] = 0.8424;
	Z[19] = 1.3745;
	Z[20] = Z[19]*Z[11];
	Z[21] = Z[17]*Z[14];
	Z[22] = 0.25*Z[10];
	Z[16] = fabs(Z[16])+1e-20;
	Z[23] = (1.0/(sqrt(Z[16])));
	Z[24] = (Y[21]+Z[20]+Z[22]-Z[13]-Z[21])*Z[23];
	Z[16] = -Z[24]*Z[16]*Z[23];
	Z[23] = Z[24]*Z[15];
	Z[25] = -Z[23]*Z[18];
	Z[23] = -Z[1]*Z[23];
	Z[11] = Z[2]*Z[3]*Y[16]+Z[12]*Y[20]+Z[11]*Y[22];
	Z[14] = Z[9]*Y[20]+Z[14]*Y[22]-Z[3]*Z[4]*Y[16];
	Z[26] = Y[14]*Z[7];
	Z[20] = Z[20]+Z[22]-Z[21];
	Z[21] = Y[14]*Z[8];
	Z[22] = Z[10]*Y[18]+Z[21];
	Z[27] = Y[16]*Z[6]+Z[3]*(Z[7]*Y[22]-Z[8]*Y[20])-Y[46];
	Z[28] = Z[3]*(Z[2]*Z[11]-Z[4]*Z[14]);
	Z[13] = (Z[20]-Z[13])*(Z[26]-Z[3]*Z[8]*Y[18]);
	Z[29] = (Z[9]*Z[17]-Y[45]*Z[3]*Z[8]-Z[12]*Z[19]+0.25*Z[8]*Z[3])*Z[22];
	Z[30] = Z[27]*Z[6];
	Z[31] = Z[6]*Y[18]+Y[24];
	Z[7] = (Z[27]*Z[8]-Z[7]*Z[31]*Y[45])*Z[3];
	Z[2] = (Y[45]*Z[6]-Z[3]*(Z[2]*Z[19]+Z[4]*Z[17])-0.25*Z[6])*Z[22];
	Z[4] = Z[31]*Z[20];
	Z[11] = Z[12]*Z[11];
	Z[9] = Z[9]*Z[14];
	Z[12] = Z[1]*(Z[29]+Z[30]+Z[28]+Z[13])+Z[18]*(Z[7]+Z[2]+Z[4]-Z[11]-Z[9]);
	Z[14] = Y[263]+Y[18];
	Z[10] = Z[15]*Y[54]-Z[10]*Z[14]-Z[21];
	Z[0] = -(Z[1]*(Z[10]*Z[25]+Z[16]*(Z[6]*Z[14]+Y[24]-Z[5]*Y[54])+Z[2]+Z[4]+Z[7]-Z[9]-Z[11])+Z[18]*(Z[16]*(Z[3]*Z[8]*Z[14]+Z[0]*Y[54]-Z[26])-Z[23]*Z[10]-Z[13]-Z[28]-Z[29]-Z[30]));
	Z[2] = -3.333333333333333333;
	YP[62] = Z[2]*(Y[62]*fabs(Z[12])-Z[0]);
	Z[0] = Z[390];
	Z[1] = Z[0];
	Z[2] = Z[382];
	Z[3] = Z[2];
	Z[4] = Z[389];
	Z[5] = Z[386];
	Z[6] = Z[379];
	Z[7] = Z[391];
	Z[8] = Z[2]*Z[5];
	Z[9] = Z[6]*Z[7];
	Z[10] = Z[8]*Z[4]+Z[9];
	Z[11] = 1.-Z[10]*Z[10];
	Z[12] = (1.0/(sqrt(Z[11])));
	Z[13] = Z[2]*Z[7];
	Z[14] = Z[5]*Z[6];
	Z[15] = Z[14]-Z[4]*Z[13];
	Z[16] = Z[15]/sqrt(Z[11]);
	Z[13] = Z[13]-Z[4]*Z[14];
	Z[14] = Z[5]*Z[0];
	Z[17] = Z[14]*Y[49];
	Z[18] = 0.8389;
	Z[19] = -1.4755;
	Z[20] = Z[19]*Z[13];
	Z[21] = Z[18]*Z[10];
	Z[22] = 0.25*Z[14];
	Z[11] = fabs(Z[11])+1e-20;
	Z[23] = (1.0/(sqrt(Z[11])));
	Z[24] = (Z[22]+Z[20]+Y[21]-Z[21]-Z[17])*Z[23];
	Z[11] = -Z[24]*Z[11]*Z[23];
	Z[23] = Z[24]*Z[10];
	Z[25] = -Z[23]*Z[3]*Z[1]*Z[12];
	Z[23] = Z[16]*Z[23];
	Z[8] = Z[9]*Z[4]+Z[8];
	Z[9] = Z[0]*Z[6]*Y[16]+Z[8]*Y[20]+Z[13]*Y[22];
	Z[13] = Z[0]*Z[2];
	Z[26] = Z[15]*Y[20]+Z[10]*Y[22]-Z[13]*Y[16];
	Z[27] = Z[5]*Y[14];
	Z[28] = Y[18]*Z[0]*Z[7];
	Z[20] = Z[20]+Z[22]-Z[21];
	Z[21] = Y[14]*Z[7];
	Z[14] = Z[14]*Y[18];
	Z[22] = Z[14]+Z[21];
	Z[29] = Y[16]*Z[4]+Z[0]*(Z[5]*Y[22]-Z[7]*Y[20])-Y[50];
	Z[30] = Z[0]*(Z[6]*Z[9]-Z[2]*Z[26]);
	Z[31] = (Z[15]*Z[18]-Z[0]*Y[49]*Z[7]-Z[19]*Z[8]+0.25*Z[7]*Z[0])*Z[22];
	Z[17] = (Z[20]-Z[17])*(Z[27]-Z[28]);
	Z[32] = Z[4]*Z[29];
	Z[33] = Y[18]*Z[4];
	Z[34] = Z[33]+Y[24];
	Z[5] = (Z[5]*Z[34]*Y[49]-Z[7]*Z[29])*Z[0];
	Z[0] = (Z[0]*(Z[2]*Z[18]+Z[6]*Z[19])-Y[49]*Z[4]+0.25*Z[4])*Z[22];
	Z[2] = Z[8]*Z[9];
	Z[4] = Z[15]*Z[26];
	Z[6] = Z[34]*Z[20];
	Z[7] = Z[16]*(Z[32]+Z[30]+Z[31]+Z[17])+(Z[2]+Z[4]+Z[0]+Z[5]-Z[6])*Z[3]*Z[1]*Z[12];
	Z[8] = Z[10]*Y[58]+Z[14]+Z[21];
	Z[0] = Z[16]*(Z[8]*Z[25]+Z[0]+Z[2]+Z[4]+Z[5]-Z[11]*(Y[24]+Z[33]-Z[13]*Y[58])-Z[6])-(Z[11]*(Z[15]*Y[58]+Z[27]-Z[28])+Z[17]+Z[30]+Z[31]+Z[32]-Z[23]*Z[8])*Z[3]*Z[1]*Z[12];
	Z[2] = -3.333333333333333333;
	YP[63] = Z[2]*(Y[63]*fabs(Z[7])-Z[0]);
	Z[0] = Z[394];
	Z[1] = Y[267];
	Z[2] = sin(Z[1]);
	Z[3] = Z[379];
	Z[4] = Z[390];
	Z[1] = cos(Z[1]);
	Z[5] = Z[382];
	Z[6] = Z[4]*(Z[1]*Z[5]+Z[3]*Z[2]);
	Z[7] = Z[389];
	Z[8] = Z[386];
	Z[9] = Z[391];
	Z[10] = Z[8]*Z[3];
	Z[11] = Z[5]*Z[9];
	Z[12] = Z[11]-Z[7]*Z[10];
	Z[13] = Z[5]*Z[8];
	Z[14] = Z[3]*Z[9];
	Z[15] = Z[7]*Z[13]+Z[14];
	Z[16] = Z[2]*Z[12]-Z[1]*Z[15];
	Z[17] = Z[16]*Z[16];
	Z[18] = 1.-Z[17];
	Z[19] = (1.0/(sqrt(Z[18])));
	Z[20] = -Z[6]*Z[19];
	Z[13] = Z[7]*Z[14]+Z[13];
	Z[10] = Z[10]-Z[7]*Z[11];
	Z[11] = Z[2]*Z[13]-Z[1]*Z[10];
	Z[14] = -Z[19]*Z[11];
	Z[19] = Z[8]*Z[4];
	Z[21] = 0.7396;
	Z[22] = 1.3745*Z[12];
	Z[23] = 0.25*Z[19];
	Z[18] = fabs(Z[18])+1e-20;
	Z[24] = (1.0/(sqrt(Z[18])));
	Z[25] = (Z[15]*Z[21]+Y[21]+Z[22]+Z[23]-Z[19]*Y[43])*Z[24];
	Z[26] = Z[3]*Z[4];
	Z[27] = Z[5]*Z[4];
	Z[28] = Y[16]*Z[7]+Z[4]*(Z[8]*Y[22]-Z[9]*Y[20]);
	Z[29] = Y[18]*Z[7];
	Z[30] = Y[24]+Z[29];
	Z[31] = 1.3745*Z[13];
	Z[32] = 0.25*Z[9]*Z[4];
	Z[33] = Y[14]*Z[8];
	Z[34] = Y[18]*Z[4];
	Z[35] = Z[9]*Z[34];
	Z[36] = Z[33]-Z[35];
	Z[37] = 1.3745*Z[3];
	Z[38] = 0.25*Z[7];
	Z[39] = Z[12]*(Z[26]*Y[16]+Z[13]*Y[20]+Z[12]*Y[22]);
	Z[40] = Z[15]*(Z[10]*Y[20]+Z[15]*Y[22]-Z[27]*Y[16]);
	Z[21] = Z[4]*(Z[8]*(Z[28]-Y[44])+Z[9]*Y[43]*Z[30])+Z[30]*(Z[10]*Z[21]+Z[31]-Z[32])+(Z[7]*Y[43]-Z[4]*(Z[37]-Z[5]*Z[21])-Z[38])*Z[36]+Z[39]+Z[40];
	Z[41] = -96060.*Z[0];
	Z[18] = Z[18]*Z[24];
	Z[42] = -Z[25]*Z[18];
	Z[43] = Z[25]*Z[16];
	Z[44] = -Z[43]*Z[20];
	Z[43] = -Z[43]*Z[14];
	Z[45] = -500.*Z[21]+107920.-304000.*Z[25];
	if( Z[45]>1. )
		Z[46] = Z[45];
	else
		Z[46] = 1.;
	Z[47] = 60240.*Y[0];
	Z[48] = Z[14]*Z[41]-Z[20]*Z[47];
	Z[49] = Z[388];
	Z[50] = Z[392];
	Z[51] = Z[50]*Z[7];
	Z[52] = Z[4]*(Z[1]*Z[3]-Z[2]*Z[5]);
	Z[53] = Z[49]*Z[52]-Z[51];
	Z[54] = Z[49]*Z[7];
	Z[55] = Z[50]*Z[52]+Z[54];
	Z[56] = 0.78;
	Z[57] = 1.4*Z[6]*Z[6];
	Z[58] = Z[56]*(Z[53]*Z[53]+Z[55]*Z[55])+Z[57];
	Z[59] = Y[14]*Z[9];
	Z[60] = Z[19]*Y[18];
	Z[61] = Z[60]+Z[59];
	Z[62] = Y[263]+Y[18];
	Z[63] = Z[9]*Z[4];
	Z[64] = Z[63]*Z[62];
	Z[65] = Z[33]-Z[64];
	Z[66] = Z[19]*Z[62];
	Z[67] = Z[66]+Z[59];
	Z[68] = Y[14]*Y[18];
	Z[69] = Z[11]*Z[67]-Z[16]*Z[65];
	Z[70] = Y[264]+YP[18];
	Z[71] = Z[70]*Z[7];
	Z[72] = Z[4]*((Z[8]*Z[36]+Z[9]*Z[61])*Y[263]+Z[68]);
	Z[73] = Z[69]*Y[52]+YP[24]+Z[71]+Z[72]-Z[6]*YP[52];
	Z[74] = Z[1]*Z[13]+Z[2]*Z[10];
	Z[75] = Z[63]*Z[50];
	Z[76] = Z[49]*Z[74]+Z[75];
	Z[77] = Z[63]*Z[49];
	Z[78] = Z[50]*Z[74]-Z[77];
	Z[79] = 1.4*Z[6];
	Z[80] = Z[79]*Z[11];
	Z[81] = Z[56]*(Z[53]*Z[76]+Z[55]*Z[78])+Z[80];
	Z[62] = Z[62]*Z[7];
	Z[82] = Y[24]+Z[62];
	Z[83] = YP[14]-Z[4]*(Y[18]*Y[24]+Z[30]*Y[263]);
	Z[84] = Y[14]*(Z[29]-Y[24]);
	Z[70] = Z[84]-Z[4]*Z[70];
	Z[67] = Z[16]*Z[82]-Z[6]*Z[67];
	Z[85] = Z[83]*Z[8];
	Z[86] = Z[70]*Z[9];
	Z[87] = Z[61]*Z[7]*Y[263];
	Z[88] = Z[67]*Y[52]+Z[85]+Z[86]+Z[87]-Z[11]*YP[52];
	Z[1] = Z[1]*Z[12]+Z[2]*Z[15];
	Z[2] = Z[19]*Z[50];
	Z[89] = Z[1]*Z[49]-Z[2];
	Z[90] = Z[19]*Z[49];
	Z[91] = Z[1]*Z[50]+Z[90];
	Z[79] = Z[79]*Z[16];
	Z[92] = Z[56]*(Z[53]*Z[89]+Z[55]*Z[91])+Z[79];
	Z[65] = Z[6]*Z[65]-Z[11]*Z[82];
	Z[82] = Z[83]*Z[9];
	Z[70] = Z[8]*Z[70];
	Z[83] = Z[36]*Z[7]*Y[263];
	Z[93] = Z[65]*Y[52]+Z[82]-Z[16]*YP[52]-Z[70]-Z[83];
	Z[94] = Z[11]*Y[52]+Z[64]-Z[33];
	Z[95] = Z[56]*(Z[53]*Z[89]+Z[55]*Z[91])+Z[79];
	Z[96] = Z[6]*Y[52]-Y[24]-Z[62];
	Z[97] = 1.4*Z[11]*Z[16];
	Z[98] = Z[56]*(Z[76]*Z[89]+Z[78]*Z[91])+Z[97];
	Z[17] = 1.4*Z[17];
	Z[99] = Z[56]*(Z[89]*Z[89]+Z[91]*Z[91])+Z[17];
	Z[100] = Z[16]*Y[52]-Z[59]-Z[66];
	Z[101] = Z[94]*Z[98]+Z[95]*Z[96]+Z[99]*Z[100];
	Z[53] = Z[56]*(Z[53]*Z[76]+Z[55]*Z[78])+Z[80];
	Z[55] = 1.4*Z[11]*Z[11];
	Z[102] = Z[56]*(Z[76]*Z[76]+Z[78]*Z[78])+Z[55];
	Z[76] = Z[56]*(Z[76]*Z[89]+Z[78]*Z[91])+Z[97];
	Z[78] = Z[53]*Z[96]+Z[76]*Z[100]+Z[94]*Z[102];
	Z[89] = Z[42]*Z[48]+Z[58]*Z[73]+Z[81]*Z[88]+Z[92]*Z[93]+Z[94]*Z[101]-Z[43]*Z[46]-Z[78]*Z[100];
	Z[47] = Z[14]*Z[47]+Z[20]*Z[41];
	Z[58] = Z[58]*Z[96]+Z[81]*Z[94]+Z[92]*Z[100];
	Z[53] = Z[42]*Z[47]+Z[96]*Z[101]-Z[44]*Z[46]-Z[53]*Z[73]-Z[58]*Z[100]-Z[76]*Z[93]-Z[88]*Z[102];
	Z[47] = Z[44]*Z[48]+Z[58]*Z[94]-Z[43]*Z[47]-Z[73]*Z[95]-Z[78]*Z[96]-Z[88]*Z[98]-Z[93]*Z[99];
	Y[208] = Z[6]*Z[89]-Z[11]*Z[53]-Z[16]*Z[47];
	YP[4] = -50.*Y[4]+500000.*Y[109];
	Z[48] = Y[397]+1.;
	Z[48] = 1.0/Z[48];
	YP[9] = (Y[6]+(Y[7]*Y[390])/Y[397])*Z[48]*Y[397];
	YP[10] = Y[7];
	Z[48] = Z[396];
	Z[58] = 0.8424;
	Z[22] = (Y[21]+Z[22]+Z[23]-Z[19]*Y[45]-Z[15]*Z[58])*Z[24];
	Z[24] = Z[4]*(Z[8]*(Z[28]-Y[46])+Z[9]*Y[45]*Z[30])+Z[30]*(Z[31]-Z[10]*Z[58]-Z[32])+Z[36]*(Z[7]*Y[45]-Z[4]*(Z[5]*Z[58]+Z[37])-Z[38])+Z[39]+Z[40];
	Z[31] = -96060.*Z[48];
	Z[37] = Z[22]*Z[16];
	Z[58] = -Z[37]*Z[20];
	Z[37] = -Z[37]*Z[14];
	Z[18] = -Z[22]*Z[18];
	Z[73] = -500.*Z[24]+107920.-304000.*Z[22];
	if( Z[73]>1. )
		Z[76] = Z[73];
	else
		Z[76] = 1.;
	Z[78] = 60240.*Y[2];
	Z[81] = Z[14]*Z[31]-Z[20]*Z[78];
	Z[88] = Z[384];
	Z[91] = Z[385];
	Z[92] = Z[7]*Z[91];
	Z[93] = Z[92]-Z[52]*Z[88];
	Z[94] = Z[88]*Z[7];
	Z[95] = Z[52]*Z[91]+Z[94];
	Z[57] = Z[56]*(Z[93]*Z[93]+Z[95]*Z[95])+Z[57];
	Z[69] = Z[6]*YP[54]-Z[69]*Y[54]-YP[24]-Z[71]-Z[72];
	Z[71] = Z[63]*Z[91];
	Z[72] = Z[74]*Z[88]+Z[71];
	Z[96] = Z[63]*Z[88];
	Z[98] = Z[74]*Z[91]-Z[96];
	Z[99] = Z[80]-Z[56]*(Z[72]*Z[93]-Z[95]*Z[98]);
	Z[67] = Z[11]*YP[54]-Z[67]*Y[54]-Z[85]-Z[86]-Z[87];
	Z[85] = Z[19]*Z[91];
	Z[86] = Z[1]*Z[88]-Z[85];
	Z[87] = Z[19]*Z[88];
	Z[100] = Z[1]*Z[91]+Z[87];
	Z[101] = Z[79]-Z[56]*(Z[86]*Z[93]-Z[95]*Z[100]);
	Z[65] = Z[16]*YP[54]+Z[70]+Z[83]-Z[65]*Y[54]-Z[82];
	Z[64] = Z[11]*Y[54]+Z[64]-Z[33];
	Z[70] = Z[79]-Z[56]*(Z[86]*Z[93]-Z[95]*Z[100]);
	Z[62] = Z[6]*Y[54]-Y[24]-Z[62];
	Z[79] = Z[56]*(Z[72]*Z[86]+Z[98]*Z[100])+Z[97];
	Z[17] = Z[56]*(Z[86]*Z[86]+Z[100]*Z[100])+Z[17];
	Z[66] = Z[16]*Y[54]-Z[59]-Z[66];
	Z[82] = Z[17]*Z[66]+Z[70]*Z[62]+Z[64]*Z[79];
	Z[80] = Z[80]-Z[56]*(Z[72]*Z[93]-Z[95]*Z[98]);
	Z[55] = Z[56]*(Z[72]*Z[72]+Z[98]*Z[98])+Z[55];
	Z[72] = Z[56]*(Z[72]*Z[86]+Z[98]*Z[100])+Z[97];
	Z[83] = Z[55]*Z[64]+Z[62]*Z[80]+Z[66]*Z[72];
	Z[86] = Z[37]*Z[76]+Z[57]*Z[69]+Z[65]*Z[101]+Z[66]*Z[83]+Z[67]*Z[99]-Z[18]*Z[81]-Z[64]*Z[82];
	Z[78] = Z[14]*Z[78]+Z[31]*Z[20];
	Z[57] = Z[57]*Z[62]+Z[64]*Z[99]+Z[66]*Z[101];
	Z[55] = Z[18]*Z[78]+Z[55]*Z[67]+Z[62]*Z[82]+Z[65]*Z[72]+Z[69]*Z[80]-Z[57]*Z[66]-Z[58]*Z[76];
	Z[17] = Z[37]*Z[78]+Z[62]*Z[83]-Z[17]*Z[65]-Z[57]*Z[64]-Z[58]*Z[81]-Z[67]*Z[79]-Z[69]*Z[70];
	Y[209] = Z[16]*Z[17]-Z[6]*Z[86]-Z[11]*Z[55];
	Z[6] = Z[4];
	Z[11] = Z[5];
	Z[16] = Z[397];
	Z[57] = Z[15]*Z[15];
	Z[62] = 1.-Z[57];
	Z[64] = (1.0/(sqrt(Z[62])));
	Z[65] = Z[10]/sqrt(Z[62]);
	Z[66] = 0.7361;
	Z[67] = -1.4755*Z[12];
	Z[62] = fabs(Z[62])+1e-20;
	Z[69] = (1.0/(sqrt(Z[62])));
	Z[70] = (Z[15]*Z[66]+Y[21]+Z[23]+Z[67]-Z[19]*Y[47])*Z[69];
	Z[72] = -1.4755*Z[13];
	Z[3] = -1.4755*Z[3];
	Z[66] = Z[4]*(Z[8]*(Z[28]-Y[48])+Z[9]*Y[47]*Z[30])+Z[30]*(Z[10]*Z[66]+Z[72]-Z[32])+Z[36]*(Y[47]*Z[7]-Z[4]*(Z[3]-Z[5]*Z[66])-Z[38])+Z[39]+Z[40];
	Z[78] = -96060.*Z[16];
	Z[62] = Z[62]*Z[69];
	Z[79] = -Z[70]*Z[62];
	Z[80] = Z[70]*Z[15];
	Z[81] = -Z[80]*Z[11]*Z[6]*Z[64];
	Z[80] = Z[80]*Z[65];
	Z[82] = -500.*Z[66]+107920.-304000.*Z[70];
	if( Z[82]>1. )
		Z[83] = Z[82];
	else
		Z[83] = 1.;
	Z[93] = 60240.*Y[1];
	Z[95] = Z[6]*Z[11]*Z[64]*Z[93]+Z[65]*Z[78];
	Z[97] = Z[380];
	Z[98] = Z[381];
	Z[99] = Z[7]*Z[98]-Z[26]*Z[97];
	Z[100] = Z[7]*Z[97]+Z[26]*Z[98];
	Z[101] = 1.4*Z[5]*Z[5]*Z[4]*Z[4];
	Z[102] = Z[56]*(Z[99]*Z[99]+Z[100]*Z[100])+Z[101];
	Z[103] = Z[15]*Z[36]-Z[10]*Z[61];
	Z[104] = YP[18]*Z[7];
	Z[105] = Y[56]*Z[103]+Z[4]*(Z[68]-Z[5]*YP[56])+YP[24]+Z[104];
	Z[106] = Z[13]*Z[97]+Z[63]*Z[98];
	Z[107] = Z[13]*Z[98]-Z[63]*Z[97];
	Z[108] = 1.4*Z[27];
	Z[109] = Z[108]*Z[10];
	Z[110] = -(Z[56]*(Z[99]*Z[106]-Z[100]*Z[107])+Z[109]);
	Z[61] = Z[15]*Z[30]+Z[27]*Z[61];
	Z[84] = Z[4]*YP[18]-Z[84];
	Z[34] = Z[34]*Y[24]-YP[14];
	Z[111] = Z[84]*Z[9];
	Z[112] = Z[8]*Z[34];
	Z[113] = Z[61]*Y[56]+Z[111]+Z[112]-Z[10]*YP[56];
	Z[114] = Z[12]*Z[97]-Z[19]*Z[98];
	Z[97] = Z[12]*Z[98]+Z[19]*Z[97];
	Z[98] = Z[108]*Z[15];
	Z[108] = -(Z[56]*(Z[99]*Z[114]-Z[97]*Z[100])+Z[98]);
	Z[115] = Z[10]*Z[30]+Z[27]*Z[36];
	Z[84] = Z[84]*Z[8];
	Z[34] = Z[9]*Z[34];
	Z[116] = Z[115]*Y[56]+Z[15]*YP[56]+Z[84]-Z[34];
	Z[117] = Z[10]*Y[56]+Z[33]-Z[35];
	Z[118] = Z[56]*(Z[97]*Z[100]-Z[99]*Z[114])-Z[98];
	Z[119] = Y[24]+Z[29]-Z[27]*Y[56];
	Z[120] = 1.4*Z[10]*Z[15];
	Z[121] = Z[56]*(Z[97]*Z[107]+Z[106]*Z[114])+Z[120];
	Z[57] = 1.4*Z[57];
	Z[122] = Z[56]*(Z[97]*Z[97]+Z[114]*Z[114])+Z[57];
	Z[123] = Z[15]*Y[56]+Z[59]+Z[60];
	Z[124] = Z[117]*Z[121]+Z[118]*Z[119]+Z[122]*Z[123];
	Z[125] = -(Z[56]*(Z[99]*Z[106]-Z[100]*Z[107])+Z[109]);
	Z[126] = 1.4*Z[10]*Z[10];
	Z[127] = Z[56]*(Z[106]*Z[106]+Z[107]*Z[107])+Z[126];
	Z[128] = Z[56]*(Z[97]*Z[107]+Z[106]*Z[114])+Z[120];
	Z[129] = Z[117]*Z[127]+Z[119]*Z[125]+Z[123]*Z[128];
	Z[130] = Z[80]*Z[83]+Z[110]*Z[113]+Z[123]*Z[129]-Z[79]*Z[95]-Z[102]*Z[105]-Z[108]*Z[116]-Z[117]*Z[124];
	Z[93] = Z[65]*Z[93]-Z[6]*Z[11]*Z[64]*Z[78];
	Z[102] = Z[102]*Z[119]+Z[108]*Z[123]+Z[110]*Z[117];
	Z[108] = Z[79]*Z[93]+Z[113]*Z[127]+Z[119]*Z[124]-Z[81]*Z[83]-Z[102]*Z[123]-Z[105]*Z[125]-Z[116]*Z[128];
	Z[93] = Z[81]*Z[95]+Z[102]*Z[117]+Z[113]*Z[121]-Z[80]*Z[93]-Z[105]*Z[118]-Z[116]*Z[122]-Z[119]*Z[129];
	Y[210] = Z[108]*Z[10]+Z[15]*Z[93]-Z[27]*Z[130];
	Z[95] = Z[395];
	Z[102] = 0.8389;
	Z[23] = (Y[21]+Z[23]+Z[67]-Z[19]*Y[49]-Z[15]*Z[102])*Z[69];
	Z[3] = Z[4]*(Z[8]*(Z[28]-Y[50])+Z[9]*Y[49]*Z[30])+Z[30]*(Z[72]-Z[10]*Z[102]-Z[32])+Z[36]*(Y[49]*Z[7]-Z[4]*(Z[5]*Z[102]+Z[3])-Z[38])+Z[39]+Z[40];
	Z[8] = -96060.*Z[95];
	Z[9] = Z[23]*Z[15];
	Z[28] = Z[9]*Z[65];
	Z[9] = -Z[9]*Z[11]*Z[6]*Z[64];
	Z[30] = -Z[23]*Z[62];
	Z[32] = -500.*Z[3]+107920.-304000.*Z[23];
	if( Z[32]>1. )
		Z[36] = Z[32];
	else
		Z[36] = 1.;
	Z[38] = 60240.*Y[3];
	Z[39] = Z[6]*Z[11]*Z[38]*Z[64]+Z[8]*Z[65];
	Z[40] = Z[383];
	Z[62] = Z[387];
	Z[67] = Z[62]*Z[7]-Z[26]*Z[40];
	Z[7] = Z[7]*Z[40]+Z[26]*Z[62];
	Z[26] = Z[56]*(Z[7]*Z[7]+Z[67]*Z[67])+Z[101];
	Z[4] = Y[58]*Z[103]+Z[4]*(Z[68]-Z[5]*YP[58])+YP[24]+Z[104];
	Z[5] = Z[13]*Z[40]+Z[63]*Z[62];
	Z[13] = Z[13]*Z[62]-Z[40]*Z[63];
	Z[63] = -(Z[56]*(Z[5]*Z[67]-Z[7]*Z[13])+Z[109]);
	Z[61] = Z[10]*YP[58]-Z[61]*Y[58]-Z[111]-Z[112];
	Z[68] = Z[12]*Z[40]-Z[19]*Z[62];
	Z[12] = Z[12]*Z[62]+Z[19]*Z[40];
	Z[19] = -(Z[56]*(Z[67]*Z[68]-Z[7]*Z[12])+Z[98]);
	Z[34] = Z[115]*Y[58]+Z[15]*YP[58]+Z[84]-Z[34];
	Z[33] = Z[10]*Y[58]+Z[33]-Z[35];
	Z[35] = -(Z[56]*(Z[67]*Z[68]-Z[7]*Z[12])+Z[98]);
	Z[29] = Y[24]+Z[29]-Z[27]*Y[58];
	Z[40] = Z[56]*(Z[5]*Z[68]+Z[12]*Z[13])+Z[120];
	Z[57] = Z[56]*(Z[12]*Z[12]+Z[68]*Z[68])+Z[57];
	Z[59] = Z[15]*Y[58]+Z[59]+Z[60];
	Z[60] = Z[29]*Z[35]+Z[33]*Z[40]+Z[57]*Z[59];
	Z[7] = -(Z[56]*(Z[5]*Z[67]-Z[7]*Z[13])+Z[109]);
	Z[62] = Z[56]*(Z[5]*Z[5]+Z[13]*Z[13])+Z[126];
	Z[12] = Z[56]*(Z[5]*Z[68]+Z[12]*Z[13])+Z[120];
	Z[13] = Z[7]*Z[29]+Z[12]*Z[59]+Z[33]*Z[62];
	Z[56] = Z[4]*Z[26]+Z[19]*Z[34]+Z[30]*Z[39]+Z[33]*Z[60]+Z[61]*Z[63]-Z[13]*Z[59]-Z[28]*Z[36];
	Z[38] = Z[38]*Z[65]-Z[6]*Z[8]*Z[11]*Z[64];
	Z[19] = Z[19]*Z[59]+Z[26]*Z[29]+Z[33]*Z[63];
	Z[7] = Z[29]*Z[60]+Z[30]*Z[38]-Z[4]*Z[7]-Z[9]*Z[36]-Z[12]*Z[34]-Z[19]*Z[59]-Z[61]*Z[62];
	Z[4] = Z[9]*Z[39]+Z[19]*Z[33]-Z[4]*Z[35]-Z[13]*Z[29]-Z[28]*Z[38]-Z[34]*Z[57]-Z[40]*Z[61];
	Y[211] = Z[15]*Z[4]+Z[7]*Z[10]+Z[27]*Z[56];
	Y[178] = Z[47]*(Z[1]*Z[49]-Z[2])+Z[53]*(Z[49]*Z[74]+Z[75])-Z[89]*(Z[49]*Z[52]-Z[51]);
	Y[179] = Z[47]*(Z[1]*Z[50]+Z[90])+Z[53]*(Z[50]*Z[74]-Z[77])-Z[89]*(Z[50]*Z[52]+Z[54]);
	Y[180] = Z[55]*(Z[74]*Z[88]+Z[71])+Z[86]*(Z[52]*Z[88]-Z[92])-Z[17]*(Z[1]*Z[88]-Z[85]);
	Y[181] = Z[55]*(Z[74]*Z[91]-Z[96])+Z[86]*(Z[52]*Z[91]+Z[94])-Z[17]*(Z[1]*Z[91]+Z[87]);
	Y[182] = Z[93]*Z[114]+Z[106]*Z[108]-Z[99]*Z[130];
	Y[183] = Z[93]*Z[97]+Z[100]*Z[130]+Z[107]*Z[108];
	Y[184] = Z[4]*Z[68]+Z[5]*Z[7]+Z[56]*Z[67];
	if( Y[348]==1. ) {
		Z[0] = Y[397]+1.;
		Z[0] = 1.0/Z[0];
		Y[104] = (1.-Y[394])*Y[68]*Y[397]*(Y[7]*Y[390]-Y[6])*Z[0];
	}
	else if( Y[348]==0. ) {
		Z[0] = Y[397]+1.;
		Z[0] = 1.0/Z[0];
		Y[104] = -((Y[394]-1.)*Y[68]*Y[397]*(Y[6]-Y[7]*Y[390])*Z[0])/Y[394];
	}
	else
		Y[104] = 0.;
	if( Y[346]==1. ) {
		Z[0] = Y[397]+1.;
		Z[0] = 1.0/Z[0];
		Y[105] = -(Y[395]-1.)*Y[69]*(Y[6]-Y[7]*Y[390])*Z[0];
	}
	else if( Y[346]==0. ) {
		Z[0] = Y[397]+1.;
		Z[0] = 1.0/Z[0];
		Y[105] = ((1.-Y[395])*Y[69]*(Y[7]*Y[390]-Y[6])*Z[0])/Y[395];
	}
	else
		Y[105] = 0.;
	Z[0] = Z[390];
	Z[1] = Z[0];
	Z[2] = Z[382];
	Z[3] = Z[2];
	Z[4] = Z[395];
	Z[5] = Z[389];
	Z[6] = Z[386];
	Z[7] = Z[379];
	Z[8] = Z[391];
	Z[9] = Z[2]*Z[6];
	Z[10] = Z[7]*Z[8];
	Z[11] = Z[5]*Z[9]+Z[10];
	Z[12] = Z[11]*Z[11];
	Z[13] = 1.-Z[12];
	Z[14] = (1.0/(sqrt(Z[13])));
	Z[15] = Z[2]*Z[8];
	Z[16] = Z[6]*Z[7];
	Z[17] = Z[16]-Z[5]*Z[15];
	Z[18] = Z[17]/sqrt(Z[13]);
	Z[15] = Z[15]-Z[5]*Z[16];
	Z[16] = Z[6]*Z[0];
	Z[19] = 0.8389;
	Z[20] = -1.4755;
	Z[13] = fabs(Z[13])+1e-20;
	Z[21] = (1.0/(sqrt(Z[13])));
	Z[22] = (Z[15]*Z[20]+Y[21]-Z[16]*Y[49]-Z[19]*Z[11]+0.25*Z[16])*Z[21];
	Z[9] = Z[5]*Z[10]+Z[9];
	Z[10] = Z[7]*Z[0];
	Z[23] = Z[0]*Z[2];
	Z[24] = Y[18]*Z[5];
	Z[25] = Z[24]+Y[24];
	Z[26] = Y[14]*Z[6];
	Z[27] = Y[18]*Z[0];
	Z[28] = Z[27]*Z[8];
	Z[29] = Z[26]-Z[28];
	Z[7] = Z[0]*(Z[6]*(Y[16]*Z[5]+Z[0]*(Z[6]*Y[22]-Z[8]*Y[20])-Y[50])+Y[49]*Z[8]*Z[25])+Z[11]*(Z[17]*Y[20]+Z[11]*Y[22]-Z[23]*Y[16])+Z[15]*(Z[10]*Y[16]+Z[9]*Y[20]+Z[15]*Y[22])+Z[25]*(Z[20]*Z[9]-Z[17]*Z[19]-0.25*Z[0]*Z[8])+(Z[5]*Y[49]-Z[0]*(Z[2]*Z[19]+Z[7]*Z[20])-0.25*Z[5])*Z[29];
	Z[19] = -96060.*Z[4];
	Z[13] = -Z[22]*Z[13]*Z[21];
	Z[20] = Z[22]*Z[11];
	Z[21] = -Z[20]*Z[3]*Z[1]*Z[14];
	Z[20] = Z[20]*Z[18];
	Z[30] = -500.*Z[7]+107920.-304000.*Z[22];
	if( Z[30]>1. )
		Z[31] = Z[30];
	else
		Z[31] = 1.;
	Z[32] = Z[387];
	Z[33] = Z[383];
	Z[34] = Z[5]*Z[33]+Z[10]*Z[32];
	Z[35] = 60240.*Y[3];
	Z[36] = Z[1]*Z[3]*Z[14]*Z[35]+Z[18]*Z[19];
	Z[10] = Z[5]*Z[32]-Z[10]*Z[33];
	Z[37] = 0.78;
	Z[38] = Z[37]*(Z[10]*Z[10]+Z[34]*Z[34])+1.4*Z[2]*Z[2]*Z[0]*Z[0];
	Z[39] = Y[14]*Z[8];
	Z[40] = Z[16]*Y[18];
	Z[41] = Z[39]+Z[40];
	Z[2] = (Z[11]*Z[29]-Z[17]*Z[41])*Y[58]+YP[18]*Z[5]+Z[0]*(Y[14]*Y[18]-Z[2]*YP[58])+YP[24];
	Z[5] = Z[0]*Z[8]*Z[32]+Z[9]*Z[33];
	Z[9] = Z[9]*Z[32]-Z[0]*Z[8]*Z[33];
	Z[42] = 1.4*Z[23];
	Z[43] = Z[42]*Z[17];
	Z[44] = -(Z[37]*(Z[5]*Z[10]-Z[9]*Z[34])+Z[43]);
	Z[0] = Y[14]*(Z[24]-Y[24])-YP[18]*Z[0];
	Z[27] = YP[14]-Z[27]*Y[24];
	Z[41] = (-(Z[11]*Z[25]+Z[23]*Z[41]))*Y[58]+YP[58]*Z[17]+Z[0]*Z[8]+Z[27]*Z[6];
	Z[45] = Z[15]*Z[33]-Z[16]*Z[32];
	Z[15] = Z[15]*Z[32]+Z[16]*Z[33];
	Z[16] = Z[42]*Z[11];
	Z[32] = -(Z[37]*(Z[10]*Z[45]-Z[15]*Z[34])+Z[16]);
	Z[0] = (Z[17]*Z[25]+Z[23]*Z[29])*Y[58]+YP[58]*Z[11]+Z[27]*Z[8]-Z[6]*Z[0];
	Z[6] = Z[17]*Y[58]+Z[26]-Z[28];
	Z[8] = -(Z[37]*(Z[10]*Z[45]-Z[15]*Z[34])+Z[16]);
	Z[16] = Y[24]+Z[24]-Z[23]*Y[58];
	Z[23] = 1.4*Z[17]*Z[11];
	Z[24] = Z[37]*(Z[5]*Z[45]+Z[9]*Z[15])+Z[23];
	Z[12] = Z[37]*(Z[15]*Z[15]+Z[45]*Z[45])+1.4*Z[12];
	Z[11] = Z[11]*Y[58]+Z[39]+Z[40];
	Z[25] = Z[6]*Z[24]+Z[8]*Z[16]+Z[12]*Z[11];
	Z[10] = Z[37]*(Z[9]*Z[34]-Z[5]*Z[10])-Z[43];
	Z[17] = Z[37]*(Z[5]*Z[5]+Z[9]*Z[9])+1.4*Z[17]*Z[17];
	Z[5] = Z[37]*(Z[5]*Z[45]+Z[9]*Z[15])+Z[23];
	Z[23] = Z[5]*Z[11]+Z[6]*Z[17]+Z[10]*Z[16];
	Z[26] = Z[18]*Z[35]-Z[1]*Z[3]*Z[14]*Z[19];
	Z[27] = Z[6]*Z[44]+Z[11]*Z[32]+Z[16]*Z[38];
	Y[185] = Z[9]*(Z[13]*Z[26]+Z[25]*Z[16]-Z[5]*Z[0]-Z[2]*Z[10]-Z[11]*Z[27]-Z[17]*Z[41]-Z[21]*Z[31])+Z[15]*(Z[27]*Z[6]+Z[21]*Z[36]-Z[0]*Z[12]-Z[2]*Z[8]-Z[16]*Z[23]-Z[20]*Z[26]-Z[24]*Z[41])-Z[34]*(Z[0]*Z[32]+Z[38]*Z[2]+Z[6]*Z[25]+Z[13]*Z[36]+Z[41]*Z[44]-Z[11]*Z[23]-Z[31]*Z[20]);
	if( Y[343]==1. )
		Y[111] = 100.;
	else
		Y[111] = Y[265];
	if( Y[347]==1. )
		Y[99] = 1.*(Y[392]-1.)*Y[64]*Y[389]*Y[7];
	else
		Y[99] = ((1.-Y[392])*Y[64]*Y[389]*Y[7])/Y[392];
	if( Y[345]==1. )
		Y[102] = (1.-Y[393])*Y[67]*Y[7];
	else
		Y[102] = (1.-1.0/Y[393])*Y[67]*Y[7];
	if( Y[344]==1. )
		Y[168] = 0.;
	else
		Y[168] = Y[111];
	Y[212] = YP[14];
	Y[213] = YP[16];
	Y[214] = YP[18];
	Y[215] = YP[20];
	Y[216] = YP[22];
	Y[217] = YP[24];
	Y[218] = YP[52];
	Y[219] = YP[54];
	Y[220] = YP[56];
	Y[221] = YP[58];
}

static void otp(double T, double *Y, double *YP)
{
	double Z[57];

	Z[0] = sin(Y[13]);
	Z[1] = sin(Y[17]);
	Z[2] = cos(Y[13]);
	Z[3] = Y[18]*Z[0];
	Z[4] = Z[1]*Z[2];
	Z[5] = cos(Y[23]);
	Z[6] = sin(Y[23]);
	Z[7] = cos(Y[17]);
	Z[8] = Z[1]*Z[6];
	Z[9] = Z[5]*Z[7];
	Z[10] = Z[9]-Z[0]*Z[8];
	Z[11] = Z[5]*Y[14];
	Z[12] = Y[18]*Z[2];
	Z[13] = Z[12]*Z[6];
	Z[14] = Z[10]*(Z[10]*Y[58]+Z[11]-Z[13])-Z[4]*(Y[24]+Z[3]-Z[4]*Y[58]);
	Z[15] = Z[1]*Z[5];
	Z[16] = Z[6]*Z[7];
	Z[17] = Z[15]*Z[0]+Z[16];
	Z[18] = 1.-Z[17]*Z[17];
	Z[19] = Z[10]*(Z[10]*Y[56]+Z[11]-Z[13])-Z[4]*(Y[24]+Z[3]-Z[4]*Y[56]);
	Z[18] = 1.0/Z[18];
	Y[222] = 0.5*Z[18]*(Z[14]+Z[19]);
	Z[20] = Z[0]*Y[24]+Y[18];
	Z[21] = Z[3]+Y[24];
	Z[22] = Y[14]*Z[6];
	Z[23] = Z[0]*Z[16]+Z[15];
	Z[24] = Y[14]*Z[2];
	Z[9] = Z[0]*Z[9]-Z[8];
	Z[25] = Y[14]*Y[16];
	Z[26] = Z[25]*Z[0];
	Z[16] = (Z[7]*(-(Z[2]*Z[22]+Z[5]*Z[20]))+Z[8]*Z[21])*Y[20]+Z[9]*Y[216]+Z[7]*(Z[26]-Z[2]*Y[213])+Y[18]*Z[4]*Y[16]-(Z[5]*(Z[1]*Z[21]-Z[7]*Z[24])+Z[16]*Z[20])*Y[22]-Z[23]*Y[215];
	Z[27] = Z[4]*Y[14]+Z[7]*Z[21];
	Z[8] = (Z[6]*Z[27]+Z[15]*Z[20])*Y[20]+(Z[8]*Z[20]-Z[5]*Z[27])*Y[22]+Z[2]*(Z[7]*Y[16]*Y[18]+Z[1]*Y[213])-Y[215]*Z[10]-Y[216]*Z[17]-Z[1]*Z[26];
	Z[15] = Z[6]*Y[20]-Z[5]*Y[22];
	Z[20] = Z[0]*(Y[14]*Z[15]+Y[213])+Z[2]*(Z[5]*(Y[216]-Y[20]*Y[24])+Z[6]*(-(Y[22]*Y[24]+Y[215]))+Z[25]);
	Z[25] = Z[2]*Z[7];
	Z[26] = Z[25]*Y[16]+Z[23]*Y[20]-Z[9]*Y[22];
	Z[27] = Z[4]*Y[16]-Z[10]*Y[20]-Z[17]*Y[22];
	Z[15] = Z[2]*Z[15]-Z[0]*Y[16];
	Z[28] = Y[14]*Z[15]+(Z[1]*Z[26]-Z[7]*Z[27])*Y[18];
	Z[29] = Z[1]*Z[27]+Z[7]*Z[26];
	Z[30] = (Z[29]*Y[14]-Z[20])*Z[0];
	Z[31] = (Z[7]*Z[16]+Z[28]-Z[1]*Z[8])*Z[2];
	Z[32] = Z[30]+Z[31];
	Z[33] = Z[27]*Y[24]+Z[24]*Z[26];
	Z[24] = Z[1]*(Z[26]*Y[24]-Z[24]*Z[27]);
	Z[34] = Y[18]*Z[29]+(Z[0]*Z[29]+Z[2]*Z[15])*Y[24];
	Z[20] = Z[2]*Z[20];
	Z[35] = (Z[0]*Z[28]+Z[20]+Z[24]-Z[7]*Z[33])*Z[6];
	Z[36] = Z[16]*Z[23];
	Z[37] = Z[10]*Z[8];
	Z[38] = Z[34]*Z[5];
	Z[39] = Z[36]+Z[37]+Z[35]-Z[38];
	Z[16] = Z[9]*Z[16];
	Z[20] = (Z[0]*Z[28]+Z[20]+Z[24]-Z[7]*Z[33])*Z[5];
	Z[24] = Z[34]*Z[6];
	Z[8] = Z[17]*Z[8];
	Z[28] = Z[16]+Z[24]+Z[20]-Z[8];
	Y[223] = -(Z[9]*Z[28]+Z[23]*Z[39]+Z[25]*Z[32]);
	Y[224] = Z[4]*Z[32]+Z[17]*Z[28]-Z[10]*Z[39];
	Y[225] = Z[2]*(Z[5]*Z[28]+Z[6]*Z[39])-Z[32]*Z[0];
	Y[226] = Z[21];
	Z[13] = Z[11]-Z[13];
	Y[227] = Z[13];
	Z[22] = Z[5]*Z[12]+Z[22];
	Y[228] = Z[22];
	Y[229] = -Z[27];
	Y[230] = -Z[15];
	Z[28] = Y[267];
	Z[32] = sin(Z[28]);
	Z[28] = cos(Z[28]);
	Z[33] = Z[2]*(Z[1]*Z[28]+Z[7]*Z[32]);
	Z[34] = Y[263]+Y[18];
	Z[39] = Z[34]*Z[0];
	Z[40] = Z[23]*Z[32]-Z[10]*Z[28];
	Z[41] = Z[2]*Z[6];
	Z[34] = Z[41]*Z[34];
	Z[42] = Z[9]*Z[32]+Z[17]*Z[28];
	Z[42] = 1.-Z[42]*Z[42];
	Z[42] = 1.0/Z[42];
	Y[231] = ((Z[40]*Y[52]+Z[34]-Z[11])*Z[40]-Z[33]*(Y[24]+Z[39]-Z[33]*Y[52]))*Z[42];
	Z[43] = Z[2]*(Z[7]*Z[28]-Z[1]*Z[32]);
	Z[44] = 0.7396;
	Z[45] = 1.3745*Z[7];
	Z[46] = 0.25*Z[0];
	Z[47] = Z[10]*Z[32]+Z[23]*Z[28];
	Z[48] = 0.25*Z[41];
	Z[49] = 1.3745*Z[23];
	Z[28] = Z[9]*Z[28]-Z[17]*Z[32];
	Z[32] = Z[5]*Z[2];
	Z[50] = 0.25*Z[32];
	Z[51] = 1.3745*Z[9];
	Y[232] = Z[43]*(Z[2]*(Z[45]-Z[1]*Z[44])+Y[15]+Z[46]-Y[43]*Z[0])+Z[47]*(Z[41]*Y[43]+Z[10]*Z[44]+Y[19]+Z[49]-Z[48])-Z[28]*(Z[17]*Z[44]+Y[21]+Z[50]-Z[32]*Y[43]-Z[51]);
	Y[233] = (Z[33]*(Z[33]*Y[54]-Y[24]-Z[39])+Z[40]*(Z[40]*Y[54]+Z[34]-Z[11]))*Z[42];
	Z[11] = 0.8424;
	Y[234] = Z[43]*(Z[2]*(Z[1]*Z[11]+Z[45])+Y[15]+Z[46]-Y[45]*Z[0])+Z[47]*(Z[41]*Y[45]+Y[19]+Z[49]-Z[10]*Z[11]-Z[48])-Z[28]*(Y[21]+Z[50]-Z[32]*Y[45]-Z[11]*Z[17]-Z[51]);
	Z[3] = Y[214]*Z[2]-Y[14]*(Z[3]-Y[24]);
	Z[11] = Z[12]*Y[24]-Y[212];
	Z[28] = Z[3]*Z[6]+Z[5]*Z[11];
	Z[33] = 0.194502*Z[32];
	Z[34] = 1.4755*Z[9];
	Z[39] = Z[34]-Z[33];
	Z[3] = Z[6]*Z[11]-Z[3]*Z[5];
	Z[11] = 0.194502*Z[41];
	Z[40] = 1.4755*Z[23];
	Z[42] = Z[11]-Z[40];
	Z[43] = 1.4755*Z[25];
	Z[44] = 0.194502*Z[0];
	Z[45] = -(Z[44]+Z[43]);
	Z[47] = Z[21]*Z[42];
	Z[49] = Z[13]*Z[45];
	Z[51] = Z[47]-Z[49];
	Z[52] = Z[21]*Z[39];
	Z[53] = Z[22]*Z[45];
	Z[54] = Z[52]-Z[53];
	Z[30] = Z[28]*Z[39]+Z[30]+Z[31]-Z[3]*Z[42]-Z[13]*Z[51]-Z[22]*Z[54];
	Z[12] = Z[12]*Y[14]+Z[0]*Y[214]+Y[217];
	Z[31] = Z[13]*Z[39];
	Z[55] = Z[22]*Z[42];
	Z[56] = Z[31]-Z[55];
	Z[3] = Z[3]*Z[45]+Z[12]*Z[39]+Z[21]*Z[51]+Z[35]+Z[36]+Z[37]-Z[22]*Z[56]-Z[38];
	Z[8] = Z[12]*Z[42]+Z[28]*Z[45]+Z[16]+Z[20]+Z[24]-Z[13]*Z[56]-Z[21]*Z[54]-Z[8];
	Y[235] = -(Z[3]*Z[23]+Z[8]*Z[9]+Z[25]*Z[30]);
	Y[236] = Z[4]*Z[30]+Z[17]*Z[8]-Z[3]*Z[10];
	Y[237] = Z[2]*(Z[3]*Z[6]+Z[5]*Z[8])-Z[0]*Z[30];
	Y[238] = Z[21];
	Y[239] = Z[13];
	Y[240] = Z[22];
	Y[241] = Y[15]-Z[44]-Z[43];
	Y[242] = Z[11]+Y[19]-Z[40];
	Y[243] = Z[34]+Y[21]-Z[33];
	Z[3] = Z[2]*Z[29];
	Z[8] = Z[15]*Z[0];
	Z[11] = Z[3]+Z[31]-Z[8]-Z[55];
	Z[12] = Z[41]*Z[15];
	Z[13] = Z[23]*Z[26];
	Z[16] = Z[10]*Z[27];
	Z[20] = Z[13]+Z[53]+Z[12]-Z[16]-Z[52];
	Z[15] = Z[15]*Z[32];
	Z[21] = Z[9]*Z[26];
	Z[22] = Z[17]*Z[27];
	Z[24] = Z[21]+Z[22]+Z[49]+Z[15]-Z[47];
	Y[244] = Z[9]*Z[24]+Z[11]*Z[25]+Z[20]*Z[23];
	Y[245] = Z[10]*Z[20]-Z[4]*Z[11]-Z[17]*Z[24];
	Y[246] = Z[11]*Z[0]-Z[2]*(Z[5]*Z[24]+Z[6]*Z[20]);
	Z[4] = 0.7361;
	Z[5] = 1.4755*Z[7];
	Y[247] = Y[15]+Z[46]-Z[0]*Y[47]-Z[2]*(Z[1]*Z[4]+Z[5]);
	Y[248] = Z[41]*Y[47]+Z[4]*Z[10]+Y[19]-Z[40]-Z[48];
	Y[249] = Z[4]*Z[17]+Y[21]+Z[34]+Z[50]-Z[32]*Y[47];
	Y[250] = Z[18]*Z[19];
	Z[4] = 0.8389;
	Y[251] = Z[2]*(Z[1]*Z[4]-Z[5])+Y[15]+Z[46]-Z[0]*Y[49];
	Y[252] = Z[41]*Y[49]+Y[19]-Z[4]*Z[10]-Z[40]-Z[48];
	Y[253] = Y[21]+Z[34]+Z[50]-Z[32]*Y[49]-Z[4]*Z[17];
	Y[254] = Z[14]*Z[18];
	Y[255] = Z[3]-Z[8];
	Y[256] = Z[13]+Z[12]-Z[16];
	Y[257] = -(Z[21]+Z[22]+Z[15]);
	Y[258] = Z[11];
	Y[259] = Z[20];
	Y[260] = -Z[24];
	Z[0] = Y[397]+1.;
	Z[0] = 1.0/Z[0];
	Z[1] = 9.54929658551372013;
	Y[261] = Z[1]*(Y[6]+(Y[7]*Y[390])/Y[397])*Z[0]*Y[397];
	Y[262] = Z[1]*Y[389]*Y[7];
}

static void Rp(double T, double *Y, double *R)
{
	double Z[1];

	R[0] = Y[5]-Y[59];
	Z[0] = -0.5;
	R[1] = Z[0]*(Y[52]+Y[54])+Y[59]+Y[7];
}

static void Jp(double T, double *Y, double *J)
{
	long ti1, ti2;

	for(ti1=0;ti1<=1;ti1++)
		for(ti2=0;ti2<=63;ti2++)
			J[ti1*64+ti2] = 0.;
	J[5] = 1.;
	J[59] = -1.;
	J[71] = 1.;
	J[116] = -0.5;
	J[118] = -0.5;
	J[123] = 1.;
}

static void eev(double T, double *Y, double *Ypre, double *EA)
{
	double Z[5];

	EA[0] = -Y[4];
	EA[1] = Y[266]-0.6;
	EA[2] = -Y[266]+0.1385;
	EA[3] = -Y[11];
	EA[4] = -Y[12];
	EA[5] = Y[83]-0.14;
	EA[6] = Y[91]-Y[92];
	EA[7] = Y[93]-Y[94];
	EA[8] = -Y[87]+0.5;
	EA[9] = Y[409]-Y[292];
	EA[10] = -Y[88]+0.5;
	EA[11] = Y[292]-Y[410];
	EA[12] = -Y[89]+0.5;
	EA[13] = -Y[90]+0.5;
	EA[14] = -Y[86];
	EA[15] = -1.+0.6666666666666666667*Y[294];
	EA[16] = Y[84]-Y[85];
	EA[17] = -1.+0.6666666666666666667*Y[82];
	EA[18] = Y[70]-0.5;
	EA[19] = -Y[75]+0.5;
	EA[20] = -Y[76]+0.5;
	EA[21] = Y[400]-Y[81];
	EA[22] = Y[412]-Y[291];
	EA[23] = -Y[80]+0.5;
	EA[24] = Y[79]+1.-Y[405];
	EA[25] = Y[400]-Y[78];
	EA[26] = -Y[77]+0.5;
	EA[27] = Y[71]-Y[72];
	EA[28] = -Y[74];
	EA[29] = -Y[73];
	EA[30] = Y[66]+1.;
	EA[31] = -1.+0.01*Y[265];
	EA[32] = -Y[265];
	EA[33] = Y[67]*Y[7];
	Z[0] = Y[397]+1.;
	Z[0] = 1.0/Z[0];
	Z[0] = (Y[6]-Y[7]*Y[390])*Z[0];
	EA[34] = Z[0]*Y[69];
	Z[1] = Y[389]*Y[7];
	EA[35] = -Z[1]*Y[64];
	EA[36] = -Z[0]*Y[68]*Y[397];
	EA[37] = Z[0];
	EA[38] = -Z[1];
	EA[39] = -Z[0]*Y[397];
	EA[40] = Y[52];
	EA[41] = Y[54];
	EA[42] = Y[56];
	EA[43] = Y[58];
	EA[44] = Y[5];
	EA[45] = Y[7];
	EA[46] = Y[64];
	EA[47] = Y[67];
	EA[48] = Y[68];
	EA[49] = Y[69];
	Z[0] = 1e-10*Y[52];
	EA[50] = Z[0]-1.;
	Z[1] = 1e-10*Y[54];
	EA[51] = Z[1]-1.;
	Z[2] = 1e-10*Y[56];
	EA[52] = Z[2]-1.;
	Z[3] = 1e-10*Y[58];
	EA[53] = Z[3]-1.;
	Z[4] = 1e-10*Y[5];
	EA[54] = Z[4]-1.;
	EA[55] = -(1.+Z[0]);
	EA[56] = -(1.+Z[1]);
	EA[57] = -(1.+Z[2]);
	EA[58] = -(1.+Z[3]);
	EA[59] = -(Y[11]+Y[95]);
	EA[60] = -(Y[11]+Y[96]);
	EA[61] = -(Y[12]+Y[97]);
	EA[62] = -(Y[12]+Y[98]);
	EA[63] = Y[95]-Y[11];
	EA[64] = Y[96]-Y[11];
	EA[65] = Y[97]-Y[12];
	EA[66] = Y[98]-Y[12];
	EA[67] = -(Y[4]+Y[65]);
	EA[68] = -(1.+Z[4]);
	EA[69] = Y[65]-Y[4];
	EA[70] = T-Y[384];
	EA[71] = T-Y[385];
}

static long eex(long N, double T, double *Y, double *Ypre)
{
	if( N<17 ) {
		if( N==1 )
			Y[312] = 1.-Y[312];
		else if( N==2 )
			Y[313] = 1.-Y[313];
		else if( N==3 )
			Y[314] = 1.-Y[314];
		else if( N==4 )
			Y[315] = 1.-Y[315];
		else if( N==5 )
			Y[316] = 1.-Y[316];
		else if( N==6 )
			Y[317] = 1.-Y[317];
		else if( N==7 )
			Y[318] = 1.-Y[318];
		else if( N==8 )
			Y[319] = 1.-Y[319];
		else if( N==9 )
			Y[320] = 1.-Y[320];
		else if( N==10 )
			Y[321] = 1.-Y[321];
		else if( N==11 )
			Y[322] = 1.-Y[322];
		else if( N==12 )
			Y[323] = 1.-Y[323];
		else if( N==13 )
			Y[324] = 1.-Y[324];
		else if( N==14 )
			Y[325] = 1.-Y[325];
		else if( N==15 )
			Y[326] = 1.-Y[326];
		else if( N==16 )
			Y[327] = 1.-Y[327];
	}
	else if( N<33 ) {
		if( N==17 )
			Y[328] = 1.-Y[328];
		else if( N==18 )
			Y[329] = 1.-Y[329];
		else if( N==19 )
			Y[330] = 1.-Y[330];
		else if( N==20 )
			Y[331] = 1.-Y[331];
		else if( N==21 )
			Y[332] = 1.-Y[332];
		else if( N==22 )
			Y[333] = 1.-Y[333];
		else if( N==23 )
			Y[334] = 1.-Y[334];
		else if( N==24 )
			Y[335] = 1.-Y[335];
		else if( N==25 )
			Y[336] = 1.-Y[336];
		else if( N==26 )
			Y[337] = 1.-Y[337];
		else if( N==27 )
			Y[338] = 1.-Y[338];
		else if( N==28 )
			Y[339] = 1.-Y[339];
		else if( N==29 )
			Y[340] = 1.-Y[340];
		else if( N==30 )
			Y[341] = 1.-Y[341];
		else if( N==31 )
			Y[342] = 1.-Y[342];
		else if( N==32 )
			Y[343] = 1.-Y[343];
	}
	else if( N<49 ) {
		if( N==33 )
			Y[344] = 1.-Y[344];
		else if( N==34 )
			Y[345] = 1.-Y[345];
		else if( N==35 )
			Y[346] = 1.-Y[346];
		else if( N==36 )
			Y[347] = 1.-Y[347];
		else if( N==37 )
			Y[348] = 1.-Y[348];
		else if( N==38 )
			Y[349] = 1.-Y[349];
		else if( N==39 )
			Y[350] = 1.-Y[350];
		else if( N==40 )
			Y[351] = 1.-Y[351];
		else if( N==41 )
			Y[352] = 1.-Y[352];
		else if( N==42 )
			Y[353] = 1.-Y[353];
		else if( N==43 )
			Y[354] = 1.-Y[354];
		else if( N==44 )
			Y[355] = 1.-Y[355];
		else if( N==45 )
			Y[356] = 1.-Y[356];
		else if( N==46 )
			Y[357] = 1.-Y[357];
		else if( N==47 )
			Y[358] = 1.-Y[358];
		else if( N==48 )
			Y[359] = 1.-Y[359];
	}
	else if( N<65 ) {
		if( N==49 )
			Y[360] = 1.-Y[360];
		else if( N==50 )
			Y[361] = 1.-Y[361];
		else if( N==51 )
			Y[362] = 1.-Y[362];
		else if( N==52 )
			Y[363] = 1.-Y[363];
		else if( N==53 )
			Y[364] = 1.-Y[364];
		else if( N==54 )
			Y[365] = 1.-Y[365];
		else if( N==55 )
			Y[366] = 1.-Y[366];
		else if( N==56 )
			Y[367] = 1.-Y[367];
		else if( N==57 )
			Y[368] = 1.-Y[368];
		else if( N==58 )
			Y[369] = 1.-Y[369];
		else if( N==59 )
			Y[370] = 1.-Y[370];
		else if( N==60 )
			Y[371] = 1.-Y[371];
		else if( N==61 )
			Y[372] = 1.-Y[372];
		else if( N==62 )
			Y[373] = 1.-Y[373];
		else if( N==63 )
			Y[374] = 1.-Y[374];
		else if( N==64 )
			Y[375] = 1.-Y[375];
	}
	else if( N<73 ) {
		if( N==65 )
			Y[376] = 1.-Y[376];
		else if( N==66 )
			Y[377] = 1.-Y[377];
		else if( N==67 )
			Y[378] = 1.-Y[378];
		else if( N==68 )
			Y[379] = 1.-Y[379];
		else if( N==69 )
			Y[380] = 1.-Y[380];
		else if( N==70 )
			Y[381] = 1.-Y[381];
		else if( N==71 ) {
			Y[382] = 1.;
			Y[384] = Y[384]+0.05;
		}
		else if( N==72 ) {
			Y[383] = 1.;
			Y[385] = Y[385]+Y[408];
		}
	}
	else if( N==73 ) {
		if( Y[310]==1. ) {
			Y[384] = 0.05*( (((long)trunc(floor(20.*T)))<0) ? 0. : floor(20.*T) )+1e-20;
			Y[385] = Y[408]*( (((long)trunc(floor(T/Y[408])))<0) ? 0. : floor(T/Y[408]) )+1e-20;
		}
		if( !(fabs(Y[389])>0.) ) {
			Y[311] = 1.;
			return(1);
		}
		if( !(fabs(Y[390])>0.) ) {
			Y[311] = 2.;
			return(1);
		}
		if( !(1.0/Y[397]>1.) ) {
			Y[311] = 3.;
			return(1);
		}
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) )
			Y[289] = Y[168];
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) )
			Y[290] = 3.6*Y[177];
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) )
			Y[291] = (30.*Y[389]*Y[7])/3.14159265358979324;
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) )
			Y[292] = (30.*(Y[6]+(Y[7]*Y[390])/Y[397])*Y[397])/(3.14159265358979324*(Y[397]+1.));
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) ) {
			if( T<=0.5*Y[408] )
				Y[295] = 1.;
			else
				Y[295] = 0.;
		}
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) ) {
			if( T<=0.5*Y[408] )
				Y[296] = 1.;
			else
				Y[296] = 0.;
		}
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) ) {
			if( T<=0.5*Y[408] )
				Y[297] = 1.;
			else
				Y[297] = 0.;
		}
		if( (Y[383]==1.) && (Y[383]!=Ypre[383]) ) {
			if( T<=0.5*Y[408] )
				Y[298] = 1.;
			else
				Y[298] = 0.;
		}
		if( (Y[382]==1.) && (Y[382]!=Ypre[382]) )
			Y[293] = Ypre[86];
		if( (Y[382]==1.) && (Y[382]!=Ypre[382]) )
			Y[294] = Ypre[82];
		if( (Y[382]==1.) && (Y[382]!=Ypre[382]) ) {
			if( T<=0.025 )
				Y[299] = 1.;
			else
				Y[299] = 0.;
		}
		if( (Y[382]==1.) && (Y[382]!=Ypre[382]) ) {
			if( T<=0.025 )
				Y[300] = 1.;
			else
				Y[300] = 0.;
		}
		if( (Y[320]==1.) && (Y[321]==1.) )
			Y[307] = 1.;
		else
			Y[307] = 0.;
		if( (Y[322]==1.) && (Y[323]==1.) )
			Y[308] = 1.;
		else
			Y[308] = 0.;
		if( (Y[324]==1.) && (Y[325]==1.) )
			Y[309] = 1.;
		else
			Y[309] = 0.;
		if( (Y[331]==1.) || (Y[332]==1.) )
			Y[301] = 1.;
		else
			Y[301] = 0.;
		if( (Y[333]==1.) && (Y[334]==1.) )
			Y[304] = 1.;
		else
			Y[304] = 0.;
		if( (Y[335]==1.) && (Y[336]==1.) )
			Y[306] = 1.;
		else
			Y[306] = 0.;
		if( (Y[337]==1.) && (Y[334]==1.) )
			Y[302] = 1.;
		else
			Y[302] = 0.;
		if( ( ( (Ypre[268]==0.) && ( (Y[371]==1.) || ( (Ypre[273]==1.) && (Y[371]==1.) ) ) ) || ( (Ypre[268]==1.) && (Y[369]==1.) ) ) || ( (Y[310]==1.) && (Y[56]<0.) ) )
			Y[273] = 1.;
		else
			Y[273] = 0.;
		if( ( ( (Ypre[268]==0.) && ( (Y[375]==1.) || ( (Ypre[274]==1.) && (Y[375]==1.) ) ) ) || ( (Ypre[268]==-1.) && (Y[364]==1.) ) ) || ( (Y[310]==1.) && (Y[56]>0.) ) )
			Y[274] = 1.;
		else
			Y[274] = 0.;
		if( ( ( (Ypre[269]==0.) && ( (Y[372]==1.) || ( (Ypre[276]==1.) && (Y[372]==1.) ) ) ) || ( (Ypre[269]==1.) && (Y[370]==1.) ) ) || ( (Y[310]==1.) && (Y[58]<0.) ) )
			Y[276] = 1.;
		else
			Y[276] = 0.;
		if( ( ( (Ypre[269]==0.) && ( (Y[376]==1.) || ( (Ypre[277]==1.) && (Y[376]==1.) ) ) ) || ( (Ypre[269]==-1.) && (Y[365]==1.) ) ) || ( (Y[310]==1.) && (Y[58]>0.) ) )
			Y[277] = 1.;
		else
			Y[277] = 0.;
		if( ( ( (Ypre[270]==0.) && ( (Y[373]==1.) || ( (Ypre[279]==1.) && (Y[373]==1.) ) ) ) || ( (Ypre[270]==1.) && (Y[367]==1.) ) ) || ( (Y[310]==1.) && (Y[52]<0.) ) )
			Y[279] = 1.;
		else
			Y[279] = 0.;
		if( ( ( (Ypre[270]==0.) && ( (Y[377]==1.) || ( (Ypre[280]==1.) && (Y[377]==1.) ) ) ) || ( (Ypre[270]==-1.) && (Y[362]==1.) ) ) || ( (Y[310]==1.) && (Y[52]>0.) ) )
			Y[280] = 1.;
		else
			Y[280] = 0.;
		if( ( ( (Ypre[271]==0.) && ( (Y[374]==1.) || ( (Ypre[282]==1.) && (Y[374]==1.) ) ) ) || ( (Ypre[271]==1.) && (Y[368]==1.) ) ) || ( (Y[310]==1.) && (Y[54]<0.) ) )
			Y[282] = 1.;
		else
			Y[282] = 0.;
		if( ( ( (Ypre[271]==0.) && ( (Y[378]==1.) || ( (Ypre[283]==1.) && (Y[378]==1.) ) ) ) || ( (Ypre[271]==-1.) && (Y[363]==1.) ) ) || ( (Y[310]==1.) && (Y[54]>0.) ) )
			Y[283] = 1.;
		else
			Y[283] = 0.;
		if( ( ( (Ypre[284]==0.) && ( (Y[379]==1.) || ( (Ypre[286]==1.) && (Y[379]==1.) ) ) ) || ( (Ypre[284]==1.) && (Y[380]==1.) ) ) || ( (Y[310]==1.) && (Y[5]<0.) ) )
			Y[286] = 1.;
		else
			Y[286] = 0.;
		if( ( ( (Ypre[284]==0.) && ( (Y[381]==1.) || ( (Ypre[287]==1.) && (Y[381]==1.) ) ) ) || ( (Ypre[284]==-1.) && (Y[366]==1.) ) ) || ( (Y[310]==1.) && (Y[5]>0.) ) )
			Y[287] = 1.;
		else
			Y[287] = 0.;
		if( (Y[317]==1.) && (Y[342]==1.) )
			Y[288] = 1.;
		else
			Y[288] = 0.;
		if( (Y[304]==1.) && (Y[335]==1.) )
			Y[305] = 1.;
		else
			Y[305] = 0.;
		if( (Y[302]==1.) && (Y[338]==1.) )
			Y[303] = 1.;
		else
			Y[303] = 0.;
		if( Y[315]==1. )
			Y[268] = 2.;
		else {
			if( ( ( (Ypre[268]==1.) || (Ypre[268]==2.) ) || (Y[274]==1.) ) && (Y[354]==1.) )
				Y[268] = 1.;
			else {
				if( ( ( (Ypre[268]==-1.) || (Ypre[268]==2.) ) || (Y[273]==1.) ) && (Y[354]==0.) )
					Y[268] = -1.;
				else
					Y[268] = 0.;
			}
		}
		if( Y[315]==1. )
			Y[269] = 2.;
		else {
			if( ( ( (Ypre[269]==1.) || (Ypre[269]==2.) ) || (Y[277]==1.) ) && (Y[355]==1.) )
				Y[269] = 1.;
			else {
				if( ( ( (Ypre[269]==-1.) || (Ypre[269]==2.) ) || (Y[276]==1.) ) && (Y[355]==0.) )
					Y[269] = -1.;
				else
					Y[269] = 0.;
			}
		}
		if( Y[316]==1. )
			Y[270] = 2.;
		else {
			if( ( ( (Ypre[270]==1.) || (Ypre[270]==2.) ) || (Y[280]==1.) ) && (Y[352]==1.) )
				Y[270] = 1.;
			else {
				if( ( ( (Ypre[270]==-1.) || (Ypre[270]==2.) ) || (Y[279]==1.) ) && (Y[352]==0.) )
					Y[270] = -1.;
				else
					Y[270] = 0.;
			}
		}
		if( Y[316]==1. )
			Y[271] = 2.;
		else {
			if( ( ( (Ypre[271]==1.) || (Ypre[271]==2.) ) || (Y[283]==1.) ) && (Y[353]==1.) )
				Y[271] = 1.;
			else {
				if( ( ( (Ypre[271]==-1.) || (Ypre[271]==2.) ) || (Y[282]==1.) ) && (Y[353]==0.) )
					Y[271] = -1.;
				else
					Y[271] = 0.;
			}
		}
		if( Y[312]==1. )
			Y[284] = 2.;
		else {
			if( ( ( (Ypre[284]==1.) || (Ypre[284]==2.) ) || (Y[287]==1.) ) && (Y[356]==1.) )
				Y[284] = 1.;
			else {
				if( ( ( (Ypre[284]==-1.) || (Ypre[284]==2.) ) || (Y[286]==1.) ) && (Y[356]==0.) )
					Y[284] = -1.;
				else
					Y[284] = 0.;
			}
		}
		if( ( !(Y[315]==1.) ) && ( ( !( ( ( ( (Ypre[268]==2.) || (Ypre[268]==1.) ) || (Y[274]==1.) ) || (Ypre[268]==-1.) ) || (Y[273]==1.) ) ) || ( ( ( ( (Y[268]==0.) && ( !(Y[274]==1.) ) ) && ( !(Y[273]==1.) ) ) && ( !(Ypre[274]==1.) ) ) && ( !(Ypre[273]==1.) ) ) ) )
			Y[272] = 1.;
		else
			Y[272] = 0.;
		if( ( !(Y[315]==1.) ) && ( ( !( ( ( ( (Ypre[269]==2.) || (Ypre[269]==1.) ) || (Y[277]==1.) ) || (Ypre[269]==-1.) ) || (Y[276]==1.) ) ) || ( ( ( ( (Y[269]==0.) && ( !(Y[277]==1.) ) ) && ( !(Y[276]==1.) ) ) && ( !(Ypre[277]==1.) ) ) && ( !(Ypre[276]==1.) ) ) ) )
			Y[275] = 1.;
		else
			Y[275] = 0.;
		if( ( !(Y[316]==1.) ) && ( ( !( ( ( ( (Ypre[270]==2.) || (Ypre[270]==1.) ) || (Y[280]==1.) ) || (Ypre[270]==-1.) ) || (Y[279]==1.) ) ) || ( ( ( ( (Y[270]==0.) && ( !(Y[280]==1.) ) ) && ( !(Y[279]==1.) ) ) && ( !(Ypre[280]==1.) ) ) && ( !(Ypre[279]==1.) ) ) ) )
			Y[278] = 1.;
		else
			Y[278] = 0.;
		if( ( !(Y[316]==1.) ) && ( ( !( ( ( ( (Ypre[271]==2.) || (Ypre[271]==1.) ) || (Y[283]==1.) ) || (Ypre[271]==-1.) ) || (Y[282]==1.) ) ) || ( ( ( ( (Y[271]==0.) && ( !(Y[283]==1.) ) ) && ( !(Y[282]==1.) ) ) && ( !(Ypre[283]==1.) ) ) && ( !(Ypre[282]==1.) ) ) ) )
			Y[281] = 1.;
		else
			Y[281] = 0.;
		if( ( !(Y[312]==1.) ) && ( ( !( ( ( ( (Ypre[284]==2.) || (Ypre[284]==1.) ) || (Y[287]==1.) ) || (Ypre[284]==-1.) ) || (Y[286]==1.) ) ) || ( ( ( ( (Y[284]==0.) && ( !(Y[287]==1.) ) ) && ( !(Y[286]==1.) ) ) && ( !(Ypre[287]==1.) ) ) && ( !(Ypre[286]==1.) ) ) ) )
			Y[285] = 1.;
		else
			Y[285] = 0.;
		if( Y[310]==1. )
			Y[310] = 0.;
		if( Y[382]==1. )
			Y[382] = 0.;
		if( Y[383]==1. )
			Y[383] = 0.;
	}
	return(0);
}

static long cpr(double T, double *Y)
{
	double v;
	long k;

	k = 0;
	if( Y[4]<=0. )
		v = 1.;
	else
		v = 0.;
	if( Y[312]!=v ) {
		Y[312] = v;
		k = 1;
	}
	if( Y[266]>0.6 )
		v = 1.;
	else
		v = 0.;
	if( Y[313]!=v ) {
		Y[313] = v;
		k = 1;
	}
	if( Y[266]<0.1385 )
		v = 1.;
	else
		v = 0.;
	if( Y[314]!=v ) {
		Y[314] = v;
		k = 1;
	}
	if( Y[11]<=0. )
		v = 1.;
	else
		v = 0.;
	if( Y[315]!=v ) {
		Y[315] = v;
		k = 1;
	}
	if( Y[12]<=0. )
		v = 1.;
	else
		v = 0.;
	if( Y[316]!=v ) {
		Y[316] = v;
		k = 1;
	}
	if( Y[83]>0.14 )
		v = 1.;
	else
		v = 0.;
	if( Y[317]!=v ) {
		Y[317] = v;
		k = 1;
	}
	if( Y[92]<=Y[91] )
		v = 1.;
	else
		v = 0.;
	if( Y[318]!=v ) {
		Y[318] = v;
		k = 1;
	}
	if( Y[94]<=Y[93] )
		v = 1.;
	else
		v = 0.;
	if( Y[319]!=v ) {
		Y[319] = v;
		k = 1;
	}
	if( Y[87]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[320]!=v ) {
		Y[320] = v;
		k = 1;
	}
	if( Y[292]<Y[409] )
		v = 1.;
	else
		v = 0.;
	if( Y[321]!=v ) {
		Y[321] = v;
		k = 1;
	}
	if( Y[88]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[322]!=v ) {
		Y[322] = v;
		k = 1;
	}
	if( Y[410]<Y[292] )
		v = 1.;
	else
		v = 0.;
	if( Y[323]!=v ) {
		Y[323] = v;
		k = 1;
	}
	if( Y[89]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[324]!=v ) {
		Y[324] = v;
		k = 1;
	}
	if( Y[90]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[325]!=v ) {
		Y[325] = v;
		k = 1;
	}
	if( Y[86]<0. )
		v = 1.;
	else
		v = 0.;
	if( Y[326]!=v ) {
		Y[326] = v;
		k = 1;
	}
	if( Y[294]>1.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[327]!=v ) {
		Y[327] = v;
		k = 1;
	}
	if( Y[85]<=Y[84] )
		v = 1.;
	else
		v = 0.;
	if( Y[328]!=v ) {
		Y[328] = v;
		k = 1;
	}
	if( Y[82]>1.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[329]!=v ) {
		Y[329] = v;
		k = 1;
	}
	if( Y[70]>=0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[330]!=v ) {
		Y[330] = v;
		k = 1;
	}
	if( Y[75]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[331]!=v ) {
		Y[331] = v;
		k = 1;
	}
	if( Y[76]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[332]!=v ) {
		Y[332] = v;
		k = 1;
	}
	if( Y[81]<Y[400] )
		v = 1.;
	else
		v = 0.;
	if( Y[333]!=v ) {
		Y[333] = v;
		k = 1;
	}
	if( Y[291]<Y[412] )
		v = 1.;
	else
		v = 0.;
	if( Y[334]!=v ) {
		Y[334] = v;
		k = 1;
	}
	if( Y[80]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[335]!=v ) {
		Y[335] = v;
		k = 1;
	}
	if( Y[405]-1.<=Y[79] )
		v = 1.;
	else
		v = 0.;
	if( Y[336]!=v ) {
		Y[336] = v;
		k = 1;
	}
	if( Y[78]<Y[400] )
		v = 1.;
	else
		v = 0.;
	if( Y[337]!=v ) {
		Y[337] = v;
		k = 1;
	}
	if( Y[77]<0.5 )
		v = 1.;
	else
		v = 0.;
	if( Y[338]!=v ) {
		Y[338] = v;
		k = 1;
	}
	if( Y[72]<Y[71] )
		v = 1.;
	else
		v = 0.;
	if( Y[339]!=v ) {
		Y[339] = v;
		k = 1;
	}
	if( Y[74]<0. )
		v = 1.;
	else
		v = 0.;
	if( Y[340]!=v ) {
		Y[340] = v;
		k = 1;
	}
	if( Y[73]<0. )
		v = 1.;
	else
		v = 0.;
	if( Y[341]!=v ) {
		Y[341] = v;
		k = 1;
	}
	if( Y[66]>-1. )
		v = 1.;
	else
		v = 0.;
	if( Y[342]!=v ) {
		Y[342] = v;
		k = 1;
	}
	if( Y[265]>100. )
		v = 1.;
	else
		v = 0.;
	if( Y[343]!=v ) {
		Y[343] = v;
		k = 1;
	}
	if( Y[265]<0. )
		v = 1.;
	else
		v = 0.;
	if( Y[344]!=v ) {
		Y[344] = v;
		k = 1;
	}
	if( Y[67]*Y[7]>=0. )
		v = 1.;
	else
		v = 0.;
	if( Y[345]!=v ) {
		Y[345] = v;
		k = 1;
	}
	if( (Y[69]*(Y[6]-Y[7]*Y[390]))/(Y[397]+1.)>=0. )
		v = 1.;
	else
		v = 0.;
	if( Y[346]!=v ) {
		Y[346] = v;
		k = 1;
	}
	if( Y[64]*Y[389]*Y[7]<=0. )
		v = 1.;
	else
		v = 0.;
	if( Y[347]!=v ) {
		Y[347] = v;
		k = 1;
	}
	if( (Y[68]*Y[397]*(Y[6]-Y[7]*Y[390]))/(Y[397]+1.)<=0. )
		v = 1.;
	else
		v = 0.;
	if( Y[348]!=v ) {
		Y[348] = v;
		k = 1;
	}
	if( (Y[6]-Y[7]*Y[390])/(Y[397]+1.)>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[349]!=v ) {
		Y[349] = v;
		k = 1;
	}
	if( Y[389]*Y[7]<0. )
		v = 1.;
	else
		v = 0.;
	if( Y[350]!=v ) {
		Y[350] = v;
		k = 1;
	}
	if( (Y[397]*(Y[6]-Y[7]*Y[390]))/(Y[397]+1.)<0. )
		v = 1.;
	else
		v = 0.;
	if( Y[351]!=v ) {
		Y[351] = v;
		k = 1;
	}
	if( Y[52]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[352]!=v ) {
		Y[352] = v;
		k = 1;
	}
	if( Y[54]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[353]!=v ) {
		Y[353] = v;
		k = 1;
	}
	if( Y[56]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[354]!=v ) {
		Y[354] = v;
		k = 1;
	}
	if( Y[58]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[355]!=v ) {
		Y[355] = v;
		k = 1;
	}
	if( Y[5]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[356]!=v ) {
		Y[356] = v;
		k = 1;
	}
	if( Y[7]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[357]!=v ) {
		Y[357] = v;
		k = 1;
	}
	if( Y[64]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[358]!=v ) {
		Y[358] = v;
		k = 1;
	}
	if( Y[67]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[359]!=v ) {
		Y[359] = v;
		k = 1;
	}
	if( Y[68]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[360]!=v ) {
		Y[360] = v;
		k = 1;
	}
	if( Y[69]>0. )
		v = 1.;
	else
		v = 0.;
	if( Y[361]!=v ) {
		Y[361] = v;
		k = 1;
	}
	if( Y[52]>1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[362]!=v ) {
		Y[362] = v;
		k = 1;
	}
	if( Y[54]>1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[363]!=v ) {
		Y[363] = v;
		k = 1;
	}
	if( Y[56]>1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[364]!=v ) {
		Y[364] = v;
		k = 1;
	}
	if( Y[58]>1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[365]!=v ) {
		Y[365] = v;
		k = 1;
	}
	if( Y[5]>1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[366]!=v ) {
		Y[366] = v;
		k = 1;
	}
	if( Y[52]<-1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[367]!=v ) {
		Y[367] = v;
		k = 1;
	}
	if( Y[54]<-1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[368]!=v ) {
		Y[368] = v;
		k = 1;
	}
	if( Y[56]<-1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[369]!=v ) {
		Y[369] = v;
		k = 1;
	}
	if( Y[58]<-1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[370]!=v ) {
		Y[370] = v;
		k = 1;
	}
	if( Y[95]<-Y[11] )
		v = 1.;
	else
		v = 0.;
	if( Y[371]!=v ) {
		Y[371] = v;
		k = 1;
	}
	if( Y[96]<-Y[11] )
		v = 1.;
	else
		v = 0.;
	if( Y[372]!=v ) {
		Y[372] = v;
		k = 1;
	}
	if( Y[97]<-Y[12] )
		v = 1.;
	else
		v = 0.;
	if( Y[373]!=v ) {
		Y[373] = v;
		k = 1;
	}
	if( Y[98]<-Y[12] )
		v = 1.;
	else
		v = 0.;
	if( Y[374]!=v ) {
		Y[374] = v;
		k = 1;
	}
	if( Y[11]<Y[95] )
		v = 1.;
	else
		v = 0.;
	if( Y[375]!=v ) {
		Y[375] = v;
		k = 1;
	}
	if( Y[11]<Y[96] )
		v = 1.;
	else
		v = 0.;
	if( Y[376]!=v ) {
		Y[376] = v;
		k = 1;
	}
	if( Y[12]<Y[97] )
		v = 1.;
	else
		v = 0.;
	if( Y[377]!=v ) {
		Y[377] = v;
		k = 1;
	}
	if( Y[12]<Y[98] )
		v = 1.;
	else
		v = 0.;
	if( Y[378]!=v ) {
		Y[378] = v;
		k = 1;
	}
	if( Y[65]<-Y[4] )
		v = 1.;
	else
		v = 0.;
	if( Y[379]!=v ) {
		Y[379] = v;
		k = 1;
	}
	if( Y[5]<-1e10 )
		v = 1.;
	else
		v = 0.;
	if( Y[380]!=v ) {
		Y[380] = v;
		k = 1;
	}
	if( Y[4]<Y[65] )
		v = 1.;
	else
		v = 0.;
	if( Y[381]!=v ) {
		Y[381] = v;
		k = 1;
	}
	return(k);
}

static void inpfn(double T, double *U)
{
	return;
	U[0] = 0.;
	U[1] = 0.;
	U[2] = 0.;
}

/*
	Projection: Use Rp,Jp constraint residual and Jacobian functions to
	project the input solution x back onto the constraint manfold.

	Return codes:
	0 - Successful completion
	1 - Entry of Residual or Jacobian is undefined/infinity
	2 - Row of Jacobian is zero, but residual is nonzero
	3 - Iteration limit reached
*/
static long Projection(
	double t,		/* Current time */
	double *x,		/* Current solution (updated) */
	double tol,		/* Tolerance limit for iteration */
	long maxiter,	/* Max iteration limit */
	double *w		/* Weight vector */
)
{
	long i, j, k, r, c, iter, nc2, ip[NCON],per[NDIFF];
	double scl, resmag, val, val2, R[NCON],J[NCON*NDIFF],A[NCON*NCON];
#if NCON*NCON>NDIFF
	double iA[NCON*NCON];
#else
	double iA[NDIFF];
#endif

	for(iter=0;iter<maxiter;iter++) {

		/* Compute the Jacobian and Residual at the current solution */
		Rp(t, x, R);
		Jp(t, x, J);

		/* Scale the columns by the weight factor */
		if( w ) {
			for(j=0;j<NDIFF;j++)
				for(i=0;i<NCON;i++)
					J[NDIFF*i+j] /= w[j];
		}

		/* Rescale rows of Jacobian so that maximum coeff is 1, validating */
		resmag = 0.0;
		for(i=0;i<NCON;i++) {
			if( IS_UNDEF(R[i]) ) return(1);
			val = 0.0;
			for(j=0;j<NDIFF;j++) {
				if( IS_UNDEF(J[i*NDIFF+j]) ) return(1);
				val2 = fabs(J[i*NDIFF+j]);
				if( val2>val ) val = val2;
			}
			if( val==0. ) {
				if( R[i]!=0. )
					return(2);
			}
			else {
				val = 1.0/val;
				for(j=0;j<NDIFF;j++) J[i*NDIFF+j] *= val;
				R[i] *= val;
				resmag += R[i]*R[i];
			}
		}

		/* Compute J_hat from J
			The solving process will select the row with the largest residual,
			then choose the largest coeff, computing an approx.  of the condition
			as we go, stopping when the condition becomes too poor. */
		for(i=0;i<NDIFF;i++) per[i]=i;
		nc2 = NCON;
		scl = 1.0;
		i = 0;
		while( i<nc2 ) {
			/* Search for row with largest residual */
			resmag = fabs(R[i]); r = i;
			for(j=i+1;j<nc2;j++) {
				val2 = fabs(R[j]);
				if( val2>resmag ) { resmag = val2; r = j; }
			}
			/* Check for termination on the first row of this iteration */
			if( i==0 && ( resmag<=tol || iter>=maxiter )) {
				nc2 = NDIFF+1; break;
			}

			/* Row 'r' has largest residual 'val', locate column with
				largest coeff */
			val = fabs(J[r*NDIFF+i]); c = i;
			for(j=i+1;j<NDIFF;j++) {
				val2 = fabs(J[r*NDIFF+j]);
				if( val2>val ) { val = val2; c = j; }
			}

			if( scl*val<sqrt(tol) )  {
				/* Coefficient is too small - remove row */
				if( r!=nc2-1 ) {
					for(j=0;j<NDIFF;j++) J[r*NDIFF+j] = J[(nc2-1)*NDIFF+j];
					R[r] = R[nc2-1];
				}
				nc2--;
			}
			else {
				/* Adjust condition estimate */
				scl *= val;
				/* Row/Column exchanges */
				if( c!=i ) {
					for(j=0;j<nc2;j++) { val=J[j*NDIFF+i]; J[j*NDIFF+i]=J[j*NDIFF+c]; J[j*NDIFF+c]=val; }
					j=per[i]; per[i]=per[c]; per[c]=j;
				}
				if( r!=i ) {
					for(j=i;j<NDIFF;j++) { val=J[i*NDIFF+j]; J[i*NDIFF+j]=J[r*NDIFF+j]; J[r*NDIFF+j]=val; }
					val=R[i]; R[i]=R[r]; R[r]=val;
				}
				/* Rescale if necessary */
				if( J[i*NDIFF+i]!=1.0 ) {
					val = 1.0/J[i*NDIFF+i];
					J[i*NDIFF+i] = 1.0;
					for(j=i+1;j<NDIFF;j++) J[i*NDIFF+j] = J[i*NDIFF+j]*val;
					R[i] *= val;
				}
				/* Backsub */
				for(r=0;r<nc2;r++)
					if( r!=i && J[r*NDIFF+i]!=0.0 ) {
						for(c=i+1;c<NDIFF;c++) J[r*NDIFF+c] -= J[r*NDIFF+i]*J[i*NDIFF+c];
						R[r] -= J[r*NDIFF+i]*R[i];
						J[r*NDIFF+i] = 0.0;
					}
				if( i==NDIFF-1 ) {
					nc2=NDIFF;
					break;
				}
				else
					i++;
			}
		}
		if( nc2==NDIFF+1 )
			/* Termination: residual within bound on first row */
			break;

		/* Compute A = J_hat * J_hat^T */
		for(j=0;j<nc2;j++)
			for(i=0;i<=j;i++) {
				A[i*nc2+j] = 0.0;
				for(k=0;k<NDIFF;k++) A[i*nc2+j]+=J[i*NDIFF+k]*J[j*NDIFF+k];
			}
		for(i=0;i<nc2;i++)
			for(j=0;j<i;j++)
				A[i*nc2+j]=A[j*nc2+i];

		/* Construct (J_hat * J_hat^T)^(-1) in iA */
		for(i=0;i<nc2*nc2;i++) iA[i]=0.0;
		for(i=0;i<nc2;i++) iA[i*(1+nc2)]=1.0;
		DecompCInc(nc2, A, nc2, ip);
		MultiSolveCInc(nc2, A, nc2, ip, nc2, iA, nc2);

		/* Multiply iA (nc2 x nc2) with R (nc2 x 1) to A (nc2 x 1)
			A = (J_hat * J_hat^T)^(-1) * R */
		for(i=0;i<nc2;i++) {
			A[i] = 0.0;
			for(k=0;k<nc2;k++) A[i] += iA[i*nc2+k]*R[k];
		}

		/* Multiply J_hat^T (NDIFF x nc2) with A (nc2 x 1) to iA (NDIFF x 1)
			 iA = J_hat^T * (J_hat * J_hat^T)^(-1) * R */
		for(i=0;i<NDIFF;i++) {
			iA[i] = 0.0;
			for(k=0;k<nc2;k++) iA[i] += J[k*NDIFF+i]*A[k];
		}

		val=0.0; for(i=0;i<NDIFF;i++) val+=x[i]*x[i]; val=sqrt(val);
		val2=0.0; for(i=0;i<NDIFF;i++) val2+=iA[i]*iA[i]; val2=sqrt(val2);
		val = val2/((val>0.1*val2)?val:(0.1*val2));
		if( val>0.1 ) {
			/* Solution is very far off - Use relaxed */
			val2 = ( tol>0.1/val )?tol:(0.1/val);
			for(i=0;i<NDIFF;i++) x[per[i]]-=val2*iA[i];
		}
		else
			/* Direct newton */
			for(i=0;i<NDIFF;i++) x[per[i]]-=iA[i];
	}
	if( iter==maxiter ) return(3); else return(0);
}

/*
	ProjectInitial: Use weighted projection to find consistent initial
	data with fixed initial values.

	Return codes:
	0 - Successful completion
	2 - Projection not converging
	3 - Iteration limit reached
*/
static long ProjectInitial(
	double t,			/* t0 */
	double *x,			/* Current solution (updated) */
	double ptol,		/* Tolerance limit for iteration for projection */
	long pmaxiter,	/* Max iteration limit for projection */
	long *icmask,	/* Fixed IC mask vector */
	double tol,		/* Convergence tolerance */
	long maxiter,	/* Max limit for number of calls to projection */
	double W			/* Default fixed IC weight */
)
{
	long i, ip, iter;
	double delta1, delta2, rate, val, w[NDIFF], ic[NDIFF];

	for(i=0;i<NDIFF;i++) {
		if( icmask[i]==0 )
			w[i] = 1.0;
		else {
			w[i] = W;
			ic[i] = x[i];
		}
	}

	delta1 = 1.0;
	for(iter=0;iter<maxiter;iter++) {
		/* Do weighted projection and check fixed IC deviation */
		ip=Projection(t,x,ptol,pmaxiter,w);
		if( ip>0 && ip!=3 ) return(2);

		delta2 = 0.0;
		for(i=0;i<NDIFF;i++)
			if( w[i]!=1.0 ) {
				val = 0.5*(fabs(x[i])+fabs(ic[i]));
				val = ( val > 1.0e-3 ) ? val : 1.0e-3;
				delta2+=fabs((x[i]-ic[i]))/(val);
			}

		/* Return if projection converged */
		if( delta2<=tol ) break;
		/* Check for adequate convergence rate */
		if( iter>2 && (delta2/delta1 > 0.9) ) return(2);
		/* Check iteration limit */
		if( iter==maxiter-1 ) { iter++; break; }

		/* Overwrite the solution vector with fixed IC values,
		   for next pass. */
		for(i=0;i<NDIFF;i++)
			if( w[i]!=1.0 ) x[i]=ic[i];

		delta1 = delta2;
	}
	/* Check iteration limit */
	if( iter==maxiter ) return(3); else return(0);
}

static void terminate(SolverStruct *S, long j)
{
	if(j==1) SolverError(S,1,"Modelica assertion (0 < abs(Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.R_mot2wh)) failed in Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.BG4: Error in initialization of LossyGear: ratio may not be zero");
	if(j==2) SolverError(S,1,"Modelica assertion (0 < abs(Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.R_ring2wh)) failed in Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.BG1: Error in initialization of LossyGear: ratio may not be zero");
	if(j==3) SolverError(S,1,"Modelica assertion (1 < Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.'Powertrain Parameters'.rho ^ (-1)) failed in Main.'ThrottleBrake Vehicle May16'.'Brake Clutch Mode'.PG1: Error in initialization of Planetary Gear: ratio must be strictly greater than one");
}

static long RunEvents(SolverStruct *S, double *w, long *modes, long first, long termvar, long maxiter)
{
	double t,*y,*yp,*ypre,*tval;
	long *m=NULL,*oldmodes,*inc,*req;
	long i,flag,iter,evt,rc,failskip;

	/* Transfer data to approp. named arrays */
	t=w[0]; y=&w[1]; yp=&y[NEQ+NPAR]; ypre=&yp[NDFA]; tval=&ypre[NEQ];
	oldmodes=&modes[NZC]; inc=&oldmodes[NZC]; req=&inc[NEVT];
	/* Verify that no y values are undefined */
	for(i=0;i<NEQ;i++) if(IS_UNDEF(y[i])) {
		SolverError(S,0,"undefined value encountered on entry to RunEvents");
		return(-3);
	}

	/* Set the old modes to the new and ypre to y */
	for(i=0;i<NZC;i++) oldmodes[i]=modes[i];
	for(i=0;i<NEQ;i++) ypre[i]=y[i];

	if(!first) {
		/* Check for events */
		eev(t,y,ypre,tval);
		flag=0;
		for(i=0;i<NEVT;i++) {
#ifdef EVTHYST
			if( tval[i]>EVTHYST && modes[2*i]==0 ) {
				modes[2*i]=1;
				if(req[i]>0 && y[req[i]-1]==1.0) oldmodes[2*i]=1;
				else flag=1;
			}
			else if( tval[i]<EVTHYST && modes[2*i]==1 ) {
				modes[2*i]=0; oldmodes[2*i]=0;
			}
			if( tval[i]>-EVTHYST && modes[2*i+1]==0) {
				modes[2*i+1]=1; oldmodes[2*i+1]=1;
			}
			else if( tval[i]<-EVTHYST && modes[2*i+1]==1 ) {
				modes[2*i+1]=0;
				if(inc[i] || (req[i]>0 && y[req[i]-1]==0.0)) oldmodes[2*i+1]=0;
				else flag=1;
			}
#else
			if( tval[i]>0.0 && modes[i]==0 ) {
				modes[i]=1;
				if(req[i]>0 && y[req[i]-1]==1.0) oldmodes[i]=1;
				else flag=1;
			}
			else if( tval[i]<0.0 && modes[i]==1 ) {
				modes[i]=0;
				if(inc[i] || (req[i]>0 && y[req[i]-1]==0.0)) oldmodes[i]=0;
				else flag=1;
			}
#endif
		}
		/* If no events, return, but still need to update modes as we may
			have a sign change for a decrease on an increase-only trigger */
		if(!flag) {
			if(m) for(i=0;i<NZC;i++) m[i]=modes[i];
			return(0);
		}
	}

	/* Iteration loop */
	failskip=0;
	for(iter=0;;iter++) {
		if( !first || iter>0 )
			/* Event loop */
			for(evt=0;evt<NEVT;evt++)
#ifdef EVTHYST
				if(modes[2*evt]!=oldmodes[2*evt] || modes[2*evt+1]!=oldmodes[2*evt+1]) {
#else
				if(modes[evt]!=oldmodes[evt]) {
#endif
					rc=eex(evt+1,t,y,ypre);
					if(termvar>=0 && y[termvar]>0.0) {
						i=(long)y[termvar];
						terminate(S,i);
						return(i);
					}
					/* Handle RC */
#ifdef EVTHYST
					oldmodes[2*evt]=modes[2*evt]; oldmodes[2*evt+1]=modes[2*evt+1];
#else
					oldmodes[evt]=modes[evt];
#endif
				}

		/* Discrete equations */
		rc=eex(NEVT+1,t,y,ypre);
		/* Fail skip */
		if(rc==8 && !failskip) {
			failskip=1;
			iter--;
			if(termvar>=0) y[termvar]=0.0;
		}
		else
			failskip=0;
		if(termvar>=0 && y[termvar]>0.0) {
			i=(long)y[termvar];
			terminate(S,i);
			return(i);
		}
		/* Handle RC */

		/* Check for termination */
		for(i=0;i<NEQ;i++) if(y[i]!=ypre[i]) break;
		if( !failskip && i==NEQ ) {
			/* Update modes and return */
			if(m) for(i=0;i<NZC;i++) m[i]=modes[i];
			return(0);
		}

		/* Check iter limit */
		if( iter>=maxiter ) {
			SolverError(S,0,"event iteration limit exceeded");
			return(-1);
		}

		/* Update index-1 equations */
		if(!failskip && NIX1>0) {
			fp(NEQ,t,y,yp);
			if( IS_UNDEF(yp[0]) ) {
				SolverError(S,0,"index-1 and derivative evaluation failure");
				return(-2);
			}
		}
		/* Verify that no y values are undefined */
		for(i=0;i<NEQ;i++) if(IS_UNDEF(y[i])) {
			SolverError(S,0,"undefined value encountered during event iteration");
			return(-4);
		}

		/* Projection */
		if(!first && !failskip && EVTPROJ) i=Projection(t,y,CONTOL,CONITER,NULL);

		/* Update pre */
		for(i=0;i<NEQ;i++) ypre[i]=y[i];
		if(failskip) continue;

		/* Evaluate event triggers, and update modes */
		eev(t,y,ypre,tval);
		for(i=0;i<NEVT;i++) {
#ifdef EVTHYST
			if( tval[i]>EVTHYST && modes[2*i]==0 ) {
				modes[2*i]=1;
				if(req[i]>0 && y[req[i]-1]==1.0) oldmodes[2*i]=1;
			}
			else if( tval[i]<EVTHYST && modes[2*i]==1 ) {
				modes[2*i]=0; oldmodes[2*i]=0;
			}
			if( tval[i]>-EVTHYST && modes[2*i+1]==0) {
				modes[2*i+1]=1; oldmodes[2*i+1]=1;
			}
			else if( tval[i]<-EVTHYST && modes[2*i+1]==1 ) {
				modes[2*i+1]=0;
				if(inc[i] || (req[i]>0 && y[req[i]-1]==0.0)) oldmodes[2*i+1]=0;
			}
#else
			if( tval[i]>0.0 && modes[i]==0 ) {
				modes[i]=1;
				if(req[i]>0 && y[req[i]-1]==1.0) oldmodes[i]=1;
			}
			else if( tval[i]<0.0 && modes[i]==1 ) {
				modes[i]=0;
				if(req[i]>0 && y[req[i]-1]==0.0) oldmodes[i]=0;
				if(inc[i]) oldmodes[i]=0;
			}
#endif
		}
	}
	return(0);
}

static void numdiffinp(double *w, long initial)
{
	double dt1,dt2,idt1,idt2,idt12,*nd1,*nd2;

	nd1=w+1+2*NEQ+NPAR+NDFA+NEVT;
	nd2=nd1+3;
	if(!initial && w[0]-nd1[0]>0.0) {
		dt1=w[0]-nd1[0]; idt1=1.0/dt1;
		if(nd1[0]-nd2[0]>0.0) {
			dt2=w[0]-nd2[0]; idt2=1.0/dt2;
			idt12=1.0/(nd2[0]-nd1[0]);
			w[264]=(idt1+idt2)*w[268]+idt12*(dt2*idt1*nd1[1]-dt1*idt2*nd2[1]);
			w[265]=(idt1+idt2)*w[264]+idt12*(dt2*idt1*nd1[2]-dt1*idt2*nd2[2]);
		}
		else {
			w[264]=idt1*(w[268]-nd1[1]);
			w[265]=idt1*(w[264]-nd1[2]);
		}
	}
	if(initial || w[0]-nd1[0]>1e-10) {
		nd2[0]=nd1[0]; nd1[0]=w[0];
		nd2[1]=nd1[1]; nd1[1]=w[268];
		nd2[2]=nd1[2]; nd1[2]=w[264];
	}
}

static void SolverUpdate(double *u, long internal, SolverStruct *S)
{
	long i;

	inpfn(S->w[0],u);
	for(i=0;i<NINP;i++) S->w[i+NDIFF+NIX1-NINP+1]=u[i];
	numdiffinp(S->w,0);
	fp(NEQ,S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
	if(IS_UNDEF(S->w[NEQ+NPAR+1])) {
		SolverError(S,0,"index-1 and derivative evaluation failure");
		return;
	}
	if(internal) return;
	i=Projection(S->w[0],&S->w[1],CONTOL,CONITER,NULL);
	if(i>0 && i!=3) {
		SolverError(S,0,"constraint projection failure");
		return;
	}
	fp(NEQ,S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
	if(IS_UNDEF(S->w[NEQ+NPAR+1])) {
		SolverError(S,0,"index-1 and derivative evaluation failure");
		return;
	}
	if(RunEvents(S,S->w,S->iw,0,311,EVTITER)) return;
}

static void SolverOutputs(double *y, SolverStruct *S)
{
	otp(S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
	y[ 0]=S->w[224];
	y[ 1]=S->w[225];
	y[ 2]=S->w[226];
	y[ 3]=S->w[26];
	y[ 4]=S->w[27];
	y[ 5]=S->w[28];
	y[ 6]=S->w[227];
	y[ 7]=S->w[228];
	y[ 8]=S->w[229];
	y[ 9]=S->w[16];
	y[10]=S->w[20];
	y[11]=S->w[22];
	y[12]=S->w[178];
	y[13]=S->w[230];
	y[14]=S->w[231];
	y[15]=S->w[29];
	y[16]=S->w[30];
	y[17]=S->w[31];
	y[18]=S->w[232];
	y[19]=S->w[233];
	y[20]=S->w[32];
	y[21]=S->w[33];
	y[22]=S->w[34];
	y[23]=S->w[234];
	y[24]=S->w[235];
	y[25]=S->w[236];
	y[26]=S->w[237];
	y[27]=S->w[238];
	y[28]=S->w[41];
	y[29]=S->w[42];
	y[30]=S->w[43];
	y[31]=S->w[239];
	y[32]=S->w[240];
	y[33]=S->w[241];
	y[34]=S->w[242];
	y[35]=S->w[243];
	y[36]=S->w[244];
	y[37]=S->w[245];
	y[38]=S->w[246];
	y[39]=S->w[247];
	y[40]=S->w[38];
	y[41]=S->w[39];
	y[42]=S->w[40];
	y[43]=S->w[248];
	y[44]=S->w[249];
	y[45]=S->w[250];
	y[46]=S->w[251];
	y[47]=S->w[35];
	y[48]=S->w[36];
	y[49]=S->w[37];
	y[50]=S->w[252];
	y[51]=S->w[253];
	y[52]=S->w[254];
	y[53]=S->w[255];
	y[54]=S->w[256];
	y[55]=S->w[257];
	y[56]=S->w[258];
	y[57]=S->w[259];
	y[58]=S->w[260];
	y[59]=S->w[261];
	y[60]=S->w[262];
	y[61]=S->w[263];
	y[62]=S->w[223];
	y[63]=S->w[60];
	y[64]=S->w[ 1];
	y[65]=S->w[ 2];
	y[66]=S->w[ 3];
	y[67]=S->w[ 4];
	y[68]=S->w[ 5];
	y[69]=S->w[ 6];
	y[70]=S->w[ 7];
	y[71]=S->w[ 8];
	y[72]=S->w[ 9];
	y[73]=S->w[10];
	y[74]=S->w[11];
	y[75]=S->w[12];
	y[76]=S->w[13];
	y[77]=S->w[14];
	y[78]=S->w[16];
	y[79]=S->w[18];
	y[80]=S->w[20];
	y[81]=S->w[22];
	y[82]=S->w[24];
	y[83]=S->w[26];
	y[84]=S->w[27];
	y[85]=S->w[28];
	y[86]=S->w[29];
	y[87]=S->w[30];
	y[88]=S->w[31];
	y[89]=S->w[32];
	y[90]=S->w[33];
	y[91]=S->w[34];
	y[92]=S->w[35];
	y[93]=S->w[36];
	y[94]=S->w[37];
	y[95]=S->w[38];
	y[96]=S->w[39];
	y[97]=S->w[40];
	y[98]=S->w[41];
	y[99]=S->w[42];
	y[100]=S->w[43];
	y[101]=S->w[44];
	y[102]=S->w[46];
	y[103]=S->w[48];
	y[104]=S->w[50];
	y[105]=S->w[52];
	y[106]=S->w[54];
	y[107]=S->w[56];
	y[108]=S->w[58];
	y[109]=S->w[61];
	y[110]=S->w[62];
	y[111]=S->w[63];
	y[112]=S->w[64];
}

static void RK4Step(double *u, SolverStruct *S)
{
	long i;
	double y[NEQ+1],yp1[NDFA],yp2[NDFA],yp3[NDFA];

	for(i=0;i<NEQ+1;i++) y[i]=S->w[i];
	for(i=0;i<NDIFF;i++) yp1[i]=S->w[1+NEQ+NPAR+i];
	S->w[0]+=0.5*S->h;
	for(i=0;i<NDIFF;i++) S->w[i+1]+=0.5*S->h*S->w[1+NEQ+NPAR+i];
	SolverUpdate(u,1,S);
	for(i=0;i<NDIFF;i++) yp2[i]=S->w[1+NEQ+NPAR+i];
	for(i=0;i<NDIFF;i++) S->w[i+1]=y[i+1]+0.5*S->h*S->w[1+NEQ+NPAR+i];
	SolverUpdate(u,1,S);
	for(i=0;i<NDIFF;i++) yp3[i]=S->w[1+NEQ+NPAR+i];
	S->w[0]=y[0]+S->h;
	for(i=0;i<NDIFF;i++) S->w[i+1]=y[i+1]+S->h*S->w[1+NEQ+NPAR+i];
	SolverUpdate(u,1,S);
	for(i=0;i<NDIFF;i++) S->w[i+1]=y[i+1]+S->h/6.0*(yp1[i]+2.0*(yp2[i]+yp3[i])+S->w[1+NEQ+NPAR+i]);
	SolverUpdate(u,0,S);
}

static void SolverSetup(double t0, double *ic, double *u, double *p, double *y, double h, SolverStruct *S)
{
	long i, j;

	S->h = h;
	S->iw=(long *)malloc(2*(NEVT+NZC)*sizeof(long));
	S->w[0] = t0;
	S->w[1] =  0.00000000000000000e+00;
	S->w[2] =  0.00000000000000000e+00;
	S->w[3] =  0.00000000000000000e+00;
	S->w[4] =  0.00000000000000000e+00;
	S->w[5] =  0.00000000000000000e+00;
	S->w[6] =  0.00000000000000000e+00;
	S->w[7] =  8.82911392405063395e+01;
	S->w[8] =  0.00000000000000000e+00;
	S->w[9] =  0.00000000000000000e+00;
	S->w[10] =  0.00000000000000000e+00;
	S->w[11] =  0.00000000000000000e+00;
	S->w[12] =  0.00000000000000000e+00;
	S->w[13] =  0.00000000000000000e+00;
	S->w[14] =  0.00000000000000000e+00;
	S->w[15] =  0.00000000000000000e-01;
	S->w[16] =  0.00000000000000000e+00;
	S->w[17] =  0.00000000000000000e-01;
	S->w[18] =  0.00000000000000000e+00;
	S->w[19] =  0.00000000000000000e-01;
	S->w[20] =  0.00000000000000000e+00;
	S->w[21] =  0.00000000000000000e-01;
	S->w[22] =  5.34100000000000019e-01;
	S->w[23] =  0.00000000000000000e-01;
	S->w[24] =  0.00000000000000000e+00;
	S->w[25] =  0.00000000000000000e+00;
	S->w[26] =  0.00000000000000000e+00;
	S->w[27] =  0.00000000000000000e+00;
	S->w[28] =  0.00000000000000000e+00;
	S->w[29] =  0.00000000000000000e+00;
	S->w[30] =  0.00000000000000000e+00;
	S->w[31] =  0.00000000000000000e+00;
	S->w[32] =  0.00000000000000000e+00;
	S->w[33] =  0.00000000000000000e+00;
	S->w[34] =  0.00000000000000000e+00;
	S->w[35] =  0.00000000000000000e+00;
	S->w[36] =  0.00000000000000000e+00;
	S->w[37] =  0.00000000000000000e+00;
	S->w[38] =  0.00000000000000000e+00;
	S->w[39] =  0.00000000000000000e+00;
	S->w[40] =  0.00000000000000000e+00;
	S->w[41] =  0.00000000000000000e+00;
	S->w[42] =  0.00000000000000000e+00;
	S->w[43] =  0.00000000000000000e+00;
	S->w[44] =  4.44502000000000008e-01;
	S->w[45] =  0.00000000000000000e+00;
	S->w[46] =  4.44502000000000008e-01;
	S->w[47] =  0.00000000000000000e+00;
	S->w[48] =  4.44502000000000008e-01;
	S->w[49] =  0.00000000000000000e+00;
	S->w[50] =  4.44502000000000008e-01;
	S->w[51] =  0.00000000000000000e+00;
	S->w[52] =  0.00000000000000000e+00;
	S->w[53] =  0.00000000000000000e+00;
	S->w[54] =  0.00000000000000000e+00;
	S->w[55] =  0.00000000000000000e+00;
	S->w[56] =  0.00000000000000000e+00;
	S->w[57] =  0.00000000000000000e+00;
	S->w[58] =  0.00000000000000000e+00;
	S->w[59] =  0.00000000000000000e+00;
	S->w[60] =  0.00000000000000000e+00;
	S->w[61] =  0.00000000000000000e+00;
	S->w[62] =  0.00000000000000000e+00;
	S->w[63] =  0.00000000000000000e+00;
	S->w[64] =  0.00000000000000000e+00;
	S->w[65] = -9.05656882353375003e+00;
	S->w[66] = -1.21944520613134549e-03;
	S->w[67] =  0.00000000000000000e+00;
	S->w[68] =  0.00000000000000000e+00;
	S->w[69] =  2.30631740383616801e+01;
	S->w[70] =  9.43743265839931844e+00;
	S->w[71] =  0.00000000000000000e+00;
	S->w[72] =  9.48058959496251297e-01;
	S->w[73] =  5.19410405037486755e-02;
	S->w[74] = -3.31629998917456760e+02;
	S->w[75] = -2.87298929080878224e+02;
	S->w[76] =  0.00000000000000000e+00;
	S->w[77] =  1.00000000000000000e+00;
	S->w[78] =  0.00000000000000000e+00;
	S->w[79] =  3.11932779639771070e+02;
	S->w[80] = -1.84415860094153672e+00;
	S->w[81] =  0.00000000000000000e+00;
	S->w[82] =  3.11932779639771070e+02;
	S->w[83] =  1.00000000000000000e+00;
	S->w[84] =  1.38500000000000012e-01;
	S->w[85] =  8.96209824507075647e-01;
	S->w[86] =  1.03790175492924394e-01;
	S->w[87] =  3.11932779639771070e+02;
	S->w[88] =  2.00000000000000000e+00;
	S->w[89] =  1.00000000000000000e+00;
	S->w[90] =  0.00000000000000000e+00;
	S->w[91] =  1.00000000000000000e+00;
	S->w[92] =  9.97593535802056119e-01;
	S->w[93] =  2.40646419625829226e-03;
	S->w[94] =  9.97593535802056119e-01;
	S->w[95] =  1.68569584003597662e-12;
	S->w[96] = -4.35932378592953916e-05;
	S->w[97] = -4.35932378592953916e-05;
	S->w[98] = -4.35932378592953916e-05;
	S->w[99] = -4.35932378592953916e-05;
	S->w[100] =  0.00000000000000000e+00;
	S->w[101] = -1.21944520613134539e+01;
	S->w[102] =  0.00000000000000000e+00;
	S->w[103] =  0.00000000000000000e+00;
	S->w[104] =  0.00000000000000000e+00;
	S->w[105] =  1.17669255297763797e+01;
	S->w[106] =  8.95958796683480507e+00;
	S->w[107] = -1.41561489875989877e-01;
	S->w[108] = -5.75006066967609968e+01;
	S->w[109] =  0.00000000000000000e+00;
	S->w[110] =  1.00000000000000000e+00;
	S->w[111] =  0.00000000000000000e+00;
	S->w[112] =  1.00000000000000000e+02;
	S->w[113] =  2.35113669167319301e+01;
	S->w[114] =  4.07973983416396388e-02;
	S->w[115] =  1.13463095212114009e+01;
	S->w[116] =  6.21627079736110977e-01;
	S->w[117] =  8.35565923637019564e-02;
	S->w[118] =  5.77479674769299090e+04;
	S->w[119] =  1.73163269178706819e-05;
	S->w[120] =  1.69207314135021228e-02;
	S->w[121] =  2.00660904256433193e-05;
	S->w[122] =  1.92413499683435248e+02;
	S->w[123] =  3.74334738903678438e-02;
	S->w[124] =  0.00000000000000000e+00;
	S->w[125] =  0.00000000000000000e+00;
	S->w[126] =  0.00000000000000000e+00;
	S->w[127] =  0.00000000000000000e+00;
	S->w[128] =  0.00000000000000000e+00;
	S->w[129] =  2.73822217490536310e+01;
	S->w[130] =  2.73822217490536310e+01;
	S->w[131] = -1.84415860094153672e+00;
	S->w[132] = -1.84415860094153672e+00;
	S->w[133] = -1.84415860094153672e+00;
	S->w[134] =  9.33912014697380166e-01;
	S->w[135] =  3.49939809374308852e-01;
	S->w[136] =  7.40773768619724993e-01;
	S->w[137] =  7.98596788116186076e+01;
	S->w[138] =  1.23671032917374319e-02;
	S->w[139] =  4.85220868899801274e-17;
	S->w[140] =  1.00000000000000000e+00;
	S->w[141] =  1.25424439178697809e+05;
	S->w[142] =  7.97286424945474293e-06;
	S->w[143] =  1.83234406478826571e-02;
	S->w[144] =  1.74931259218182424e-04;
	S->w[145] =  9.99825099336375200e-01;
	S->w[146] =  1.17815759733307743e+01;
	S->w[147] =  7.82376134278383595e-02;
	S->w[148] =  1.84312945365224330e+01;
	S->w[149] =  7.01236216875940344e-02;
	S->w[150] =  5.40499107392072436e-02;
	S->w[151] =  5.35749032191480836e+01;
	S->w[152] =  1.00000000000000000e+00;
	S->w[153] =  1.00000000000000000e+00;
	S->w[154] =  1.00000000000000000e+00;
	S->w[155] =  4.14823511969619403e+02;
	S->w[156] =  2.40486641859987294e-03;
	S->w[157] =  2.66128054161551031e+00;
	S->w[158] =  2.73128482953878760e-01;
	S->w[159] =  7.69263723569370422e-02;
	S->w[160] =  9.28568587109091070e-01;
	S->w[161] =  6.34804362879498658e+04;
	S->w[162] =  1.53131903533222697e+02;
	S->w[163] =  1.07266841187209497e-07;
	S->w[164] =  1.57149760483203180e-05;
	S->w[165] =  1.00000000000000000e+00;
	S->w[166] =  1.00000000000000000e+00;
	S->w[167] =  1.00000000000000000e+00;
	S->w[168] =  1.00000000000000000e+00;
	S->w[169] =  1.00000000000000000e+02;
	S->w[170] =  0.00000000000000000e+00;
	S->w[171] = -1.84415860094153672e+00;
	S->w[172] =  2.73822217490536310e+01;
	S->w[173] =  3.11932779639771070e+02;
	S->w[174] = -4.35932378592953862e-01;
	S->w[175] = -4.35932378592953862e-01;
	S->w[176] = -4.35932378592953862e-01;
	S->w[177] = -4.35932378592953862e-01;
	S->w[178] =  0.00000000000000000e-01;
	S->w[179] =  5.03437225225370044e-01;
	S->w[180] =  2.06799775712183035e-05;
	S->w[181] =  5.03437225225370044e-01;
	S->w[182] =  2.06799775712183035e-05;
	S->w[183] =  5.03437225225370044e-01;
	S->w[184] =  2.06799775712183035e-05;
	S->w[185] =  5.03437225225370044e-01;
	S->w[186] =  2.06799775712183035e-05;
	S->w[187] =  0.00000000000000000e+00;
	S->w[188] =  0.00000000000000000e+00;
	S->w[189] =  0.00000000000000000e+00;
	S->w[190] =  0.00000000000000000e+00;
	S->w[191] =  0.00000000000000000e+00;
	S->w[192] =  0.00000000000000000e+00;
	S->w[193] =  0.00000000000000000e+00;
	S->w[194] =  0.00000000000000000e+00;
	S->w[195] =  0.00000000000000000e+00;
	S->w[196] =  0.00000000000000000e+00;
	S->w[197] =  0.00000000000000000e+00;
	S->w[198] =  0.00000000000000000e+00;
	S->w[199] =  0.00000000000000000e+00;
	S->w[200] =  0.00000000000000000e+00;
	S->w[201] =  0.00000000000000000e+00;
	S->w[202] =  0.00000000000000000e+00;
	S->w[203] =  0.00000000000000000e+00;
	S->w[204] =  0.00000000000000000e+00;
	S->w[205] =  0.00000000000000000e-01;
	S->w[206] =  0.00000000000000000e-01;
	S->w[207] =  0.00000000000000000e-01;
	S->w[208] =  0.00000000000000000e-01;
	S->w[209] =  0.00000000000000000e+00;
	S->w[210] =  0.00000000000000000e+00;
	S->w[211] =  0.00000000000000000e+00;
	S->w[212] =  0.00000000000000000e+00;
	S->w[213] =  4.35932378592953862e-01;
	S->w[214] =  2.29838036391009004e-03;
	S->w[215] = -2.65127917579721831e-05;
	S->w[216] =  3.40284279480521958e-03;
	S->w[217] =  6.38143320176450257e-01;
	S->w[218] = -6.45432340032525698e-01;
	S->w[219] = -4.35932378592953862e-01;
	S->w[220] = -4.35932378592953862e-01;
	S->w[221] = -4.35932378592953862e-01;
	S->w[222] = -4.35932378592953862e-01;
	S->w[223] =  0.00000000000000000e-01;
	S->w[224] =  2.29838036391008570e-03;
	S->w[225] =  3.40284279480521220e-03;
	S->w[226] =  6.38143320176457363e-01;
	S->w[227] =  0.00000000000000000e+00;
	S->w[228] =  0.00000000000000000e+00;
	S->w[229] =  0.00000000000000000e-01;
	S->w[230] =  0.00000000000000000e-01;
	S->w[231] =  0.00000000000000000e+00;
	S->w[232] =  0.00000000000000000e+00;
	S->w[233] =  1.37450000000000006e+00;
	S->w[234] =  0.00000000000000000e-01;
	S->w[235] =  1.37450000000000006e+00;
	S->w[236] = -8.24913391371764615e-02;
	S->w[237] = -1.22095918581961949e-01;
	S->w[238] =  1.28136154479035946e+00;
	S->w[239] =  0.00000000000000000e+00;
	S->w[240] =  0.00000000000000000e+00;
	S->w[241] =  0.00000000000000000e-01;
	S->w[242] = -1.47550000000000003e+00;
	S->w[243] =  0.00000000000000000e+00;
	S->w[244] =  3.39598000000000011e-01;
	S->w[245] =  0.00000000000000000e+00;
	S->w[246] =  0.00000000000000000e-01;
	S->w[247] =  0.00000000000000000e+00;
	S->w[248] = -1.47550000000000003e+00;
	S->w[249] =  7.36099999999999977e-01;
	S->w[250] =  3.39598000000000011e-01;
	S->w[251] =  0.00000000000000000e-01;
	S->w[252] = -1.47550000000000003e+00;
	S->w[253] = -8.38899999999999979e-01;
	S->w[254] =  3.39598000000000011e-01;
	S->w[255] =  0.00000000000000000e-01;
	S->w[256] =  0.00000000000000000e+00;
	S->w[257] =  0.00000000000000000e+00;
	S->w[258] =  0.00000000000000000e+00;
	S->w[259] =  0.00000000000000000e+00;
	S->w[260] =  0.00000000000000000e+00;
	S->w[261] =  0.00000000000000000e+00;
	S->w[262] =  2.38732414637843050e+02;
	S->w[263] =  0.00000000000000000e+00;
	S->w[264] =  0.00000000000000000e+00;
	S->w[265] =  0.00000000000000000e+00;
	S->w[266] =  1.00000000000000000e+02;
	S->w[267] =  0.00000000000000000e+00;
	S->w[268] =  0.00000000000000000e+00;
	S->w[269] =  3.00000000000000000e+00;
	S->w[270] =  3.00000000000000000e+00;
	S->w[271] =  3.00000000000000000e+00;
	S->w[272] =  3.00000000000000000e+00;
	S->w[273] =  0.00000000000000000e+00;
	S->w[274] =  0.00000000000000000e+00;
	S->w[275] =  0.00000000000000000e+00;
	S->w[276] =  0.00000000000000000e+00;
	S->w[277] =  0.00000000000000000e+00;
	S->w[278] =  0.00000000000000000e+00;
	S->w[279] =  0.00000000000000000e+00;
	S->w[280] =  0.00000000000000000e+00;
	S->w[281] =  0.00000000000000000e+00;
	S->w[282] =  0.00000000000000000e+00;
	S->w[283] =  0.00000000000000000e+00;
	S->w[284] =  0.00000000000000000e+00;
	S->w[285] =  3.00000000000000000e+00;
	S->w[286] =  0.00000000000000000e+00;
	S->w[287] =  0.00000000000000000e+00;
	S->w[288] =  0.00000000000000000e+00;
	S->w[289] =  0.00000000000000000e+00;
	S->w[290] =  1.00000000000000000e+02;
	S->w[291] =  0.00000000000000000e+00;
	S->w[292] =  0.00000000000000000e+00;
	S->w[293] =  2.38732414637843021e+02;
	S->w[294] =  0.00000000000000000e+00;
	S->w[295] =  1.00000000000000000e+00;
	S->w[296] =  0.00000000000000000e+00;
	S->w[297] =  0.00000000000000000e+00;
	S->w[298] =  0.00000000000000000e+00;
	S->w[299] =  0.00000000000000000e+00;
	S->w[300] =  0.00000000000000000e+00;
	S->w[301] =  0.00000000000000000e+00;
	S->w[302] =  1.00000000000000000e+00;
	S->w[303] =  0.00000000000000000e+00;
	S->w[304] =  0.00000000000000000e+00;
	S->w[305] =  0.00000000000000000e+00;
	S->w[306] =  0.00000000000000000e+00;
	S->w[307] =  0.00000000000000000e+00;
	S->w[308] =  0.00000000000000000e+00;
	S->w[309] =  0.00000000000000000e+00;
	S->w[310] =  0.00000000000000000e+00;
	S->w[311] =  1.00000000000000000e+00;
	S->w[312] =  0.00000000000000000e+00;
	S->w[313] =  1.00000000000000000e+00;
	S->w[314] =  0.00000000000000000e+00;
	S->w[315] =  1.00000000000000000e+00;
	S->w[316] =  1.00000000000000000e+00;
	S->w[317] =  1.00000000000000000e+00;
	S->w[318] =  0.00000000000000000e+00;
	S->w[319] =  1.00000000000000000e+00;
	S->w[320] =  1.00000000000000000e+00;
	S->w[321] =  0.00000000000000000e+00;
	S->w[322] =  0.00000000000000000e+00;
	S->w[323] =  0.00000000000000000e+00;
	S->w[324] =  0.00000000000000000e+00;
	S->w[325] =  1.00000000000000000e+00;
	S->w[326] =  0.00000000000000000e+00;
	S->w[327] =  0.00000000000000000e+00;
	S->w[328] =  0.00000000000000000e+00;
	S->w[329] =  1.00000000000000000e+00;
	S->w[330] =  0.00000000000000000e+00;
	S->w[331] =  0.00000000000000000e+00;
	S->w[332] =  1.00000000000000000e+00;
	S->w[333] =  0.00000000000000000e+00;
	S->w[334] =  0.00000000000000000e+00;
	S->w[335] =  1.00000000000000000e+00;
	S->w[336] =  1.00000000000000000e+00;
	S->w[337] =  0.00000000000000000e+00;
	S->w[338] =  0.00000000000000000e+00;
	S->w[339] =  1.00000000000000000e+00;
	S->w[340] =  1.00000000000000000e+00;
	S->w[341] =  1.00000000000000000e+00;
	S->w[342] =  1.00000000000000000e+00;
	S->w[343] =  1.00000000000000000e+00;
	S->w[344] =  0.00000000000000000e+00;
	S->w[345] =  0.00000000000000000e+00;
	S->w[346] =  1.00000000000000000e+00;
	S->w[347] =  1.00000000000000000e+00;
	S->w[348] =  1.00000000000000000e+00;
	S->w[349] =  0.00000000000000000e+00;
	S->w[350] =  1.00000000000000000e+00;
	S->w[351] =  0.00000000000000000e+00;
	S->w[352] =  0.00000000000000000e+00;
	S->w[353] =  0.00000000000000000e+00;
	S->w[354] =  0.00000000000000000e+00;
	S->w[355] =  0.00000000000000000e+00;
	S->w[356] =  0.00000000000000000e+00;
	S->w[357] =  0.00000000000000000e+00;
	S->w[358] =  0.00000000000000000e+00;
	S->w[359] =  0.00000000000000000e+00;
	S->w[360] =  0.00000000000000000e+00;
	S->w[361] =  1.00000000000000000e+00;
	S->w[362] =  1.00000000000000000e+00;
	S->w[363] =  0.00000000000000000e+00;
	S->w[364] =  0.00000000000000000e+00;
	S->w[365] =  0.00000000000000000e+00;
	S->w[366] =  0.00000000000000000e+00;
	S->w[367] =  0.00000000000000000e+00;
	S->w[368] =  0.00000000000000000e+00;
	S->w[369] =  0.00000000000000000e+00;
	S->w[370] =  0.00000000000000000e+00;
	S->w[371] =  0.00000000000000000e+00;
	S->w[372] =  1.00000000000000000e+00;
	S->w[373] =  1.00000000000000000e+00;
	S->w[374] =  1.00000000000000000e+00;
	S->w[375] =  1.00000000000000000e+00;
	S->w[376] =  0.00000000000000000e+00;
	S->w[377] =  0.00000000000000000e+00;
	S->w[378] =  0.00000000000000000e+00;
	S->w[379] =  0.00000000000000000e+00;
	S->w[380] =  1.00000000000000000e+00;
	S->w[381] =  0.00000000000000000e+00;
	S->w[382] =  0.00000000000000000e+00;
	S->w[383] =  0.00000000000000000e+00;
	S->w[384] =  0.00000000000000000e+00;
	S->w[385] =  0.00000000000000000e+00;
	S->w[386] =  0.00000000000000000e+00;
	S->w[387] =  1.40000000000000013e-01;
	S->w[388] =  1.49999999999999994e-02;
	S->w[389] =  1.49999999999999994e-01;
	S->w[390] =  1.03900000000000006e+01;
	S->w[391] =  4.08000000000000007e+00;
	S->w[392] =  0.00000000000000000e+00;
	S->w[393] =  1.00000000000000000e+00;
	S->w[394] =  1.00000000000000000e+00;
	S->w[395] =  9.79999999999999982e-01;
	S->w[396] =  9.84999999999999987e-01;
	S->w[397] =  3.00000000000000000e+00;
	S->w[398] =  3.95000000000000018e-01;
	S->w[399] =  2.50000000000000000e+01;
	S->w[400] =  1.00000000000000000e+01;
	S->w[401] =  1.00000000000000000e+01;
	S->w[402] =  2.00000000000000000e+02;
	S->w[403] = -1.00000000000000000e+02;
	S->w[404] =  6.00000000000000000e+01;
	S->w[405] = -6.00000000000000000e+01;
	S->w[406] =  3.00000000000000000e+00;
	S->w[407] =  3.00000000000000000e+02;
	S->w[408] = -2.50000000000000000e+02;
	S->w[409] =  5.00000000000000028e-02;
	S->w[410] =  1.00000000000000000e+00;
	S->w[411] =  9.50000000000000000e+02;
	S->w[412] =  1.00000000000000006e-01;
	S->w[413] =  1.00000000000000000e+01;
	S->iw[2*NZC+0] = 0; S->iw[2*NZC+NEVT+0] = 313;
	S->iw[2*NZC+1] = 0; S->iw[2*NZC+NEVT+1] = 314;
	S->iw[2*NZC+2] = 0; S->iw[2*NZC+NEVT+2] = 315;
	S->iw[2*NZC+3] = 0; S->iw[2*NZC+NEVT+3] = 316;
	S->iw[2*NZC+4] = 0; S->iw[2*NZC+NEVT+4] = 317;
	S->iw[2*NZC+5] = 0; S->iw[2*NZC+NEVT+5] = 318;
	S->iw[2*NZC+6] = 0; S->iw[2*NZC+NEVT+6] = 319;
	S->iw[2*NZC+7] = 0; S->iw[2*NZC+NEVT+7] = 320;
	S->iw[2*NZC+8] = 0; S->iw[2*NZC+NEVT+8] = 321;
	S->iw[2*NZC+9] = 0; S->iw[2*NZC+NEVT+9] = 322;
	S->iw[2*NZC+10] = 0; S->iw[2*NZC+NEVT+10] = 323;
	S->iw[2*NZC+11] = 0; S->iw[2*NZC+NEVT+11] = 324;
	S->iw[2*NZC+12] = 0; S->iw[2*NZC+NEVT+12] = 325;
	S->iw[2*NZC+13] = 0; S->iw[2*NZC+NEVT+13] = 326;
	S->iw[2*NZC+14] = 0; S->iw[2*NZC+NEVT+14] = 327;
	S->iw[2*NZC+15] = 0; S->iw[2*NZC+NEVT+15] = 328;
	S->iw[2*NZC+16] = 0; S->iw[2*NZC+NEVT+16] = 329;
	S->iw[2*NZC+17] = 0; S->iw[2*NZC+NEVT+17] = 330;
	S->iw[2*NZC+18] = 0; S->iw[2*NZC+NEVT+18] = 331;
	S->iw[2*NZC+19] = 0; S->iw[2*NZC+NEVT+19] = 332;
	S->iw[2*NZC+20] = 0; S->iw[2*NZC+NEVT+20] = 333;
	S->iw[2*NZC+21] = 0; S->iw[2*NZC+NEVT+21] = 334;
	S->iw[2*NZC+22] = 0; S->iw[2*NZC+NEVT+22] = 335;
	S->iw[2*NZC+23] = 0; S->iw[2*NZC+NEVT+23] = 336;
	S->iw[2*NZC+24] = 0; S->iw[2*NZC+NEVT+24] = 337;
	S->iw[2*NZC+25] = 0; S->iw[2*NZC+NEVT+25] = 338;
	S->iw[2*NZC+26] = 0; S->iw[2*NZC+NEVT+26] = 339;
	S->iw[2*NZC+27] = 0; S->iw[2*NZC+NEVT+27] = 340;
	S->iw[2*NZC+28] = 0; S->iw[2*NZC+NEVT+28] = 341;
	S->iw[2*NZC+29] = 0; S->iw[2*NZC+NEVT+29] = 342;
	S->iw[2*NZC+30] = 0; S->iw[2*NZC+NEVT+30] = 343;
	S->iw[2*NZC+31] = 0; S->iw[2*NZC+NEVT+31] = 344;
	S->iw[2*NZC+32] = 0; S->iw[2*NZC+NEVT+32] = 345;
	S->iw[2*NZC+33] = 0; S->iw[2*NZC+NEVT+33] = 346;
	S->iw[2*NZC+34] = 0; S->iw[2*NZC+NEVT+34] = 347;
	S->iw[2*NZC+35] = 0; S->iw[2*NZC+NEVT+35] = 348;
	S->iw[2*NZC+36] = 0; S->iw[2*NZC+NEVT+36] = 349;
	S->iw[2*NZC+37] = 0; S->iw[2*NZC+NEVT+37] = 350;
	S->iw[2*NZC+38] = 0; S->iw[2*NZC+NEVT+38] = 351;
	S->iw[2*NZC+39] = 0; S->iw[2*NZC+NEVT+39] = 352;
	S->iw[2*NZC+40] = 0; S->iw[2*NZC+NEVT+40] = 353;
	S->iw[2*NZC+41] = 0; S->iw[2*NZC+NEVT+41] = 354;
	S->iw[2*NZC+42] = 0; S->iw[2*NZC+NEVT+42] = 355;
	S->iw[2*NZC+43] = 0; S->iw[2*NZC+NEVT+43] = 356;
	S->iw[2*NZC+44] = 0; S->iw[2*NZC+NEVT+44] = 357;
	S->iw[2*NZC+45] = 0; S->iw[2*NZC+NEVT+45] = 358;
	S->iw[2*NZC+46] = 0; S->iw[2*NZC+NEVT+46] = 359;
	S->iw[2*NZC+47] = 0; S->iw[2*NZC+NEVT+47] = 360;
	S->iw[2*NZC+48] = 0; S->iw[2*NZC+NEVT+48] = 361;
	S->iw[2*NZC+49] = 0; S->iw[2*NZC+NEVT+49] = 362;
	S->iw[2*NZC+50] = 0; S->iw[2*NZC+NEVT+50] = 363;
	S->iw[2*NZC+51] = 0; S->iw[2*NZC+NEVT+51] = 364;
	S->iw[2*NZC+52] = 0; S->iw[2*NZC+NEVT+52] = 365;
	S->iw[2*NZC+53] = 0; S->iw[2*NZC+NEVT+53] = 366;
	S->iw[2*NZC+54] = 0; S->iw[2*NZC+NEVT+54] = 367;
	S->iw[2*NZC+55] = 0; S->iw[2*NZC+NEVT+55] = 368;
	S->iw[2*NZC+56] = 0; S->iw[2*NZC+NEVT+56] = 369;
	S->iw[2*NZC+57] = 0; S->iw[2*NZC+NEVT+57] = 370;
	S->iw[2*NZC+58] = 0; S->iw[2*NZC+NEVT+58] = 371;
	S->iw[2*NZC+59] = 0; S->iw[2*NZC+NEVT+59] = 372;
	S->iw[2*NZC+60] = 0; S->iw[2*NZC+NEVT+60] = 373;
	S->iw[2*NZC+61] = 0; S->iw[2*NZC+NEVT+61] = 374;
	S->iw[2*NZC+62] = 0; S->iw[2*NZC+NEVT+62] = 375;
	S->iw[2*NZC+63] = 0; S->iw[2*NZC+NEVT+63] = 376;
	S->iw[2*NZC+64] = 0; S->iw[2*NZC+NEVT+64] = 377;
	S->iw[2*NZC+65] = 0; S->iw[2*NZC+NEVT+65] = 378;
	S->iw[2*NZC+66] = 0; S->iw[2*NZC+NEVT+66] = 379;
	S->iw[2*NZC+67] = 0; S->iw[2*NZC+NEVT+67] = 380;
	S->iw[2*NZC+68] = 0; S->iw[2*NZC+NEVT+68] = 381;
	S->iw[2*NZC+69] = 0; S->iw[2*NZC+NEVT+69] = 382;
	S->iw[2*NZC+70] = 1; S->iw[2*NZC+NEVT+70] = 0;
	S->iw[2*NZC+71] = 1; S->iw[2*NZC+NEVT+71] = 0;
	eev(S->w[0],&S->w[1],&S->w[1],&S->w[2*NEQ+NPAR+NDFA+1]);
#ifdef EVTHYST
	for(i=0;i<NEVT;i++) {
		if(S->iw[2*NZC+NEVT+i]>0) {
			if(S->w[S->iw[2*NZC+NEVT+i]]==0.0) { S->iw[2*i]=0; S->iw[2*i+1]=0; }
			else                               { S->iw[2*i]=1; S->iw[2*i+1]=1; }
		}
		else {
			S->iw[2*i]=(S->w[2*NEQ+NPAR+NDFA+1+i]>EVTHYST ? 1 : 0);
			S->iw[2*i+1]=(S->w[2*NEQ+NPAR+NDFA+1+i]>-EVTHYST ? 1 : 0);
		}
	}
#else
	for(i=0;i<NEVT;i++)
		if(S->iw[2*NZC+NEVT+i]>0) {
			if(S->w[S->iw[2*NZC+NEVT+i]]==0.0) S->iw[i]=0; else S->iw[i]=1;
		}
		else
			S->iw[i]=(S->w[2*NEQ+NPAR+NDFA+1+i]>0.0 ? 1 : 0);
#endif

	for(i=0;i<NDIFF;i++) S->w[i+NEQ+NPAR+1]=0.0;

	inpfn(S->w[0],u);
	for(i=0;i<NINP;i++) S->w[i+NDIFF+NIX1-NINP+1]=u[i];
	numdiffinp(S->w,1);
	numdiffinp(S->w,1);
	if(ic) for(i=0,j=0;i<NDIFF;i++) if(icvis[i]) { if(!IS_UNDEF(ic[j])) S->w[i+1]=ic[j]; j++; }
	if(p) for(i=0;i<NPAR;i++) S->w[i+NEQ+1]=p[i];
	RunEvents(S,S->w,S->iw,1,311,EVTITER);
	i=cpr(S->w[0],&S->w[1]);
	S->w[NEQ+NPAR+1]=0.0;
	fp(NEQ,S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
	if(IS_UNDEF(S->w[NEQ+NPAR+1])) {
		SolverError(S,0,"index-1 and derivative evaluation failure");
		return;
	}
#if INITCONITER>0
	for(j=0;j<20;j++) {
#endif
#if INITCONITER>0
		i=ProjectInitial(S->w[0],&S->w[1],INITCONTOL,INITCONITER,icmask,INITTOL,INITITER,INITWEIGHT);
		if(i>0 && i!=3) {
			SolverError(S,0,"constraint projection failure");
			return;
		}
		fp(NEQ,S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
		if(IS_UNDEF(S->w[NEQ+NPAR+1])) {
			SolverError(S,0,"index-1 and derivative evaluation failure");
			return;
		}
#endif
		i=cpr(S->w[0],&S->w[1]);
		if(i>0) {
			fp(NEQ,S->w[0],&S->w[1],&S->w[NEQ+NPAR+1]);
			if(IS_UNDEF(S->w[NEQ+NPAR+1])) {
				SolverError(S,0,"index-1 and derivative evaluation failure");
				return;
			}
		}
#if INITCONITER>0
		if(i<1) break;
	}
#endif
	eev(S->w[0],&S->w[1],&S->w[1],&S->w[2*NEQ+NPAR+NDFA+1]);
	RunEvents(S,S->w,S->iw,0,311,EVTITER);
	SolverOutputs(y,S);
}

/*
	Parametrized simulation driver
*/
#define EPT 0

#ifdef FROM_MAPLE
#include <time.h>

EXP long M_DECL ParamDriverMC(double t0, double dt, long npts, long stepsperpt, double *ic, double *p, double *out, char *errbuf, long internal, ALGEB halt)
#else
EXP long M_DECL ParamDriverMC(double t0, double dt, long npts, long stepsperpt, double *ic, double *p, double *out, char *errbuf, long internal)
#endif
{
	double u[NINP],y[NOUT+1];
	long i,j,k;
#ifdef FROM_MAPLE
	long ictr=0,pct=0;
	char buf[200];
	double tv1,tv2;
#endif
	SolverStruct S;

	/* Setup */
	for(i=0;i<(npts+EPT*(npts-1))*(NOUT+1);i++) out[i]=*dsn_undef;
	S.w=(double*)malloc((7+2*NEQ+NPAR+NDFA+NEVT)*sizeof(double));
	if(internal==0) S.err=0; else S.err=-1;
	S.buf=errbuf;
	SolverSetup(t0,ic,u,p,y,dt,&S);
	/* Output */
	out[0]=t0; for(j=0;j<NOUT;j++) out[j+1]=y[j];
	/* Integration loop */
#ifdef FROM_MAPLE
	tv1=clock()/(1.0*CLOCKS_PER_SEC);
#endif
	k=1;
	for(i=1;i<npts;i++) {
		for(j=0;j<stepsperpt;j++) {
			/* Take a step with states */
			RK4Step(u,&S);
			if( S.err>0 ) break;
#ifdef FROM_MAPLE
			ictr++;
			if(ictr>=100) {
				if( kv->getInterruptValue() ) {
					free(S.w);
					return(i);
				}
				tv2=clock()/(1.0*CLOCKS_PER_SEC);
				if(tv2-tv1>0.5) {
					if( halt!=NULL && !kv->isUnassignedName(halt) ) {
						free(S.w);
						return(i);
					}
					tv1=tv2;
				}
				ictr=0;
			}
#endif
		}
#ifdef FROM_MAPLE
		j=(100*i)/(npts-1);
		if(j>pct) {
			pct=j;
			sprintf(buf,"ProgressUpdate: %li %f",(long)pct,S.w[0]);
			kv->userinfo(1,"MapleSimProgressUpdate",buf);
		}
#endif
		/* Output */
#if EPT==1
		out[k*(NOUT+1)]=S.w[0]; for(j=0;j<NOUT;j++) out[k*(NOUT+1)+j+1]=S.py[j];
		k++;
#endif
		SolverOutputs(y,&S);
		out[k*(NOUT+1)]=S.w[0]; for(j=0;j<NOUT;j++) out[k*(NOUT+1)+j+1]=y[j];
		k++;
	}
#ifdef _SOLVER_TERMINATE
	if(i==npts)
		SolverTerminate(&S);
#endif

	free(S.w);
	return(k);
}

/*
	Old interface - maintain for backward compatibility
*/
EXP long M_DECL ParamDriverC(double t0, double dt, long npts, double *ic, double *p, double *out, char *errbuf, long internal)
{
#ifdef FROM_MAPLE
	ALGEB a=NULL;

	return ParamDriverMC(t0,dt,npts,1,ic,p,out,errbuf,internal,a);
#else
	return ParamDriverMC(t0,dt,npts,1,ic,p,out,errbuf,internal);
#endif
}

#ifdef FROM_MAPLE
EXP ALGEB M_DECL ParamDriver( MKernelVector kv_in, ALGEB *args )
{
	double t0,tf,dt,*ic,*p,*out;
	M_INT nargs,bounds[4],npts,naout,stepsperpt,sppa=0,i;
	RTableSettings s;
	ALGEB outd,halt;
	char buf[10000];

	kv=kv_in;
	nargs=kv->numArgs((ALGEB)args);
	if( nargs<5 || nargs>7 )
		kv->error("incorrect number of arguments");

	/* Process time vals */
	if( !kv->isNumeric(args[1]) )
		kv->error("argument #1, the initial time, must be numeric");
	t0=kv->mapleToFloat64(args[1]);
	if( !kv->isNumeric(args[2]) )
		kv->error("argument #2, the final time, must be numeric");
	tf=kv->mapleToFloat64(args[2]);
	if( t0>=tf )
		kv->error("the final time must be larger than the initial time");
	if( !kv->isNumeric(args[3]) )
		kv->error("argument #3, the time step, must be a positive numeric value");
	dt=kv->mapleToFloat64(args[3]);
	if(dt<=0)
		kv->error("argument #3, the time step, must be a positive numeric value");

	/* Check for presence of stepsperpt argument */
	if( kv->isInteger(args[4]) && (stepsperpt=kv->mapleToInteger32(args[4]))>0 )
		sppa=1;
	else
		stepsperpt=1;
	npts=(M_INT)floor((tf+1e-10*dt-t0)/(stepsperpt*dt))+1;

	/* Processing ic in */
	if( NDIFF==0 )
		ic=NULL;
	else if( kv->isInteger(args[4+sppa]) && kv->mapleToInteger32(args[4+sppa])==0 )
		ic=NULL;
	else if( !kv->isRTable(args[4+sppa]) ) {
		ic=NULL;
		kv->error("argument #%1, the initial data, must be a 1..ndiff rtable",kv->toMapleInteger(4+sppa));
	}
	else {
		kv->rtableGetSettings(&s,args[4+sppa]);
		if( s.storage != RTABLE_RECT || s.data_type != RTABLE_FLOAT64 ||
			 s.num_dimensions != 1 || kv->rtableLowerBound(args[4+sppa],1)!=1 ||
			 kv->rtableUpperBound(args[4+sppa],1) != NSDIFF )
			kv->error("argument #%1, the initial data, must be a 1..ndiff rtable",kv->toMapleInteger(4+sppa));
		ic=(double *)kv->rtableData(args[4+sppa]);
	}

	/* Processing parameters in */
	if( NPAR==0 )
		p=NULL;
	else if( kv->isInteger(args[5+sppa]) && kv->mapleToInteger32(args[5+sppa])==0 )
		p=NULL;
	else if( !kv->isRTable(args[5+sppa]) ) {
		p=NULL;
		kv->error("argument #%1, the parameter data, must be a 1..npar rtable",kv->toMapleInteger(5+sppa));
	}
	else {
		kv->rtableGetSettings(&s,args[5+sppa]);
		if( s.storage != RTABLE_RECT || s.data_type != RTABLE_FLOAT64 ||
			 s.num_dimensions != 1 || kv->rtableLowerBound(args[5+sppa],1)!=1 ||
			 kv->rtableUpperBound(args[5+sppa],1) != NPAR )
			kv->error("argument #%1, the parameter data, must be a 1..npar rtable",kv->toMapleInteger(5+sppa));
		p=(double *)kv->rtableData(args[5+sppa]);
	}

	/* Output data table */
	if( nargs==6+sppa ) {
		outd=NULL;
		if( !kv->isRTable(args[6+sppa]) ) {
			out=NULL;
			naout=0;
			kv->error("argument #%1, the output data, must be a 1..npts,1..nout+1 C_order rtable",kv->toMapleInteger(6+sppa));
		}
		else {
			kv->rtableGetSettings(&s,args[6+sppa]);
			if( s.storage != RTABLE_RECT || s.data_type != RTABLE_FLOAT64 ||
			 	s.order != RTABLE_C || s.num_dimensions != 2 ||
			 	kv->rtableLowerBound(args[6+sppa],1)!=1 ||
			 	kv->rtableLowerBound(args[6+sppa],2)!=1 ||
			 	kv->rtableUpperBound(args[6+sppa],2) != NOUT+1 )
				kv->error("argument #%1, the output data, must be a 1..npts,1..nout+1 C_order rtable",kv->toMapleInteger(6+sppa));
			naout=kv->rtableUpperBound(args[6+sppa],1);
			if( naout<1 )
				kv->error("argument #%1, the output data, must have at least 1 output slot",kv->toMapleInteger(6+sppa));
			out=(double *)kv->rtableData(args[6+sppa]);
			if(naout<npts+EPT*(npts-1)) npts=(EPT+naout)/(EPT+1);
		}
	}
	else {
		kv->rtableGetDefaults(&s);
		bounds[0]=1; bounds[1]=npts+EPT*(npts+1);
		bounds[2]=1; bounds[3]=NOUT+1;
		s.storage=RTABLE_RECT;
		s.data_type=RTABLE_FLOAT64;
		s.order=RTABLE_C;
		s.num_dimensions=2;
		s.subtype=RTABLE_ARRAY;
		outd=kv->rtableCreate(&s,NULL,bounds);
		out=(double *)kv->rtableData(outd);
		naout=npts+EPT*(npts+1);
	}
	for(i=0;i<naout*(NOUT+1);i++) out[i]=*dsn_undef;

	halt=kv->toMapleName("_HALT_MAPLESIM_INTEGRATION",TRUE);

	i=ParamDriverMC(t0,dt,npts,stepsperpt,ic,p,out,buf,1,halt);

	/* All done */
	if(outd==NULL)
		return(kv->toMapleInteger(i));
	else
		return(outd);
}
#endif
